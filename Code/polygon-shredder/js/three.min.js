var THREE={REVISION:"73"};"function"==typeof define&&define.amd?define("three",THREE):"undefined"!=typeof exports&&"undefined"!=typeof module&&(module.exports=THREE),void 0!==self.requestAnimationFrame&&void 0!==self.cancelAnimationFrame||function(){for(var t=0,e=["ms","moz","webkit","o"],r=0;r<e.length&&!self.requestAnimationFrame;++r)self.requestAnimationFrame=self[e[r]+"RequestAnimationFrame"],self.cancelAnimationFrame=self[e[r]+"CancelAnimationFrame"]||self[e[r]+"CancelRequestAnimationFrame"];void 0===self.requestAnimationFrame&&void 0!==self.setTimeout&&(self.requestAnimationFrame=function(e){var r=Date.now(),i=Math.max(0,16-(r-t)),n=self.setTimeout((function(){e(r+i)}),i);return t=r+i,n}),void 0===self.cancelAnimationFrame&&void 0!==self.clearTimeout&&(self.cancelAnimationFrame=function(t){self.clearTimeout(t)})}(),void 0===self.performance&&(self.performance={}),void 0===self.performance.now&&function(){var t=Date.now();self.performance.now=function(){return Date.now()-t}}(),void 0===Number.EPSILON&&(Number.EPSILON=Math.pow(2,-52)),void 0===Math.sign&&(Math.sign=function(t){return t<0?-1:t>0?1:+t}),void 0===Function.prototype.name&&void 0!==Object.defineProperty&&Object.defineProperty(Function.prototype,"name",{get:function(){return this.toString().match(/^\s*function\s*(\S*)\s*\(/)[1]}}),THREE.MOUSE={LEFT:0,MIDDLE:1,RIGHT:2},THREE.CullFaceNone=0,THREE.CullFaceBack=1,THREE.CullFaceFront=2,THREE.CullFaceFrontBack=3,THREE.FrontFaceDirectionCW=0,THREE.FrontFaceDirectionCCW=1,THREE.BasicShadowMap=0,THREE.PCFShadowMap=1,THREE.PCFSoftShadowMap=2,THREE.FrontSide=0,THREE.BackSide=1,THREE.DoubleSide=2,THREE.FlatShading=1,THREE.SmoothShading=2,THREE.NoColors=0,THREE.FaceColors=1,THREE.VertexColors=2,THREE.NoBlending=0,THREE.NormalBlending=1,THREE.AdditiveBlending=2,THREE.SubtractiveBlending=3,THREE.MultiplyBlending=4,THREE.CustomBlending=5,THREE.AddEquation=100,THREE.SubtractEquation=101,THREE.ReverseSubtractEquation=102,THREE.MinEquation=103,THREE.MaxEquation=104,THREE.ZeroFactor=200,THREE.OneFactor=201,THREE.SrcColorFactor=202,THREE.OneMinusSrcColorFactor=203,THREE.SrcAlphaFactor=204,THREE.OneMinusSrcAlphaFactor=205,THREE.DstAlphaFactor=206,THREE.OneMinusDstAlphaFactor=207,THREE.DstColorFactor=208,THREE.OneMinusDstColorFactor=209,THREE.SrcAlphaSaturateFactor=210,THREE.NeverDepth=0,THREE.AlwaysDepth=1,THREE.LessDepth=2,THREE.LessEqualDepth=3,THREE.EqualDepth=4,THREE.GreaterEqualDepth=5,THREE.GreaterDepth=6,THREE.NotEqualDepth=7,THREE.MultiplyOperation=0,THREE.MixOperation=1,THREE.AddOperation=2,THREE.UVMapping=300,THREE.CubeReflectionMapping=301,THREE.CubeRefractionMapping=302,THREE.EquirectangularReflectionMapping=303,THREE.EquirectangularRefractionMapping=304,THREE.SphericalReflectionMapping=305,THREE.RepeatWrapping=1e3,THREE.ClampToEdgeWrapping=1001,THREE.MirroredRepeatWrapping=1002,THREE.NearestFilter=1003,THREE.NearestMipMapNearestFilter=1004,THREE.NearestMipMapLinearFilter=1005,THREE.LinearFilter=1006,THREE.LinearMipMapNearestFilter=1007,THREE.LinearMipMapLinearFilter=1008,THREE.UnsignedByteType=1009,THREE.ByteType=1010,THREE.ShortType=1011,THREE.UnsignedShortType=1012,THREE.IntType=1013,THREE.UnsignedIntType=1014,THREE.FloatType=1015,THREE.HalfFloatType=1025,THREE.UnsignedShort4444Type=1016,THREE.UnsignedShort5551Type=1017,THREE.UnsignedShort565Type=1018,THREE.AlphaFormat=1019,THREE.RGBFormat=1020,THREE.RGBAFormat=1021,THREE.LuminanceFormat=1022,THREE.LuminanceAlphaFormat=1023,THREE.RGBEFormat=THREE.RGBAFormat,THREE.RGB_S3TC_DXT1_Format=2001,THREE.RGBA_S3TC_DXT1_Format=2002,THREE.RGBA_S3TC_DXT3_Format=2003,THREE.RGBA_S3TC_DXT5_Format=2004,THREE.RGB_PVRTC_4BPPV1_Format=2100,THREE.RGB_PVRTC_2BPPV1_Format=2101,THREE.RGBA_PVRTC_4BPPV1_Format=2102,THREE.RGBA_PVRTC_2BPPV1_Format=2103,THREE.LoopOnce=2200,THREE.LoopRepeat=2201,THREE.LoopPingPong=2202,THREE.Projector=function(){console.error("THREE.Projector has been moved to /examples/js/renderers/Projector.js."),this.projectVector=function(t,e){console.warn("THREE.Projector: .projectVector() is now vector.project()."),t.project(e)},this.unprojectVector=function(t,e){console.warn("THREE.Projector: .unprojectVector() is now vector.unproject()."),t.unproject(e)},this.pickingRay=function(t,e){console.error("THREE.Projector: .pickingRay() is now raycaster.setFromCamera().")}},THREE.CanvasRenderer=function(){console.error("THREE.CanvasRenderer has been moved to /examples/js/renderers/CanvasRenderer.js"),this.domElement=document.createElement("canvas"),this.clear=function(){},this.render=function(){},this.setClearColor=function(){},this.setSize=function(){}},THREE.Color=function(t){return 3===arguments.length?this.fromArray(arguments):this.set(t)},THREE.Color.prototype={constructor:THREE.Color,r:1,g:1,b:1,set:function(t){return t instanceof THREE.Color?this.copy(t):"number"==typeof t?this.setHex(t):"string"==typeof t&&this.setStyle(t),this},setHex:function(t){return t=Math.floor(t),this.r=(t>>16&255)/255,this.g=(t>>8&255)/255,this.b=(255&t)/255,this},setRGB:function(t,e,r){return this.r=t,this.g=e,this.b=r,this},setHSL:function(){function t(t,e,r){return r<0&&(r+=1),r>1&&(r-=1),r<1/6?t+6*(e-t)*r:r<.5?e:r<2/3?t+6*(e-t)*(2/3-r):t}return function(e,r,i){if(e=THREE.Math.euclideanModulo(e,1),r=THREE.Math.clamp(r,0,1),i=THREE.Math.clamp(i,0,1),0===r)this.r=this.g=this.b=i;else{var n=i<=.5?i*(1+r):i+r-i*r,o=2*i-n;this.r=t(o,n,e+1/3),this.g=t(o,n,e),this.b=t(o,n,e-1/3)}return this}}(),setStyle:function(t){function e(e){void 0!==e&&parseFloat(e)<1&&console.warn("THREE.Color: Alpha component of "+t+" will be ignored.")}var r;if(r=/^((?:rgb|hsl)a?)\(\s*([^\)]*)\)/.exec(t)){var i,n=r[1],o=r[2];switch(n){case"rgb":case"rgba":if(i=/^(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*(,\s*([0-9]*\.?[0-9]+)\s*)?$/.exec(o))return this.r=Math.min(255,parseInt(i[1],10))/255,this.g=Math.min(255,parseInt(i[2],10))/255,this.b=Math.min(255,parseInt(i[3],10))/255,e(i[5]),this;if(i=/^(\d+)\%\s*,\s*(\d+)\%\s*,\s*(\d+)\%\s*(,\s*([0-9]*\.?[0-9]+)\s*)?$/.exec(o))return this.r=Math.min(100,parseInt(i[1],10))/100,this.g=Math.min(100,parseInt(i[2],10))/100,this.b=Math.min(100,parseInt(i[3],10))/100,e(i[5]),this;break;case"hsl":case"hsla":if(i=/^([0-9]*\.?[0-9]+)\s*,\s*(\d+)\%\s*,\s*(\d+)\%\s*(,\s*([0-9]*\.?[0-9]+)\s*)?$/.exec(o)){var a=parseFloat(i[1])/360,s=parseInt(i[2],10)/100,h=parseInt(i[3],10)/100;return e(i[5]),this.setHSL(a,s,h)}}}else if(r=/^\#([A-Fa-f0-9]+)$/.exec(t)){var c,u=(c=r[1]).length;if(3===u)return this.r=parseInt(c.charAt(0)+c.charAt(0),16)/255,this.g=parseInt(c.charAt(1)+c.charAt(1),16)/255,this.b=parseInt(c.charAt(2)+c.charAt(2),16)/255,this;if(6===u)return this.r=parseInt(c.charAt(0)+c.charAt(1),16)/255,this.g=parseInt(c.charAt(2)+c.charAt(3),16)/255,this.b=parseInt(c.charAt(4)+c.charAt(5),16)/255,this}t&&t.length>0&&(void 0!==(c=THREE.ColorKeywords[t])?this.setHex(c):console.warn("THREE.Color: Unknown color "+t));return this},clone:function(){return new this.constructor(this.r,this.g,this.b)},copy:function(t){return this.r=t.r,this.g=t.g,this.b=t.b,this},copyGammaToLinear:function(t,e){return void 0===e&&(e=2),this.r=Math.pow(t.r,e),this.g=Math.pow(t.g,e),this.b=Math.pow(t.b,e),this},copyLinearToGamma:function(t,e){void 0===e&&(e=2);var r=e>0?1/e:1;return this.r=Math.pow(t.r,r),this.g=Math.pow(t.g,r),this.b=Math.pow(t.b,r),this},convertGammaToLinear:function(){var t=this.r,e=this.g,r=this.b;return this.r=t*t,this.g=e*e,this.b=r*r,this},convertLinearToGamma:function(){return this.r=Math.sqrt(this.r),this.g=Math.sqrt(this.g),this.b=Math.sqrt(this.b),this},getHex:function(){return 255*this.r<<16^255*this.g<<8^255*this.b<<0},getHexString:function(){return("000000"+this.getHex().toString(16)).slice(-6)},getHSL:function(t){var e,r,i=t||{h:0,s:0,l:0},n=this.r,o=this.g,a=this.b,s=Math.max(n,o,a),h=Math.min(n,o,a),c=(h+s)/2;if(h===s)e=0,r=0;else{var u=s-h;switch(r=c<=.5?u/(s+h):u/(2-s-h),s){case n:e=(o-a)/u+(o<a?6:0);break;case o:e=(a-n)/u+2;break;case a:e=(n-o)/u+4}e/=6}return i.h=e,i.s=r,i.l=c,i},getStyle:function(){return"rgb("+(255*this.r|0)+","+(255*this.g|0)+","+(255*this.b|0)+")"},offsetHSL:function(t,e,r){var i=this.getHSL();return i.h+=t,i.s+=e,i.l+=r,this.setHSL(i.h,i.s,i.l),this},add:function(t){return this.r+=t.r,this.g+=t.g,this.b+=t.b,this},addColors:function(t,e){return this.r=t.r+e.r,this.g=t.g+e.g,this.b=t.b+e.b,this},addScalar:function(t){return this.r+=t,this.g+=t,this.b+=t,this},multiply:function(t){return this.r*=t.r,this.g*=t.g,this.b*=t.b,this},multiplyScalar:function(t){return this.r*=t,this.g*=t,this.b*=t,this},lerp:function(t,e){return this.r+=(t.r-this.r)*e,this.g+=(t.g-this.g)*e,this.b+=(t.b-this.b)*e,this},equals:function(t){return t.r===this.r&&t.g===this.g&&t.b===this.b},fromArray:function(t,e){return void 0===e&&(e=0),this.r=t[e],this.g=t[e+1],this.b=t[e+2],this},toArray:function(t,e){return void 0===t&&(t=[]),void 0===e&&(e=0),t[e]=this.r,t[e+1]=this.g,t[e+2]=this.b,t}},THREE.ColorKeywords={aliceblue:15792383,antiquewhite:16444375,aqua:65535,aquamarine:8388564,azure:15794175,beige:16119260,bisque:16770244,black:0,blanchedalmond:16772045,blue:255,blueviolet:9055202,brown:10824234,burlywood:14596231,cadetblue:6266528,chartreuse:8388352,chocolate:13789470,coral:16744272,cornflowerblue:6591981,cornsilk:16775388,crimson:14423100,cyan:65535,darkblue:139,darkcyan:35723,darkgoldenrod:12092939,darkgray:11119017,darkgreen:25600,darkgrey:11119017,darkkhaki:12433259,darkmagenta:9109643,darkolivegreen:5597999,darkorange:16747520,darkorchid:10040012,darkred:9109504,darksalmon:15308410,darkseagreen:9419919,darkslateblue:4734347,darkslategray:3100495,darkslategrey:3100495,darkturquoise:52945,darkviolet:9699539,deeppink:16716947,deepskyblue:49151,dimgray:6908265,dimgrey:6908265,dodgerblue:2003199,firebrick:11674146,floralwhite:16775920,forestgreen:2263842,fuchsia:16711935,gainsboro:14474460,ghostwhite:16316671,gold:16766720,goldenrod:14329120,gray:8421504,green:32768,greenyellow:11403055,grey:8421504,honeydew:15794160,hotpink:16738740,indianred:13458524,indigo:4915330,ivory:16777200,khaki:15787660,lavender:15132410,lavenderblush:16773365,lawngreen:8190976,lemonchiffon:16775885,lightblue:11393254,lightcoral:15761536,lightcyan:14745599,lightgoldenrodyellow:16448210,lightgray:13882323,lightgreen:9498256,lightgrey:13882323,lightpink:16758465,lightsalmon:16752762,lightseagreen:2142890,lightskyblue:8900346,lightslategray:7833753,lightslategrey:7833753,lightsteelblue:11584734,lightyellow:16777184,lime:65280,limegreen:3329330,linen:16445670,magenta:16711935,maroon:8388608,mediumaquamarine:6737322,mediumblue:205,mediumorchid:12211667,mediumpurple:9662683,mediumseagreen:3978097,mediumslateblue:8087790,mediumspringgreen:64154,mediumturquoise:4772300,mediumvioletred:13047173,midnightblue:1644912,mintcream:16121850,mistyrose:16770273,moccasin:16770229,navajowhite:16768685,navy:128,oldlace:16643558,olive:8421376,olivedrab:7048739,orange:16753920,orangered:16729344,orchid:14315734,palegoldenrod:15657130,palegreen:10025880,paleturquoise:11529966,palevioletred:14381203,papayawhip:16773077,peachpuff:16767673,peru:13468991,pink:16761035,plum:14524637,powderblue:11591910,purple:8388736,red:16711680,rosybrown:12357519,royalblue:4286945,saddlebrown:9127187,salmon:16416882,sandybrown:16032864,seagreen:3050327,seashell:16774638,sienna:10506797,silver:12632256,skyblue:8900331,slateblue:6970061,slategray:7372944,slategrey:7372944,snow:16775930,springgreen:65407,steelblue:4620980,tan:13808780,teal:32896,thistle:14204888,tomato:16737095,turquoise:4251856,violet:15631086,wheat:16113331,white:16777215,whitesmoke:16119285,yellow:16776960,yellowgreen:10145074},THREE.Quaternion=function(t,e,r,i){this._x=t||0,this._y=e||0,this._z=r||0,this._w=void 0!==i?i:1},THREE.Quaternion.prototype={constructor:THREE.Quaternion,get x(){return this._x},set x(t){this._x=t,this.onChangeCallback()},get y(){return this._y},set y(t){this._y=t,this.onChangeCallback()},get z(){return this._z},set z(t){this._z=t,this.onChangeCallback()},get w(){return this._w},set w(t){this._w=t,this.onChangeCallback()},set:function(t,e,r,i){return this._x=t,this._y=e,this._z=r,this._w=i,this.onChangeCallback(),this},clone:function(){return new this.constructor(this._x,this._y,this._z,this._w)},copy:function(t){return this._x=t.x,this._y=t.y,this._z=t.z,this._w=t.w,this.onChangeCallback(),this},setFromEuler:function(t,e){if(t instanceof THREE.Euler==!1)throw new Error("THREE.Quaternion: .setFromEuler() now expects a Euler rotation rather than a Vector3 and order.");var r=Math.cos(t._x/2),i=Math.cos(t._y/2),n=Math.cos(t._z/2),o=Math.sin(t._x/2),a=Math.sin(t._y/2),s=Math.sin(t._z/2),h=t.order;return"XYZ"===h?(this._x=o*i*n+r*a*s,this._y=r*a*n-o*i*s,this._z=r*i*s+o*a*n,this._w=r*i*n-o*a*s):"YXZ"===h?(this._x=o*i*n+r*a*s,this._y=r*a*n-o*i*s,this._z=r*i*s-o*a*n,this._w=r*i*n+o*a*s):"ZXY"===h?(this._x=o*i*n-r*a*s,this._y=r*a*n+o*i*s,this._z=r*i*s+o*a*n,this._w=r*i*n-o*a*s):"ZYX"===h?(this._x=o*i*n-r*a*s,this._y=r*a*n+o*i*s,this._z=r*i*s-o*a*n,this._w=r*i*n+o*a*s):"YZX"===h?(this._x=o*i*n+r*a*s,this._y=r*a*n+o*i*s,this._z=r*i*s-o*a*n,this._w=r*i*n-o*a*s):"XZY"===h&&(this._x=o*i*n-r*a*s,this._y=r*a*n-o*i*s,this._z=r*i*s+o*a*n,this._w=r*i*n+o*a*s),!1!==e&&this.onChangeCallback(),this},setFromAxisAngle:function(t,e){var r=e/2,i=Math.sin(r);return this._x=t.x*i,this._y=t.y*i,this._z=t.z*i,this._w=Math.cos(r),this.onChangeCallback(),this},setFromRotationMatrix:function(t){var e,r=t.elements,i=r[0],n=r[4],o=r[8],a=r[1],s=r[5],h=r[9],c=r[2],u=r[6],l=r[10],E=i+s+l;return E>0?(e=.5/Math.sqrt(E+1),this._w=.25/e,this._x=(u-h)*e,this._y=(o-c)*e,this._z=(a-n)*e):i>s&&i>l?(e=2*Math.sqrt(1+i-s-l),this._w=(u-h)/e,this._x=.25*e,this._y=(n+a)/e,this._z=(o+c)/e):s>l?(e=2*Math.sqrt(1+s-i-l),this._w=(o-c)/e,this._x=(n+a)/e,this._y=.25*e,this._z=(h+u)/e):(e=2*Math.sqrt(1+l-i-s),this._w=(a-n)/e,this._x=(o+c)/e,this._y=(h+u)/e,this._z=.25*e),this.onChangeCallback(),this},setFromUnitVectors:function(){var t,e;return function(r,i){return void 0===t&&(t=new THREE.Vector3),(e=r.dot(i)+1)<1e-6?(e=0,Math.abs(r.x)>Math.abs(r.z)?t.set(-r.y,r.x,0):t.set(0,-r.z,r.y)):t.crossVectors(r,i),this._x=t.x,this._y=t.y,this._z=t.z,this._w=e,this.normalize(),this}}(),inverse:function(){return this.conjugate().normalize(),this},conjugate:function(){return this._x*=-1,this._y*=-1,this._z*=-1,this.onChangeCallback(),this},dot:function(t){return this._x*t._x+this._y*t._y+this._z*t._z+this._w*t._w},lengthSq:function(){return this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w},length:function(){return Math.sqrt(this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w)},normalize:function(){var t=this.length();return 0===t?(this._x=0,this._y=0,this._z=0,this._w=1):(t=1/t,this._x=this._x*t,this._y=this._y*t,this._z=this._z*t,this._w=this._w*t),this.onChangeCallback(),this},multiply:function(t,e){return void 0!==e?(console.warn("THREE.Quaternion: .multiply() now only accepts one argument. Use .multiplyQuaternions( a, b ) instead."),this.multiplyQuaternions(t,e)):this.multiplyQuaternions(this,t)},multiplyQuaternions:function(t,e){var r=t._x,i=t._y,n=t._z,o=t._w,a=e._x,s=e._y,h=e._z,c=e._w;return this._x=r*c+o*a+i*h-n*s,this._y=i*c+o*s+n*a-r*h,this._z=n*c+o*h+r*s-i*a,this._w=o*c-r*a-i*s-n*h,this.onChangeCallback(),this},multiplyVector3:function(t){return console.warn("THREE.Quaternion: .multiplyVector3() has been removed. Use is now vector.applyQuaternion( quaternion ) instead."),t.applyQuaternion(this)},slerp:function(t,e){if(0===e)return this;if(1===e)return this.copy(t);var r=this._x,i=this._y,n=this._z,o=this._w,a=o*t._w+r*t._x+i*t._y+n*t._z;if(a<0?(this._w=-t._w,this._x=-t._x,this._y=-t._y,this._z=-t._z,a=-a):this.copy(t),a>=1)return this._w=o,this._x=r,this._y=i,this._z=n,this;var s=Math.acos(a),h=Math.sqrt(1-a*a);if(Math.abs(h)<.001)return this._w=.5*(o+this._w),this._x=.5*(r+this._x),this._y=.5*(i+this._y),this._z=.5*(n+this._z),this;var c=Math.sin((1-e)*s)/h,u=Math.sin(e*s)/h;return this._w=o*c+this._w*u,this._x=r*c+this._x*u,this._y=i*c+this._y*u,this._z=n*c+this._z*u,this.onChangeCallback(),this},equals:function(t){return t._x===this._x&&t._y===this._y&&t._z===this._z&&t._w===this._w},fromArray:function(t,e){return void 0===e&&(e=0),this._x=t[e],this._y=t[e+1],this._z=t[e+2],this._w=t[e+3],this.onChangeCallback(),this},toArray:function(t,e){return void 0===t&&(t=[]),void 0===e&&(e=0),t[e]=this._x,t[e+1]=this._y,t[e+2]=this._z,t[e+3]=this._w,t},onChange:function(t){return this.onChangeCallback=t,this},onChangeCallback:function(){}},THREE.Quaternion.slerp=function(t,e,r,i){return r.copy(t).slerp(e,i)},THREE.Vector2=function(t,e){this.x=t||0,this.y=e||0},THREE.Vector2.prototype={constructor:THREE.Vector2,get width(){return this.x},set width(t){this.x=t},get height(){return this.y},set height(t){this.y=t},set:function(t,e){return this.x=t,this.y=e,this},setX:function(t){return this.x=t,this},setY:function(t){return this.y=t,this},setComponent:function(t,e){switch(t){case 0:this.x=e;break;case 1:this.y=e;break;default:throw new Error("index is out of range: "+t)}},getComponent:function(t){switch(t){case 0:return this.x;case 1:return this.y;default:throw new Error("index is out of range: "+t)}},clone:function(){return new this.constructor(this.x,this.y)},copy:function(t){return this.x=t.x,this.y=t.y,this},add:function(t,e){return void 0!==e?(console.warn("THREE.Vector2: .add() now only accepts one argument. Use .addVectors( a, b ) instead."),this.addVectors(t,e)):(this.x+=t.x,this.y+=t.y,this)},addScalar:function(t){return this.x+=t,this.y+=t,this},addVectors:function(t,e){return this.x=t.x+e.x,this.y=t.y+e.y,this},addScaledVector:function(t,e){return this.x+=t.x*e,this.y+=t.y*e,this},sub:function(t,e){return void 0!==e?(console.warn("THREE.Vector2: .sub() now only accepts one argument. Use .subVectors( a, b ) instead."),this.subVectors(t,e)):(this.x-=t.x,this.y-=t.y,this)},subScalar:function(t){return this.x-=t,this.y-=t,this},subVectors:function(t,e){return this.x=t.x-e.x,this.y=t.y-e.y,this},multiply:function(t){return this.x*=t.x,this.y*=t.y,this},multiplyScalar:function(t){return isFinite(t)?(this.x*=t,this.y*=t):(this.x=0,this.y=0),this},divide:function(t){return this.x/=t.x,this.y/=t.y,this},divideScalar:function(t){return this.multiplyScalar(1/t)},min:function(t){return this.x=Math.min(this.x,t.x),this.y=Math.min(this.y,t.y),this},max:function(t){return this.x=Math.max(this.x,t.x),this.y=Math.max(this.y,t.y),this},clamp:function(t,e){return this.x=Math.max(t.x,Math.min(e.x,this.x)),this.y=Math.max(t.y,Math.min(e.y,this.y)),this},clampScalar:function(){var t,e;return function(r,i){return void 0===t&&(t=new THREE.Vector2,e=new THREE.Vector2),t.set(r,r),e.set(i,i),this.clamp(t,e)}}(),clampLength:function(t,e){var r=this.length();return this.multiplyScalar(Math.max(t,Math.min(e,r))/r),this},floor:function(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this},ceil:function(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this},round:function(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this},roundToZero:function(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this},negate:function(){return this.x=-this.x,this.y=-this.y,this},dot:function(t){return this.x*t.x+this.y*t.y},lengthSq:function(){return this.x*this.x+this.y*this.y},length:function(){return Math.sqrt(this.x*this.x+this.y*this.y)},lengthManhattan:function(){return Math.abs(this.x)+Math.abs(this.y)},normalize:function(){return this.divideScalar(this.length())},distanceTo:function(t){return Math.sqrt(this.distanceToSquared(t))},distanceToSquared:function(t){var e=this.x-t.x,r=this.y-t.y;return e*e+r*r},setLength:function(t){return this.multiplyScalar(t/this.length())},lerp:function(t,e){return this.x+=(t.x-this.x)*e,this.y+=(t.y-this.y)*e,this},lerpVectors:function(t,e,r){return this.subVectors(e,t).multiplyScalar(r).add(t),this},equals:function(t){return t.x===this.x&&t.y===this.y},fromArray:function(t,e){return void 0===e&&(e=0),this.x=t[e],this.y=t[e+1],this},toArray:function(t,e){return void 0===t&&(t=[]),void 0===e&&(e=0),t[e]=this.x,t[e+1]=this.y,t},fromAttribute:function(t,e,r){return void 0===r&&(r=0),e=e*t.itemSize+r,this.x=t.array[e],this.y=t.array[e+1],this},rotateAround:function(t,e){var r=Math.cos(e),i=Math.sin(e),n=this.x-t.x,o=this.y-t.y;return this.x=n*r-o*i+t.x,this.y=n*i+o*r+t.y,this}},THREE.Vector3=function(t,e,r){this.x=t||0,this.y=e||0,this.z=r||0},THREE.Vector3.prototype={constructor:THREE.Vector3,set:function(t,e,r){return this.x=t,this.y=e,this.z=r,this},setX:function(t){return this.x=t,this},setY:function(t){return this.y=t,this},setZ:function(t){return this.z=t,this},setComponent:function(t,e){switch(t){case 0:this.x=e;break;case 1:this.y=e;break;case 2:this.z=e;break;default:throw new Error("index is out of range: "+t)}},getComponent:function(t){switch(t){case 0:return this.x;case 1:return this.y;case 2:return this.z;default:throw new Error("index is out of range: "+t)}},clone:function(){return new this.constructor(this.x,this.y,this.z)},copy:function(t){return this.x=t.x,this.y=t.y,this.z=t.z,this},add:function(t,e){return void 0!==e?(console.warn("THREE.Vector3: .add() now only accepts one argument. Use .addVectors( a, b ) instead."),this.addVectors(t,e)):(this.x+=t.x,this.y+=t.y,this.z+=t.z,this)},addScalar:function(t){return this.x+=t,this.y+=t,this.z+=t,this},addVectors:function(t,e){return this.x=t.x+e.x,this.y=t.y+e.y,this.z=t.z+e.z,this},addScaledVector:function(t,e){return this.x+=t.x*e,this.y+=t.y*e,this.z+=t.z*e,this},sub:function(t,e){return void 0!==e?(console.warn("THREE.Vector3: .sub() now only accepts one argument. Use .subVectors( a, b ) instead."),this.subVectors(t,e)):(this.x-=t.x,this.y-=t.y,this.z-=t.z,this)},subScalar:function(t){return this.x-=t,this.y-=t,this.z-=t,this},subVectors:function(t,e){return this.x=t.x-e.x,this.y=t.y-e.y,this.z=t.z-e.z,this},multiply:function(t,e){return void 0!==e?(console.warn("THREE.Vector3: .multiply() now only accepts one argument. Use .multiplyVectors( a, b ) instead."),this.multiplyVectors(t,e)):(this.x*=t.x,this.y*=t.y,this.z*=t.z,this)},multiplyScalar:function(t){return isFinite(t)?(this.x*=t,this.y*=t,this.z*=t):(this.x=0,this.y=0,this.z=0),this},multiplyVectors:function(t,e){return this.x=t.x*e.x,this.y=t.y*e.y,this.z=t.z*e.z,this},applyEuler:function(){var t;return function(e){return e instanceof THREE.Euler==!1&&console.error("THREE.Vector3: .applyEuler() now expects a Euler rotation rather than a Vector3 and order."),void 0===t&&(t=new THREE.Quaternion),this.applyQuaternion(t.setFromEuler(e)),this}}(),applyAxisAngle:function(){var t;return function(e,r){return void 0===t&&(t=new THREE.Quaternion),this.applyQuaternion(t.setFromAxisAngle(e,r)),this}}(),applyMatrix3:function(t){var e=this.x,r=this.y,i=this.z,n=t.elements;return this.x=n[0]*e+n[3]*r+n[6]*i,this.y=n[1]*e+n[4]*r+n[7]*i,this.z=n[2]*e+n[5]*r+n[8]*i,this},applyMatrix4:function(t){var e=this.x,r=this.y,i=this.z,n=t.elements;return this.x=n[0]*e+n[4]*r+n[8]*i+n[12],this.y=n[1]*e+n[5]*r+n[9]*i+n[13],this.z=n[2]*e+n[6]*r+n[10]*i+n[14],this},applyProjection:function(t){var e=this.x,r=this.y,i=this.z,n=t.elements,o=1/(n[3]*e+n[7]*r+n[11]*i+n[15]);return this.x=(n[0]*e+n[4]*r+n[8]*i+n[12])*o,this.y=(n[1]*e+n[5]*r+n[9]*i+n[13])*o,this.z=(n[2]*e+n[6]*r+n[10]*i+n[14])*o,this},applyQuaternion:function(t){var e=this.x,r=this.y,i=this.z,n=t.x,o=t.y,a=t.z,s=t.w,h=s*e+o*i-a*r,c=s*r+a*e-n*i,u=s*i+n*r-o*e,l=-n*e-o*r-a*i;return this.x=h*s+l*-n+c*-a-u*-o,this.y=c*s+l*-o+u*-n-h*-a,this.z=u*s+l*-a+h*-o-c*-n,this},project:function(){var t;return function(e){return void 0===t&&(t=new THREE.Matrix4),t.multiplyMatrices(e.projectionMatrix,t.getInverse(e.matrixWorld)),this.applyProjection(t)}}(),unproject:function(){var t;return function(e){return void 0===t&&(t=new THREE.Matrix4),t.multiplyMatrices(e.matrixWorld,t.getInverse(e.projectionMatrix)),this.applyProjection(t)}}(),transformDirection:function(t){var e=this.x,r=this.y,i=this.z,n=t.elements;return this.x=n[0]*e+n[4]*r+n[8]*i,this.y=n[1]*e+n[5]*r+n[9]*i,this.z=n[2]*e+n[6]*r+n[10]*i,this.normalize(),this},divide:function(t){return this.x/=t.x,this.y/=t.y,this.z/=t.z,this},divideScalar:function(t){return this.multiplyScalar(1/t)},min:function(t){return this.x=Math.min(this.x,t.x),this.y=Math.min(this.y,t.y),this.z=Math.min(this.z,t.z),this},max:function(t){return this.x=Math.max(this.x,t.x),this.y=Math.max(this.y,t.y),this.z=Math.max(this.z,t.z),this},clamp:function(t,e){return this.x=Math.max(t.x,Math.min(e.x,this.x)),this.y=Math.max(t.y,Math.min(e.y,this.y)),this.z=Math.max(t.z,Math.min(e.z,this.z)),this},clampScalar:function(){var t,e;return function(r,i){return void 0===t&&(t=new THREE.Vector3,e=new THREE.Vector3),t.set(r,r,r),e.set(i,i,i),this.clamp(t,e)}}(),clampLength:function(t,e){var r=this.length();return this.multiplyScalar(Math.max(t,Math.min(e,r))/r),this},floor:function(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this},ceil:function(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this},round:function(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this},roundToZero:function(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this.z=this.z<0?Math.ceil(this.z):Math.floor(this.z),this},negate:function(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this},dot:function(t){return this.x*t.x+this.y*t.y+this.z*t.z},lengthSq:function(){return this.x*this.x+this.y*this.y+this.z*this.z},length:function(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z)},lengthManhattan:function(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)},normalize:function(){return this.divideScalar(this.length())},setLength:function(t){return this.multiplyScalar(t/this.length())},lerp:function(t,e){return this.x+=(t.x-this.x)*e,this.y+=(t.y-this.y)*e,this.z+=(t.z-this.z)*e,this},lerpVectors:function(t,e,r){return this.subVectors(e,t).multiplyScalar(r).add(t),this},cross:function(t,e){if(void 0!==e)return console.warn("THREE.Vector3: .cross() now only accepts one argument. Use .crossVectors( a, b ) instead."),this.crossVectors(t,e);var r=this.x,i=this.y,n=this.z;return this.x=i*t.z-n*t.y,this.y=n*t.x-r*t.z,this.z=r*t.y-i*t.x,this},crossVectors:function(t,e){var r=t.x,i=t.y,n=t.z,o=e.x,a=e.y,s=e.z;return this.x=i*s-n*a,this.y=n*o-r*s,this.z=r*a-i*o,this},projectOnVector:function(){var t,e;return function(r){return void 0===t&&(t=new THREE.Vector3),t.copy(r).normalize(),e=this.dot(t),this.copy(t).multiplyScalar(e)}}(),projectOnPlane:function(){var t;return function(e){return void 0===t&&(t=new THREE.Vector3),t.copy(this).projectOnVector(e),this.sub(t)}}(),reflect:function(){var t;return function(e){return void 0===t&&(t=new THREE.Vector3),this.sub(t.copy(e).multiplyScalar(2*this.dot(e)))}}(),angleTo:function(t){var e=this.dot(t)/(this.length()*t.length());return Math.acos(THREE.Math.clamp(e,-1,1))},distanceTo:function(t){return Math.sqrt(this.distanceToSquared(t))},distanceToSquared:function(t){var e=this.x-t.x,r=this.y-t.y,i=this.z-t.z;return e*e+r*r+i*i},setEulerFromRotationMatrix:function(t,e){console.error("THREE.Vector3: .setEulerFromRotationMatrix() has been removed. Use Euler.setFromRotationMatrix() instead.")},setEulerFromQuaternion:function(t,e){console.error("THREE.Vector3: .setEulerFromQuaternion() has been removed. Use Euler.setFromQuaternion() instead.")},getPositionFromMatrix:function(t){return console.warn("THREE.Vector3: .getPositionFromMatrix() has been renamed to .setFromMatrixPosition()."),this.setFromMatrixPosition(t)},getScaleFromMatrix:function(t){return console.warn("THREE.Vector3: .getScaleFromMatrix() has been renamed to .setFromMatrixScale()."),this.setFromMatrixScale(t)},getColumnFromMatrix:function(t,e){return console.warn("THREE.Vector3: .getColumnFromMatrix() has been renamed to .setFromMatrixColumn()."),this.setFromMatrixColumn(t,e)},setFromMatrixPosition:function(t){return this.x=t.elements[12],this.y=t.elements[13],this.z=t.elements[14],this},setFromMatrixScale:function(t){var e=this.set(t.elements[0],t.elements[1],t.elements[2]).length(),r=this.set(t.elements[4],t.elements[5],t.elements[6]).length(),i=this.set(t.elements[8],t.elements[9],t.elements[10]).length();return this.x=e,this.y=r,this.z=i,this},setFromMatrixColumn:function(t,e){var r=4*t,i=e.elements;return this.x=i[r],this.y=i[r+1],this.z=i[r+2],this},equals:function(t){return t.x===this.x&&t.y===this.y&&t.z===this.z},fromArray:function(t,e){return void 0===e&&(e=0),this.x=t[e],this.y=t[e+1],this.z=t[e+2],this},toArray:function(t,e){return void 0===t&&(t=[]),void 0===e&&(e=0),t[e]=this.x,t[e+1]=this.y,t[e+2]=this.z,t},fromAttribute:function(t,e,r){return void 0===r&&(r=0),e=e*t.itemSize+r,this.x=t.array[e],this.y=t.array[e+1],this.z=t.array[e+2],this}},THREE.Vector4=function(t,e,r,i){this.x=t||0,this.y=e||0,this.z=r||0,this.w=void 0!==i?i:1},THREE.Vector4.prototype={constructor:THREE.Vector4,set:function(t,e,r,i){return this.x=t,this.y=e,this.z=r,this.w=i,this},setX:function(t){return this.x=t,this},setY:function(t){return this.y=t,this},setZ:function(t){return this.z=t,this},setW:function(t){return this.w=t,this},setComponent:function(t,e){switch(t){case 0:this.x=e;break;case 1:this.y=e;break;case 2:this.z=e;break;case 3:this.w=e;break;default:throw new Error("index is out of range: "+t)}},getComponent:function(t){switch(t){case 0:return this.x;case 1:return this.y;case 2:return this.z;case 3:return this.w;default:throw new Error("index is out of range: "+t)}},clone:function(){return new this.constructor(this.x,this.y,this.z,this.w)},copy:function(t){return this.x=t.x,this.y=t.y,this.z=t.z,this.w=void 0!==t.w?t.w:1,this},add:function(t,e){return void 0!==e?(console.warn("THREE.Vector4: .add() now only accepts one argument. Use .addVectors( a, b ) instead."),this.addVectors(t,e)):(this.x+=t.x,this.y+=t.y,this.z+=t.z,this.w+=t.w,this)},addScalar:function(t){return this.x+=t,this.y+=t,this.z+=t,this.w+=t,this},addVectors:function(t,e){return this.x=t.x+e.x,this.y=t.y+e.y,this.z=t.z+e.z,this.w=t.w+e.w,this},addScaledVector:function(t,e){return this.x+=t.x*e,this.y+=t.y*e,this.z+=t.z*e,this.w+=t.w*e,this},sub:function(t,e){return void 0!==e?(console.warn("THREE.Vector4: .sub() now only accepts one argument. Use .subVectors( a, b ) instead."),this.subVectors(t,e)):(this.x-=t.x,this.y-=t.y,this.z-=t.z,this.w-=t.w,this)},subScalar:function(t){return this.x-=t,this.y-=t,this.z-=t,this.w-=t,this},subVectors:function(t,e){return this.x=t.x-e.x,this.y=t.y-e.y,this.z=t.z-e.z,this.w=t.w-e.w,this},multiplyScalar:function(t){return isFinite(t)?(this.x*=t,this.y*=t,this.z*=t,this.w*=t):(this.x=0,this.y=0,this.z=0,this.w=0),this},applyMatrix4:function(t){var e=this.x,r=this.y,i=this.z,n=this.w,o=t.elements;return this.x=o[0]*e+o[4]*r+o[8]*i+o[12]*n,this.y=o[1]*e+o[5]*r+o[9]*i+o[13]*n,this.z=o[2]*e+o[6]*r+o[10]*i+o[14]*n,this.w=o[3]*e+o[7]*r+o[11]*i+o[15]*n,this},divideScalar:function(t){return this.multiplyScalar(1/t)},setAxisAngleFromQuaternion:function(t){this.w=2*Math.acos(t.w);var e=Math.sqrt(1-t.w*t.w);return e<1e-4?(this.x=1,this.y=0,this.z=0):(this.x=t.x/e,this.y=t.y/e,this.z=t.z/e),this},setAxisAngleFromRotationMatrix:function(t){var e,r,i,n,o=.01,a=.1,s=t.elements,h=s[0],c=s[4],u=s[8],l=s[1],E=s[5],p=s[9],d=s[2],f=s[6],m=s[10];if(Math.abs(c-l)<o&&Math.abs(u-d)<o&&Math.abs(p-f)<o){if(Math.abs(c+l)<a&&Math.abs(u+d)<a&&Math.abs(p+f)<a&&Math.abs(h+E+m-3)<a)return this.set(1,0,0,0),this;e=Math.PI;var T=(h+1)/2,g=(E+1)/2,v=(m+1)/2,y=(c+l)/4,R=(u+d)/4,H=(p+f)/4;return T>g&&T>v?T<o?(r=0,i=.707106781,n=.707106781):(i=y/(r=Math.sqrt(T)),n=R/r):g>v?g<o?(r=.707106781,i=0,n=.707106781):(r=y/(i=Math.sqrt(g)),n=H/i):v<o?(r=.707106781,i=.707106781,n=0):(r=R/(n=Math.sqrt(v)),i=H/n),this.set(r,i,n,e),this}var x=Math.sqrt((f-p)*(f-p)+(u-d)*(u-d)+(l-c)*(l-c));return Math.abs(x)<.001&&(x=1),this.x=(f-p)/x,this.y=(u-d)/x,this.z=(l-c)/x,this.w=Math.acos((h+E+m-1)/2),this},min:function(t){return this.x=Math.min(this.x,t.x),this.y=Math.min(this.y,t.y),this.z=Math.min(this.z,t.z),this.w=Math.min(this.w,t.w),this},max:function(t){return this.x=Math.max(this.x,t.x),this.y=Math.max(this.y,t.y),this.z=Math.max(this.z,t.z),this.w=Math.max(this.w,t.w),this},clamp:function(t,e){return this.x=Math.max(t.x,Math.min(e.x,this.x)),this.y=Math.max(t.y,Math.min(e.y,this.y)),this.z=Math.max(t.z,Math.min(e.z,this.z)),this.w=Math.max(t.w,Math.min(e.w,this.w)),this},clampScalar:function(){var t,e;return function(r,i){return void 0===t&&(t=new THREE.Vector4,e=new THREE.Vector4),t.set(r,r,r,r),e.set(i,i,i,i),this.clamp(t,e)}}(),floor:function(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this.w=Math.floor(this.w),this},ceil:function(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this.w=Math.ceil(this.w),this},round:function(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this.w=Math.round(this.w),this},roundToZero:function(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this.z=this.z<0?Math.ceil(this.z):Math.floor(this.z),this.w=this.w<0?Math.ceil(this.w):Math.floor(this.w),this},negate:function(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this.w=-this.w,this},dot:function(t){return this.x*t.x+this.y*t.y+this.z*t.z+this.w*t.w},lengthSq:function(){return this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w},length:function(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w)},lengthManhattan:function(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)+Math.abs(this.w)},normalize:function(){return this.divideScalar(this.length())},setLength:function(t){return this.multiplyScalar(t/this.length())},lerp:function(t,e){return this.x+=(t.x-this.x)*e,this.y+=(t.y-this.y)*e,this.z+=(t.z-this.z)*e,this.w+=(t.w-this.w)*e,this},lerpVectors:function(t,e,r){return this.subVectors(e,t).multiplyScalar(r).add(t),this},equals:function(t){return t.x===this.x&&t.y===this.y&&t.z===this.z&&t.w===this.w},fromArray:function(t,e){return void 0===e&&(e=0),this.x=t[e],this.y=t[e+1],this.z=t[e+2],this.w=t[e+3],this},toArray:function(t,e){return void 0===t&&(t=[]),void 0===e&&(e=0),t[e]=this.x,t[e+1]=this.y,t[e+2]=this.z,t[e+3]=this.w,t},fromAttribute:function(t,e,r){return void 0===r&&(r=0),e=e*t.itemSize+r,this.x=t.array[e],this.y=t.array[e+1],this.z=t.array[e+2],this.w=t.array[e+3],this}},THREE.Euler=function(t,e,r,i){this._x=t||0,this._y=e||0,this._z=r||0,this._order=i||THREE.Euler.DefaultOrder},THREE.Euler.RotationOrders=["XYZ","YZX","ZXY","XZY","YXZ","ZYX"],THREE.Euler.DefaultOrder="XYZ",THREE.Euler.prototype={constructor:THREE.Euler,get x(){return this._x},set x(t){this._x=t,this.onChangeCallback()},get y(){return this._y},set y(t){this._y=t,this.onChangeCallback()},get z(){return this._z},set z(t){this._z=t,this.onChangeCallback()},get order(){return this._order},set order(t){this._order=t,this.onChangeCallback()},set:function(t,e,r,i){return this._x=t,this._y=e,this._z=r,this._order=i||this._order,this.onChangeCallback(),this},clone:function(){return new this.constructor(this._x,this._y,this._z,this._order)},copy:function(t){return this._x=t._x,this._y=t._y,this._z=t._z,this._order=t._order,this.onChangeCallback(),this},setFromRotationMatrix:function(t,e,r){var i=THREE.Math.clamp,n=t.elements,o=n[0],a=n[4],s=n[8],h=n[1],c=n[5],u=n[9],l=n[2],E=n[6],p=n[10];return"XYZ"===(e=e||this._order)?(this._y=Math.asin(i(s,-1,1)),Math.abs(s)<.99999?(this._x=Math.atan2(-u,p),this._z=Math.atan2(-a,o)):(this._x=Math.atan2(E,c),this._z=0)):"YXZ"===e?(this._x=Math.asin(-i(u,-1,1)),Math.abs(u)<.99999?(this._y=Math.atan2(s,p),this._z=Math.atan2(h,c)):(this._y=Math.atan2(-l,o),this._z=0)):"ZXY"===e?(this._x=Math.asin(i(E,-1,1)),Math.abs(E)<.99999?(this._y=Math.atan2(-l,p),this._z=Math.atan2(-a,c)):(this._y=0,this._z=Math.atan2(h,o))):"ZYX"===e?(this._y=Math.asin(-i(l,-1,1)),Math.abs(l)<.99999?(this._x=Math.atan2(E,p),this._z=Math.atan2(h,o)):(this._x=0,this._z=Math.atan2(-a,c))):"YZX"===e?(this._z=Math.asin(i(h,-1,1)),Math.abs(h)<.99999?(this._x=Math.atan2(-u,c),this._y=Math.atan2(-l,o)):(this._x=0,this._y=Math.atan2(s,p))):"XZY"===e?(this._z=Math.asin(-i(a,-1,1)),Math.abs(a)<.99999?(this._x=Math.atan2(E,c),this._y=Math.atan2(s,o)):(this._x=Math.atan2(-u,p),this._y=0)):console.warn("THREE.Euler: .setFromRotationMatrix() given unsupported order: "+e),this._order=e,!1!==r&&this.onChangeCallback(),this},setFromQuaternion:function(){var t;return function(e,r,i){return void 0===t&&(t=new THREE.Matrix4),t.makeRotationFromQuaternion(e),this.setFromRotationMatrix(t,r,i),this}}(),setFromVector3:function(t,e){return this.set(t.x,t.y,t.z,e||this._order)},reorder:function(){var t=new THREE.Quaternion;return function(e){t.setFromEuler(this),this.setFromQuaternion(t,e)}}(),equals:function(t){return t._x===this._x&&t._y===this._y&&t._z===this._z&&t._order===this._order},fromArray:function(t){return this._x=t[0],this._y=t[1],this._z=t[2],void 0!==t[3]&&(this._order=t[3]),this.onChangeCallback(),this},toArray:function(t,e){return void 0===t&&(t=[]),void 0===e&&(e=0),t[e]=this._x,t[e+1]=this._y,t[e+2]=this._z,t[e+3]=this._order,t},toVector3:function(t){return t?t.set(this._x,this._y,this._z):new THREE.Vector3(this._x,this._y,this._z)},onChange:function(t){return this.onChangeCallback=t,this},onChangeCallback:function(){}},THREE.Line3=function(t,e){this.start=void 0!==t?t:new THREE.Vector3,this.end=void 0!==e?e:new THREE.Vector3},THREE.Line3.prototype={constructor:THREE.Line3,set:function(t,e){return this.start.copy(t),this.end.copy(e),this},clone:function(){return(new this.constructor).copy(this)},copy:function(t){return this.start.copy(t.start),this.end.copy(t.end),this},center:function(t){return(t||new THREE.Vector3).addVectors(this.start,this.end).multiplyScalar(.5)},delta:function(t){return(t||new THREE.Vector3).subVectors(this.end,this.start)},distanceSq:function(){return this.start.distanceToSquared(this.end)},distance:function(){return this.start.distanceTo(this.end)},at:function(t,e){var r=e||new THREE.Vector3;return this.delta(r).multiplyScalar(t).add(this.start)},closestPointToPointParameter:function(){var t=new THREE.Vector3,e=new THREE.Vector3;return function(r,i){t.subVectors(r,this.start),e.subVectors(this.end,this.start);var n=e.dot(e),o=e.dot(t)/n;return i&&(o=THREE.Math.clamp(o,0,1)),o}}(),closestPointToPoint:function(t,e,r){var i=this.closestPointToPointParameter(t,e),n=r||new THREE.Vector3;return this.delta(n).multiplyScalar(i).add(this.start)},applyMatrix4:function(t){return this.start.applyMatrix4(t),this.end.applyMatrix4(t),this},equals:function(t){return t.start.equals(this.start)&&t.end.equals(this.end)}},THREE.Box2=function(t,e){this.min=void 0!==t?t:new THREE.Vector2(1/0,1/0),this.max=void 0!==e?e:new THREE.Vector2(-1/0,-1/0)},THREE.Box2.prototype={constructor:THREE.Box2,set:function(t,e){return this.min.copy(t),this.max.copy(e),this},setFromPoints:function(t){this.makeEmpty();for(var e=0,r=t.length;e<r;e++)this.expandByPoint(t[e]);return this},setFromCenterAndSize:function(){var t=new THREE.Vector2;return function(e,r){var i=t.copy(r).multiplyScalar(.5);return this.min.copy(e).sub(i),this.max.copy(e).add(i),this}}(),clone:function(){return(new this.constructor).copy(this)},copy:function(t){return this.min.copy(t.min),this.max.copy(t.max),this},makeEmpty:function(){return this.min.x=this.min.y=1/0,this.max.x=this.max.y=-1/0,this},empty:function(){return this.max.x<this.min.x||this.max.y<this.min.y},center:function(t){return(t||new THREE.Vector2).addVectors(this.min,this.max).multiplyScalar(.5)},size:function(t){return(t||new THREE.Vector2).subVectors(this.max,this.min)},expandByPoint:function(t){return this.min.min(t),this.max.max(t),this},expandByVector:function(t){return this.min.sub(t),this.max.add(t),this},expandByScalar:function(t){return this.min.addScalar(-t),this.max.addScalar(t),this},containsPoint:function(t){return!(t.x<this.min.x||t.x>this.max.x||t.y<this.min.y||t.y>this.max.y)},containsBox:function(t){return this.min.x<=t.min.x&&t.max.x<=this.max.x&&this.min.y<=t.min.y&&t.max.y<=this.max.y},getParameter:function(t,e){return(e||new THREE.Vector2).set((t.x-this.min.x)/(this.max.x-this.min.x),(t.y-this.min.y)/(this.max.y-this.min.y))},isIntersectionBox:function(t){return!(t.max.x<this.min.x||t.min.x>this.max.x||t.max.y<this.min.y||t.min.y>this.max.y)},clampPoint:function(t,e){return(e||new THREE.Vector2).copy(t).clamp(this.min,this.max)},distanceToPoint:function(){var t=new THREE.Vector2;return function(e){return t.copy(e).clamp(this.min,this.max).sub(e).length()}}(),intersect:function(t){return this.min.max(t.min),this.max.min(t.max),this},union:function(t){return this.min.min(t.min),this.max.max(t.max),this},translate:function(t){return this.min.add(t),this.max.add(t),this},equals:function(t){return t.min.equals(this.min)&&t.max.equals(this.max)}},THREE.Box3=function(t,e){this.min=void 0!==t?t:new THREE.Vector3(1/0,1/0,1/0),this.max=void 0!==e?e:new THREE.Vector3(-1/0,-1/0,-1/0)},THREE.Box3.prototype={constructor:THREE.Box3,set:function(t,e){return this.min.copy(t),this.max.copy(e),this},setFromPoints:function(t){this.makeEmpty();for(var e=0,r=t.length;e<r;e++)this.expandByPoint(t[e]);return this},setFromCenterAndSize:function(){var t=new THREE.Vector3;return function(e,r){var i=t.copy(r).multiplyScalar(.5);return this.min.copy(e).sub(i),this.max.copy(e).add(i),this}}(),setFromObject:function(){var t=new THREE.Vector3;return function(e){var r=this;return e.updateMatrixWorld(!0),this.makeEmpty(),e.traverse((function(e){var i=e.geometry;if(void 0!==i)if(i instanceof THREE.Geometry)for(var n=i.vertices,o=0,a=n.length;o<a;o++)t.copy(n[o]),t.applyMatrix4(e.matrixWorld),r.expandByPoint(t);else if(i instanceof THREE.BufferGeometry&&void 0!==i.attributes.position){var s=i.attributes.position.array;for(o=0,a=s.length;o<a;o+=3)t.set(s[o],s[o+1],s[o+2]),t.applyMatrix4(e.matrixWorld),r.expandByPoint(t)}})),this}}(),clone:function(){return(new this.constructor).copy(this)},copy:function(t){return this.min.copy(t.min),this.max.copy(t.max),this},makeEmpty:function(){return this.min.x=this.min.y=this.min.z=1/0,this.max.x=this.max.y=this.max.z=-1/0,this},empty:function(){return this.max.x<this.min.x||this.max.y<this.min.y||this.max.z<this.min.z},center:function(t){return(t||new THREE.Vector3).addVectors(this.min,this.max).multiplyScalar(.5)},size:function(t){return(t||new THREE.Vector3).subVectors(this.max,this.min)},expandByPoint:function(t){return this.min.min(t),this.max.max(t),this},expandByVector:function(t){return this.min.sub(t),this.max.add(t),this},expandByScalar:function(t){return this.min.addScalar(-t),this.max.addScalar(t),this},containsPoint:function(t){return!(t.x<this.min.x||t.x>this.max.x||t.y<this.min.y||t.y>this.max.y||t.z<this.min.z||t.z>this.max.z)},containsBox:function(t){return this.min.x<=t.min.x&&t.max.x<=this.max.x&&this.min.y<=t.min.y&&t.max.y<=this.max.y&&this.min.z<=t.min.z&&t.max.z<=this.max.z},getParameter:function(t,e){return(e||new THREE.Vector3).set((t.x-this.min.x)/(this.max.x-this.min.x),(t.y-this.min.y)/(this.max.y-this.min.y),(t.z-this.min.z)/(this.max.z-this.min.z))},isIntersectionBox:function(t){return!(t.max.x<this.min.x||t.min.x>this.max.x||t.max.y<this.min.y||t.min.y>this.max.y||t.max.z<this.min.z||t.min.z>this.max.z)},clampPoint:function(t,e){return(e||new THREE.Vector3).copy(t).clamp(this.min,this.max)},distanceToPoint:function(){var t=new THREE.Vector3;return function(e){return t.copy(e).clamp(this.min,this.max).sub(e).length()}}(),getBoundingSphere:function(){var t=new THREE.Vector3;return function(e){var r=e||new THREE.Sphere;return r.center=this.center(),r.radius=.5*this.size(t).length(),r}}(),intersect:function(t){return this.min.max(t.min),this.max.min(t.max),this},union:function(t){return this.min.min(t.min),this.max.max(t.max),this},applyMatrix4:function(){var t=[new THREE.Vector3,new THREE.Vector3,new THREE.Vector3,new THREE.Vector3,new THREE.Vector3,new THREE.Vector3,new THREE.Vector3,new THREE.Vector3];return function(e){return t[0].set(this.min.x,this.min.y,this.min.z).applyMatrix4(e),t[1].set(this.min.x,this.min.y,this.max.z).applyMatrix4(e),t[2].set(this.min.x,this.max.y,this.min.z).applyMatrix4(e),t[3].set(this.min.x,this.max.y,this.max.z).applyMatrix4(e),t[4].set(this.max.x,this.min.y,this.min.z).applyMatrix4(e),t[5].set(this.max.x,this.min.y,this.max.z).applyMatrix4(e),t[6].set(this.max.x,this.max.y,this.min.z).applyMatrix4(e),t[7].set(this.max.x,this.max.y,this.max.z).applyMatrix4(e),this.makeEmpty(),this.setFromPoints(t),this}}(),translate:function(t){return this.min.add(t),this.max.add(t),this},equals:function(t){return t.min.equals(this.min)&&t.max.equals(this.max)}},THREE.Matrix3=function(){this.elements=new Float32Array([1,0,0,0,1,0,0,0,1]),arguments.length>0&&console.error("THREE.Matrix3: the constructor no longer reads arguments. use .set() instead.")},THREE.Matrix3.prototype={constructor:THREE.Matrix3,set:function(t,e,r,i,n,o,a,s,h){var c=this.elements;return c[0]=t,c[3]=e,c[6]=r,c[1]=i,c[4]=n,c[7]=o,c[2]=a,c[5]=s,c[8]=h,this},identity:function(){return this.set(1,0,0,0,1,0,0,0,1),this},clone:function(){return(new this.constructor).fromArray(this.elements)},copy:function(t){var e=t.elements;return this.set(e[0],e[3],e[6],e[1],e[4],e[7],e[2],e[5],e[8]),this},multiplyVector3:function(t){return console.warn("THREE.Matrix3: .multiplyVector3() has been removed. Use vector.applyMatrix3( matrix ) instead."),t.applyMatrix3(this)},multiplyVector3Array:function(t){return console.warn("THREE.Matrix3: .multiplyVector3Array() has been renamed. Use matrix.applyToVector3Array( array ) instead."),this.applyToVector3Array(t)},applyToVector3Array:function(){var t;return function(e,r,i){void 0===t&&(t=new THREE.Vector3),void 0===r&&(r=0),void 0===i&&(i=e.length);for(var n=0,o=r;n<i;n+=3,o+=3)t.fromArray(e,o),t.applyMatrix3(this),t.toArray(e,o);return e}}(),applyToBuffer:function(){var t;return function(e,r,i){void 0===t&&(t=new THREE.Vector3),void 0===r&&(r=0),void 0===i&&(i=e.length/e.itemSize);for(var n=0,o=r;n<i;n++,o++)t.x=e.getX(o),t.y=e.getY(o),t.z=e.getZ(o),t.applyMatrix3(this),e.setXYZ(t.x,t.y,t.z);return e}}(),multiplyScalar:function(t){var e=this.elements;return e[0]*=t,e[3]*=t,e[6]*=t,e[1]*=t,e[4]*=t,e[7]*=t,e[2]*=t,e[5]*=t,e[8]*=t,this},determinant:function(){var t=this.elements,e=t[0],r=t[1],i=t[2],n=t[3],o=t[4],a=t[5],s=t[6],h=t[7],c=t[8];return e*o*c-e*a*h-r*n*c+r*a*s+i*n*h-i*o*s},getInverse:function(t,e){var r=t.elements,i=this.elements;i[0]=r[10]*r[5]-r[6]*r[9],i[1]=-r[10]*r[1]+r[2]*r[9],i[2]=r[6]*r[1]-r[2]*r[5],i[3]=-r[10]*r[4]+r[6]*r[8],i[4]=r[10]*r[0]-r[2]*r[8],i[5]=-r[6]*r[0]+r[2]*r[4],i[6]=r[9]*r[4]-r[5]*r[8],i[7]=-r[9]*r[0]+r[1]*r[8],i[8]=r[5]*r[0]-r[1]*r[4];var n=r[0]*i[0]+r[1]*i[3]+r[2]*i[6];if(0===n){var o="Matrix3.getInverse(): can't invert matrix, determinant is 0";if(e)throw new Error(o);return console.warn(o),this.identity(),this}return this.multiplyScalar(1/n),this},transpose:function(){var t,e=this.elements;return t=e[1],e[1]=e[3],e[3]=t,t=e[2],e[2]=e[6],e[6]=t,t=e[5],e[5]=e[7],e[7]=t,this},flattenToArrayOffset:function(t,e){var r=this.elements;return t[e]=r[0],t[e+1]=r[1],t[e+2]=r[2],t[e+3]=r[3],t[e+4]=r[4],t[e+5]=r[5],t[e+6]=r[6],t[e+7]=r[7],t[e+8]=r[8],t},getNormalMatrix:function(t){return this.getInverse(t).transpose(),this},transposeIntoArray:function(t){var e=this.elements;return t[0]=e[0],t[1]=e[3],t[2]=e[6],t[3]=e[1],t[4]=e[4],t[5]=e[7],t[6]=e[2],t[7]=e[5],t[8]=e[8],this},fromArray:function(t){return this.elements.set(t),this},toArray:function(){var t=this.elements;return[t[0],t[1],t[2],t[3],t[4],t[5],t[6],t[7],t[8]]}},THREE.Matrix4=function(){this.elements=new Float32Array([1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1]),arguments.length>0&&console.error("THREE.Matrix4: the constructor no longer reads arguments. use .set() instead.")},THREE.Matrix4.prototype={constructor:THREE.Matrix4,set:function(t,e,r,i,n,o,a,s,h,c,u,l,E,p,d,f){var m=this.elements;return m[0]=t,m[4]=e,m[8]=r,m[12]=i,m[1]=n,m[5]=o,m[9]=a,m[13]=s,m[2]=h,m[6]=c,m[10]=u,m[14]=l,m[3]=E,m[7]=p,m[11]=d,m[15]=f,this},identity:function(){return this.set(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1),this},clone:function(){return(new THREE.Matrix4).fromArray(this.elements)},copy:function(t){return this.elements.set(t.elements),this},extractPosition:function(t){return console.warn("THREE.Matrix4: .extractPosition() has been renamed to .copyPosition()."),this.copyPosition(t)},copyPosition:function(t){var e=this.elements,r=t.elements;return e[12]=r[12],e[13]=r[13],e[14]=r[14],this},extractBasis:function(t,e,r){var i=this.elements;return t.set(i[0],i[1],i[2]),e.set(i[4],i[5],i[6]),r.set(i[8],i[9],i[10]),this},makeBasis:function(t,e,r){return this.set(t.x,e.x,r.x,0,t.y,e.y,r.y,0,t.z,e.z,r.z,0,0,0,0,1),this},extractRotation:function(){var t;return function(e){void 0===t&&(t=new THREE.Vector3);var r=this.elements,i=e.elements,n=1/t.set(i[0],i[1],i[2]).length(),o=1/t.set(i[4],i[5],i[6]).length(),a=1/t.set(i[8],i[9],i[10]).length();return r[0]=i[0]*n,r[1]=i[1]*n,r[2]=i[2]*n,r[4]=i[4]*o,r[5]=i[5]*o,r[6]=i[6]*o,r[8]=i[8]*a,r[9]=i[9]*a,r[10]=i[10]*a,this}}(),makeRotationFromEuler:function(t){t instanceof THREE.Euler==!1&&console.error("THREE.Matrix: .makeRotationFromEuler() now expects a Euler rotation rather than a Vector3 and order.");var e=this.elements,r=t.x,i=t.y,n=t.z,o=Math.cos(r),a=Math.sin(r),s=Math.cos(i),h=Math.sin(i),c=Math.cos(n),u=Math.sin(n);if("XYZ"===t.order){var l=o*c,E=o*u,p=a*c,d=a*u;e[0]=s*c,e[4]=-s*u,e[8]=h,e[1]=E+p*h,e[5]=l-d*h,e[9]=-a*s,e[2]=d-l*h,e[6]=p+E*h,e[10]=o*s}else if("YXZ"===t.order){var f=s*c,m=s*u,T=h*c,g=h*u;e[0]=f+g*a,e[4]=T*a-m,e[8]=o*h,e[1]=o*u,e[5]=o*c,e[9]=-a,e[2]=m*a-T,e[6]=g+f*a,e[10]=o*s}else if("ZXY"===t.order){f=s*c,m=s*u,T=h*c,g=h*u;e[0]=f-g*a,e[4]=-o*u,e[8]=T+m*a,e[1]=m+T*a,e[5]=o*c,e[9]=g-f*a,e[2]=-o*h,e[6]=a,e[10]=o*s}else if("ZYX"===t.order){l=o*c,E=o*u,p=a*c,d=a*u;e[0]=s*c,e[4]=p*h-E,e[8]=l*h+d,e[1]=s*u,e[5]=d*h+l,e[9]=E*h-p,e[2]=-h,e[6]=a*s,e[10]=o*s}else if("YZX"===t.order){var v=o*s,y=o*h,R=a*s,H=a*h;e[0]=s*c,e[4]=H-v*u,e[8]=R*u+y,e[1]=u,e[5]=o*c,e[9]=-a*c,e[2]=-h*c,e[6]=y*u+R,e[10]=v-H*u}else if("XZY"===t.order){v=o*s,y=o*h,R=a*s,H=a*h;e[0]=s*c,e[4]=-u,e[8]=h*c,e[1]=v*u+H,e[5]=o*c,e[9]=y*u-R,e[2]=R*u-y,e[6]=a*c,e[10]=H*u+v}return e[3]=0,e[7]=0,e[11]=0,e[12]=0,e[13]=0,e[14]=0,e[15]=1,this},setRotationFromQuaternion:function(t){return console.warn("THREE.Matrix4: .setRotationFromQuaternion() has been renamed to .makeRotationFromQuaternion()."),this.makeRotationFromQuaternion(t)},makeRotationFromQuaternion:function(t){var e=this.elements,r=t.x,i=t.y,n=t.z,o=t.w,a=r+r,s=i+i,h=n+n,c=r*a,u=r*s,l=r*h,E=i*s,p=i*h,d=n*h,f=o*a,m=o*s,T=o*h;return e[0]=1-(E+d),e[4]=u-T,e[8]=l+m,e[1]=u+T,e[5]=1-(c+d),e[9]=p-f,e[2]=l-m,e[6]=p+f,e[10]=1-(c+E),e[3]=0,e[7]=0,e[11]=0,e[12]=0,e[13]=0,e[14]=0,e[15]=1,this},lookAt:function(){var t,e,r;return function(i,n,o){void 0===t&&(t=new THREE.Vector3),void 0===e&&(e=new THREE.Vector3),void 0===r&&(r=new THREE.Vector3);var a=this.elements;return r.subVectors(i,n).normalize(),0===r.lengthSq()&&(r.z=1),t.crossVectors(o,r).normalize(),0===t.lengthSq()&&(r.x+=1e-4,t.crossVectors(o,r).normalize()),e.crossVectors(r,t),a[0]=t.x,a[4]=e.x,a[8]=r.x,a[1]=t.y,a[5]=e.y,a[9]=r.y,a[2]=t.z,a[6]=e.z,a[10]=r.z,this}}(),multiply:function(t,e){return void 0!==e?(console.warn("THREE.Matrix4: .multiply() now only accepts one argument. Use .multiplyMatrices( a, b ) instead."),this.multiplyMatrices(t,e)):this.multiplyMatrices(this,t)},multiplyMatrices:function(t,e){var r=t.elements,i=e.elements,n=this.elements,o=r[0],a=r[4],s=r[8],h=r[12],c=r[1],u=r[5],l=r[9],E=r[13],p=r[2],d=r[6],f=r[10],m=r[14],T=r[3],g=r[7],v=r[11],y=r[15],R=i[0],H=i[4],x=i[8],b=i[12],w=i[1],M=i[5],S=i[9],_=i[13],A=i[2],C=i[6],L=i[10],P=i[14],D=i[3],k=i[7],V=i[11],F=i[15];return n[0]=o*R+a*w+s*A+h*D,n[4]=o*H+a*M+s*C+h*k,n[8]=o*x+a*S+s*L+h*V,n[12]=o*b+a*_+s*P+h*F,n[1]=c*R+u*w+l*A+E*D,n[5]=c*H+u*M+l*C+E*k,n[9]=c*x+u*S+l*L+E*V,n[13]=c*b+u*_+l*P+E*F,n[2]=p*R+d*w+f*A+m*D,n[6]=p*H+d*M+f*C+m*k,n[10]=p*x+d*S+f*L+m*V,n[14]=p*b+d*_+f*P+m*F,n[3]=T*R+g*w+v*A+y*D,n[7]=T*H+g*M+v*C+y*k,n[11]=T*x+g*S+v*L+y*V,n[15]=T*b+g*_+v*P+y*F,this},multiplyToArray:function(t,e,r){var i=this.elements;return this.multiplyMatrices(t,e),r[0]=i[0],r[1]=i[1],r[2]=i[2],r[3]=i[3],r[4]=i[4],r[5]=i[5],r[6]=i[6],r[7]=i[7],r[8]=i[8],r[9]=i[9],r[10]=i[10],r[11]=i[11],r[12]=i[12],r[13]=i[13],r[14]=i[14],r[15]=i[15],this},multiplyScalar:function(t){var e=this.elements;return e[0]*=t,e[4]*=t,e[8]*=t,e[12]*=t,e[1]*=t,e[5]*=t,e[9]*=t,e[13]*=t,e[2]*=t,e[6]*=t,e[10]*=t,e[14]*=t,e[3]*=t,e[7]*=t,e[11]*=t,e[15]*=t,this},multiplyVector3:function(t){return console.warn("THREE.Matrix4: .multiplyVector3() has been removed. Use vector.applyMatrix4( matrix ) or vector.applyProjection( matrix ) instead."),t.applyProjection(this)},multiplyVector4:function(t){return console.warn("THREE.Matrix4: .multiplyVector4() has been removed. Use vector.applyMatrix4( matrix ) instead."),t.applyMatrix4(this)},multiplyVector3Array:function(t){return console.warn("THREE.Matrix4: .multiplyVector3Array() has been renamed. Use matrix.applyToVector3Array( array ) instead."),this.applyToVector3Array(t)},applyToVector3Array:function(){var t;return function(e,r,i){void 0===t&&(t=new THREE.Vector3),void 0===r&&(r=0),void 0===i&&(i=e.length);for(var n=0,o=r;n<i;n+=3,o+=3)t.fromArray(e,o),t.applyMatrix4(this),t.toArray(e,o);return e}}(),applyToBuffer:function(){var t;return function(e,r,i){void 0===t&&(t=new THREE.Vector3),void 0===r&&(r=0),void 0===i&&(i=e.length/e.itemSize);for(var n=0,o=r;n<i;n++,o++)t.x=e.getX(o),t.y=e.getY(o),t.z=e.getZ(o),t.applyMatrix4(this),e.setXYZ(t.x,t.y,t.z);return e}}(),rotateAxis:function(t){console.warn("THREE.Matrix4: .rotateAxis() has been removed. Use Vector3.transformDirection( matrix ) instead."),t.transformDirection(this)},crossVector:function(t){return console.warn("THREE.Matrix4: .crossVector() has been removed. Use vector.applyMatrix4( matrix ) instead."),t.applyMatrix4(this)},determinant:function(){var t=this.elements,e=t[0],r=t[4],i=t[8],n=t[12],o=t[1],a=t[5],s=t[9],h=t[13],c=t[2],u=t[6],l=t[10],E=t[14];return t[3]*(+n*s*u-i*h*u-n*a*l+r*h*l+i*a*E-r*s*E)+t[7]*(+e*s*E-e*h*l+n*o*l-i*o*E+i*h*c-n*s*c)+t[11]*(+e*h*u-e*a*E-n*o*u+r*o*E+n*a*c-r*h*c)+t[15]*(-i*a*c-e*s*u+e*a*l+i*o*u-r*o*l+r*s*c)},transpose:function(){var t,e=this.elements;return t=e[1],e[1]=e[4],e[4]=t,t=e[2],e[2]=e[8],e[8]=t,t=e[6],e[6]=e[9],e[9]=t,t=e[3],e[3]=e[12],e[12]=t,t=e[7],e[7]=e[13],e[13]=t,t=e[11],e[11]=e[14],e[14]=t,this},flattenToArrayOffset:function(t,e){var r=this.elements;return t[e]=r[0],t[e+1]=r[1],t[e+2]=r[2],t[e+3]=r[3],t[e+4]=r[4],t[e+5]=r[5],t[e+6]=r[6],t[e+7]=r[7],t[e+8]=r[8],t[e+9]=r[9],t[e+10]=r[10],t[e+11]=r[11],t[e+12]=r[12],t[e+13]=r[13],t[e+14]=r[14],t[e+15]=r[15],t},getPosition:function(){var t;return function(){void 0===t&&(t=new THREE.Vector3),console.warn("THREE.Matrix4: .getPosition() has been removed. Use Vector3.setFromMatrixPosition( matrix ) instead.");var e=this.elements;return t.set(e[12],e[13],e[14])}}(),setPosition:function(t){var e=this.elements;return e[12]=t.x,e[13]=t.y,e[14]=t.z,this},getInverse:function(t,e){var r=this.elements,i=t.elements,n=i[0],o=i[4],a=i[8],s=i[12],h=i[1],c=i[5],u=i[9],l=i[13],E=i[2],p=i[6],d=i[10],f=i[14],m=i[3],T=i[7],g=i[11],v=i[15];r[0]=u*f*T-l*d*T+l*p*g-c*f*g-u*p*v+c*d*v,r[4]=s*d*T-a*f*T-s*p*g+o*f*g+a*p*v-o*d*v,r[8]=a*l*T-s*u*T+s*c*g-o*l*g-a*c*v+o*u*v,r[12]=s*u*p-a*l*p-s*c*d+o*l*d+a*c*f-o*u*f,r[1]=l*d*m-u*f*m-l*E*g+h*f*g+u*E*v-h*d*v,r[5]=a*f*m-s*d*m+s*E*g-n*f*g-a*E*v+n*d*v,r[9]=s*u*m-a*l*m-s*h*g+n*l*g+a*h*v-n*u*v,r[13]=a*l*E-s*u*E+s*h*d-n*l*d-a*h*f+n*u*f,r[2]=c*f*m-l*p*m+l*E*T-h*f*T-c*E*v+h*p*v,r[6]=s*p*m-o*f*m-s*E*T+n*f*T+o*E*v-n*p*v,r[10]=o*l*m-s*c*m+s*h*T-n*l*T-o*h*v+n*c*v,r[14]=s*c*E-o*l*E-s*h*p+n*l*p+o*h*f-n*c*f,r[3]=u*p*m-c*d*m-u*E*T+h*d*T+c*E*g-h*p*g,r[7]=o*d*m-a*p*m+a*E*T-n*d*T-o*E*g+n*p*g,r[11]=a*c*m-o*u*m-a*h*T+n*u*T+o*h*g-n*c*g,r[15]=o*u*E-a*c*E+a*h*p-n*u*p-o*h*d+n*c*d;var y=n*r[0]+h*r[4]+E*r[8]+m*r[12];if(0===y){var R="THREE.Matrix4.getInverse(): can't invert matrix, determinant is 0";if(e)throw new Error(R);return console.warn(R),this.identity(),this}return this.multiplyScalar(1/y),this},translate:function(t){console.error("THREE.Matrix4: .translate() has been removed.")},rotateX:function(t){console.error("THREE.Matrix4: .rotateX() has been removed.")},rotateY:function(t){console.error("THREE.Matrix4: .rotateY() has been removed.")},rotateZ:function(t){console.error("THREE.Matrix4: .rotateZ() has been removed.")},rotateByAxis:function(t,e){console.error("THREE.Matrix4: .rotateByAxis() has been removed.")},scale:function(t){var e=this.elements,r=t.x,i=t.y,n=t.z;return e[0]*=r,e[4]*=i,e[8]*=n,e[1]*=r,e[5]*=i,e[9]*=n,e[2]*=r,e[6]*=i,e[10]*=n,e[3]*=r,e[7]*=i,e[11]*=n,this},getMaxScaleOnAxis:function(){var t=this.elements,e=t[0]*t[0]+t[1]*t[1]+t[2]*t[2],r=t[4]*t[4]+t[5]*t[5]+t[6]*t[6],i=t[8]*t[8]+t[9]*t[9]+t[10]*t[10];return Math.sqrt(Math.max(e,r,i))},makeTranslation:function(t,e,r){return this.set(1,0,0,t,0,1,0,e,0,0,1,r,0,0,0,1),this},makeRotationX:function(t){var e=Math.cos(t),r=Math.sin(t);return this.set(1,0,0,0,0,e,-r,0,0,r,e,0,0,0,0,1),this},makeRotationY:function(t){var e=Math.cos(t),r=Math.sin(t);return this.set(e,0,r,0,0,1,0,0,-r,0,e,0,0,0,0,1),this},makeRotationZ:function(t){var e=Math.cos(t),r=Math.sin(t);return this.set(e,-r,0,0,r,e,0,0,0,0,1,0,0,0,0,1),this},makeRotationAxis:function(t,e){var r=Math.cos(e),i=Math.sin(e),n=1-r,o=t.x,a=t.y,s=t.z,h=n*o,c=n*a;return this.set(h*o+r,h*a-i*s,h*s+i*a,0,h*a+i*s,c*a+r,c*s-i*o,0,h*s-i*a,c*s+i*o,n*s*s+r,0,0,0,0,1),this},makeScale:function(t,e,r){return this.set(t,0,0,0,0,e,0,0,0,0,r,0,0,0,0,1),this},compose:function(t,e,r){return this.makeRotationFromQuaternion(e),this.scale(r),this.setPosition(t),this},decompose:function(){var t,e;return function(r,i,n){void 0===t&&(t=new THREE.Vector3),void 0===e&&(e=new THREE.Matrix4);var o=this.elements,a=t.set(o[0],o[1],o[2]).length(),s=t.set(o[4],o[5],o[6]).length(),h=t.set(o[8],o[9],o[10]).length();this.determinant()<0&&(a=-a),r.x=o[12],r.y=o[13],r.z=o[14],e.elements.set(this.elements);var c=1/a,u=1/s,l=1/h;return e.elements[0]*=c,e.elements[1]*=c,e.elements[2]*=c,e.elements[4]*=u,e.elements[5]*=u,e.elements[6]*=u,e.elements[8]*=l,e.elements[9]*=l,e.elements[10]*=l,i.setFromRotationMatrix(e),n.x=a,n.y=s,n.z=h,this}}(),makeFrustum:function(t,e,r,i,n,o){var a=this.elements,s=2*n/(e-t),h=2*n/(i-r),c=(e+t)/(e-t),u=(i+r)/(i-r),l=-(o+n)/(o-n),E=-2*o*n/(o-n);return a[0]=s,a[4]=0,a[8]=c,a[12]=0,a[1]=0,a[5]=h,a[9]=u,a[13]=0,a[2]=0,a[6]=0,a[10]=l,a[14]=E,a[3]=0,a[7]=0,a[11]=-1,a[15]=0,this},makePerspective:function(t,e,r,i){var n=r*Math.tan(THREE.Math.degToRad(.5*t)),o=-n,a=o*e,s=n*e;return this.makeFrustum(a,s,o,n,r,i)},makeOrthographic:function(t,e,r,i,n,o){var a=this.elements,s=e-t,h=r-i,c=o-n,u=(e+t)/s,l=(r+i)/h,E=(o+n)/c;return a[0]=2/s,a[4]=0,a[8]=0,a[12]=-u,a[1]=0,a[5]=2/h,a[9]=0,a[13]=-l,a[2]=0,a[6]=0,a[10]=-2/c,a[14]=-E,a[3]=0,a[7]=0,a[11]=0,a[15]=1,this},equals:function(t){for(var e=this.elements,r=t.elements,i=0;i<16;i++)if(e[i]!==r[i])return!1;return!0},fromArray:function(t){return this.elements.set(t),this},toArray:function(){var t=this.elements;return[t[0],t[1],t[2],t[3],t[4],t[5],t[6],t[7],t[8],t[9],t[10],t[11],t[12],t[13],t[14],t[15]]}},THREE.Ray=function(t,e){this.origin=void 0!==t?t:new THREE.Vector3,this.direction=void 0!==e?e:new THREE.Vector3},THREE.Ray.prototype={constructor:THREE.Ray,set:function(t,e){return this.origin.copy(t),this.direction.copy(e),this},clone:function(){return(new this.constructor).copy(this)},copy:function(t){return this.origin.copy(t.origin),this.direction.copy(t.direction),this},at:function(t,e){return(e||new THREE.Vector3).copy(this.direction).multiplyScalar(t).add(this.origin)},recast:function(){var t=new THREE.Vector3;return function(e){return this.origin.copy(this.at(e,t)),this}}(),closestPointToPoint:function(t,e){var r=e||new THREE.Vector3;r.subVectors(t,this.origin);var i=r.dot(this.direction);return i<0?r.copy(this.origin):r.copy(this.direction).multiplyScalar(i).add(this.origin)},distanceToPoint:function(t){return Math.sqrt(this.distanceSqToPoint(t))},distanceSqToPoint:function(){var t=new THREE.Vector3;return function(e){var r=t.subVectors(e,this.origin).dot(this.direction);return r<0?this.origin.distanceToSquared(e):(t.copy(this.direction).multiplyScalar(r).add(this.origin),t.distanceToSquared(e))}}(),distanceSqToSegment:function(){var t=new THREE.Vector3,e=new THREE.Vector3,r=new THREE.Vector3;return function(i,n,o,a){t.copy(i).add(n).multiplyScalar(.5),e.copy(n).sub(i).normalize(),r.copy(this.origin).sub(t);var s,h,c,u,l=.5*i.distanceTo(n),E=-this.direction.dot(e),p=r.dot(this.direction),d=-r.dot(e),f=r.lengthSq(),m=Math.abs(1-E*E);if(m>0)if(h=E*p-d,u=l*m,(s=E*d-p)>=0)if(h>=-u)if(h<=u){var T=1/m;c=(s*=T)*(s+E*(h*=T)+2*p)+h*(E*s+h+2*d)+f}else h=l,c=-(s=Math.max(0,-(E*h+p)))*s+h*(h+2*d)+f;else h=-l,c=-(s=Math.max(0,-(E*h+p)))*s+h*(h+2*d)+f;else h<=-u?c=-(s=Math.max(0,-(-E*l+p)))*s+(h=s>0?-l:Math.min(Math.max(-l,-d),l))*(h+2*d)+f:h<=u?(s=0,c=(h=Math.min(Math.max(-l,-d),l))*(h+2*d)+f):c=-(s=Math.max(0,-(E*l+p)))*s+(h=s>0?l:Math.min(Math.max(-l,-d),l))*(h+2*d)+f;else h=E>0?-l:l,c=-(s=Math.max(0,-(E*h+p)))*s+h*(h+2*d)+f;return o&&o.copy(this.direction).multiplyScalar(s).add(this.origin),a&&a.copy(e).multiplyScalar(h).add(t),c}}(),isIntersectionSphere:function(t){return this.distanceToPoint(t.center)<=t.radius},intersectSphere:function(){var t=new THREE.Vector3;return function(e,r){t.subVectors(e.center,this.origin);var i=t.dot(this.direction),n=t.dot(t)-i*i,o=e.radius*e.radius;if(n>o)return null;var a=Math.sqrt(o-n),s=i-a,h=i+a;return s<0&&h<0?null:s<0?this.at(h,r):this.at(s,r)}}(),isIntersectionPlane:function(t){var e=t.distanceToPoint(this.origin);return 0===e||t.normal.dot(this.direction)*e<0},distanceToPlane:function(t){var e=t.normal.dot(this.direction);if(0===e)return 0===t.distanceToPoint(this.origin)?0:null;var r=-(this.origin.dot(t.normal)+t.constant)/e;return r>=0?r:null},intersectPlane:function(t,e){var r=this.distanceToPlane(t);return null===r?null:this.at(r,e)},isIntersectionBox:function(){var t=new THREE.Vector3;return function(e){return null!==this.intersectBox(e,t)}}(),intersectBox:function(t,e){var r,i,n,o,a,s,h=1/this.direction.x,c=1/this.direction.y,u=1/this.direction.z,l=this.origin;return h>=0?(r=(t.min.x-l.x)*h,i=(t.max.x-l.x)*h):(r=(t.max.x-l.x)*h,i=(t.min.x-l.x)*h),c>=0?(n=(t.min.y-l.y)*c,o=(t.max.y-l.y)*c):(n=(t.max.y-l.y)*c,o=(t.min.y-l.y)*c),r>o||n>i?null:((n>r||r!=r)&&(r=n),(o<i||i!=i)&&(i=o),u>=0?(a=(t.min.z-l.z)*u,s=(t.max.z-l.z)*u):(a=(t.max.z-l.z)*u,s=(t.min.z-l.z)*u),r>s||a>i?null:((a>r||r!=r)&&(r=a),(s<i||i!=i)&&(i=s),i<0?null:this.at(r>=0?r:i,e)))},intersectTriangle:function(){var t=new THREE.Vector3,e=new THREE.Vector3,r=new THREE.Vector3,i=new THREE.Vector3;return function(n,o,a,s,h){e.subVectors(o,n),r.subVectors(a,n),i.crossVectors(e,r);var c,u=this.direction.dot(i);if(u>0){if(s)return null;c=1}else{if(!(u<0))return null;c=-1,u=-u}t.subVectors(this.origin,n);var l=c*this.direction.dot(r.crossVectors(t,r));if(l<0)return null;var E=c*this.direction.dot(e.cross(t));if(E<0)return null;if(l+E>u)return null;var p=-c*t.dot(i);return p<0?null:this.at(p/u,h)}}(),applyMatrix4:function(t){return this.direction.add(this.origin).applyMatrix4(t),this.origin.applyMatrix4(t),this.direction.sub(this.origin),this.direction.normalize(),this},equals:function(t){return t.origin.equals(this.origin)&&t.direction.equals(this.direction)}},THREE.Sphere=function(t,e){this.center=void 0!==t?t:new THREE.Vector3,this.radius=void 0!==e?e:0},THREE.Sphere.prototype={constructor:THREE.Sphere,set:function(t,e){return this.center.copy(t),this.radius=e,this},setFromPoints:function(){var t=new THREE.Box3;return function(e,r){var i=this.center;void 0!==r?i.copy(r):t.setFromPoints(e).center(i);for(var n=0,o=0,a=e.length;o<a;o++)n=Math.max(n,i.distanceToSquared(e[o]));return this.radius=Math.sqrt(n),this}}(),clone:function(){return(new this.constructor).copy(this)},copy:function(t){return this.center.copy(t.center),this.radius=t.radius,this},empty:function(){return this.radius<=0},containsPoint:function(t){return t.distanceToSquared(this.center)<=this.radius*this.radius},distanceToPoint:function(t){return t.distanceTo(this.center)-this.radius},intersectsSphere:function(t){var e=this.radius+t.radius;return t.center.distanceToSquared(this.center)<=e*e},clampPoint:function(t,e){var r=this.center.distanceToSquared(t),i=e||new THREE.Vector3;return i.copy(t),r>this.radius*this.radius&&(i.sub(this.center).normalize(),i.multiplyScalar(this.radius).add(this.center)),i},getBoundingBox:function(t){var e=t||new THREE.Box3;return e.set(this.center,this.center),e.expandByScalar(this.radius),e},applyMatrix4:function(t){return this.center.applyMatrix4(t),this.radius=this.radius*t.getMaxScaleOnAxis(),this},translate:function(t){return this.center.add(t),this},equals:function(t){return t.center.equals(this.center)&&t.radius===this.radius}},THREE.Frustum=function(t,e,r,i,n,o){this.planes=[void 0!==t?t:new THREE.Plane,void 0!==e?e:new THREE.Plane,void 0!==r?r:new THREE.Plane,void 0!==i?i:new THREE.Plane,void 0!==n?n:new THREE.Plane,void 0!==o?o:new THREE.Plane]},THREE.Frustum.prototype={constructor:THREE.Frustum,set:function(t,e,r,i,n,o){var a=this.planes;return a[0].copy(t),a[1].copy(e),a[2].copy(r),a[3].copy(i),a[4].copy(n),a[5].copy(o),this},clone:function(){return(new this.constructor).copy(this)},copy:function(t){for(var e=this.planes,r=0;r<6;r++)e[r].copy(t.planes[r]);return this},setFromMatrix:function(t){var e=this.planes,r=t.elements,i=r[0],n=r[1],o=r[2],a=r[3],s=r[4],h=r[5],c=r[6],u=r[7],l=r[8],E=r[9],p=r[10],d=r[11],f=r[12],m=r[13],T=r[14],g=r[15];return e[0].setComponents(a-i,u-s,d-l,g-f).normalize(),e[1].setComponents(a+i,u+s,d+l,g+f).normalize(),e[2].setComponents(a+n,u+h,d+E,g+m).normalize(),e[3].setComponents(a-n,u-h,d-E,g-m).normalize(),e[4].setComponents(a-o,u-c,d-p,g-T).normalize(),e[5].setComponents(a+o,u+c,d+p,g+T).normalize(),this},intersectsObject:function(){var t=new THREE.Sphere;return function(e){var r=e.geometry;return null===r.boundingSphere&&r.computeBoundingSphere(),t.copy(r.boundingSphere),t.applyMatrix4(e.matrixWorld),this.intersectsSphere(t)}}(),intersectsSphere:function(t){for(var e=this.planes,r=t.center,i=-t.radius,n=0;n<6;n++){if(e[n].distanceToPoint(r)<i)return!1}return!0},intersectsBox:function(){var t=new THREE.Vector3,e=new THREE.Vector3;return function(r){for(var i=this.planes,n=0;n<6;n++){var o=i[n];t.x=o.normal.x>0?r.min.x:r.max.x,e.x=o.normal.x>0?r.max.x:r.min.x,t.y=o.normal.y>0?r.min.y:r.max.y,e.y=o.normal.y>0?r.max.y:r.min.y,t.z=o.normal.z>0?r.min.z:r.max.z,e.z=o.normal.z>0?r.max.z:r.min.z;var a=o.distanceToPoint(t),s=o.distanceToPoint(e);if(a<0&&s<0)return!1}return!0}}(),containsPoint:function(t){for(var e=this.planes,r=0;r<6;r++)if(e[r].distanceToPoint(t)<0)return!1;return!0}},THREE.Plane=function(t,e){this.normal=void 0!==t?t:new THREE.Vector3(1,0,0),this.constant=void 0!==e?e:0},THREE.Plane.prototype={constructor:THREE.Plane,set:function(t,e){return this.normal.copy(t),this.constant=e,this},setComponents:function(t,e,r,i){return this.normal.set(t,e,r),this.constant=i,this},setFromNormalAndCoplanarPoint:function(t,e){return this.normal.copy(t),this.constant=-e.dot(this.normal),this},setFromCoplanarPoints:function(){var t=new THREE.Vector3,e=new THREE.Vector3;return function(r,i,n){var o=t.subVectors(n,i).cross(e.subVectors(r,i)).normalize();return this.setFromNormalAndCoplanarPoint(o,r),this}}(),clone:function(){return(new this.constructor).copy(this)},copy:function(t){return this.normal.copy(t.normal),this.constant=t.constant,this},normalize:function(){var t=1/this.normal.length();return this.normal.multiplyScalar(t),this.constant*=t,this},negate:function(){return this.constant*=-1,this.normal.negate(),this},distanceToPoint:function(t){return this.normal.dot(t)+this.constant},distanceToSphere:function(t){return this.distanceToPoint(t.center)-t.radius},projectPoint:function(t,e){return this.orthoPoint(t,e).sub(t).negate()},orthoPoint:function(t,e){var r=this.distanceToPoint(t);return(e||new THREE.Vector3).copy(this.normal).multiplyScalar(r)},isIntersectionLine:function(t){var e=this.distanceToPoint(t.start),r=this.distanceToPoint(t.end);return e<0&&r>0||r<0&&e>0},intersectLine:function(){var t=new THREE.Vector3;return function(e,r){var i=r||new THREE.Vector3,n=e.delta(t),o=this.normal.dot(n);if(0===o)return 0===this.distanceToPoint(e.start)?i.copy(e.start):void 0;var a=-(e.start.dot(this.normal)+this.constant)/o;return a<0||a>1?void 0:i.copy(n).multiplyScalar(a).add(e.start)}}(),coplanarPoint:function(t){return(t||new THREE.Vector3).copy(this.normal).multiplyScalar(-this.constant)},applyMatrix4:function(){var t=new THREE.Vector3,e=new THREE.Vector3,r=new THREE.Matrix3;return function(i,n){var o=n||r.getNormalMatrix(i),a=t.copy(this.normal).applyMatrix3(o),s=this.coplanarPoint(e);return s.applyMatrix4(i),this.setFromNormalAndCoplanarPoint(a,s),this}}(),translate:function(t){return this.constant=this.constant-t.dot(this.normal),this},equals:function(t){return t.normal.equals(this.normal)&&t.constant===this.constant}},THREE.Math={generateUUID:function(){var t,e="0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz".split(""),r=new Array(36),i=0;return function(){for(var n=0;n<36;n++)8===n||13===n||18===n||23===n?r[n]="-":14===n?r[n]="4":(i<=2&&(i=33554432+16777216*Math.random()|0),t=15&i,i>>=4,r[n]=e[19===n?3&t|8:t]);return r.join("")}}(),clamp:function(t,e,r){return Math.max(e,Math.min(r,t))},euclideanModulo:function(t,e){return(t%e+e)%e},mapLinear:function(t,e,r,i,n){return i+(t-e)*(n-i)/(r-e)},smoothstep:function(t,e,r){return t<=e?0:t>=r?1:(t=(t-e)/(r-e))*t*(3-2*t)},smootherstep:function(t,e,r){return t<=e?0:t>=r?1:(t=(t-e)/(r-e))*t*t*(t*(6*t-15)+10)},random16:function(){return(65280*Math.random()+255*Math.random())/65535},randInt:function(t,e){return t+Math.floor(Math.random()*(e-t+1))},randFloat:function(t,e){return t+Math.random()*(e-t)},randFloatSpread:function(t){return t*(.5-Math.random())},degToRad:function(){var t=Math.PI/180;return function(e){return e*t}}(),radToDeg:function(){var t=180/Math.PI;return function(e){return e*t}}(),isPowerOfTwo:function(t){return 0==(t&t-1)&&0!==t},nearestPowerOfTwo:function(t){return Math.pow(2,Math.round(Math.log(t)/Math.LN2))},nextPowerOfTwo:function(t){return t--,t|=t>>1,t|=t>>2,t|=t>>4,t|=t>>8,t|=t>>16,++t}},THREE.Spline=function(t){this.points=t;var e,r,i,n,o,a,s,h,c,u=[],l={x:0,y:0,z:0};function E(t,e,r,i,n,o,a){var s=.5*(r-t),h=.5*(i-e);return(2*(e-r)+s+h)*a+(-3*(e-r)-2*s-h)*o+s*n+e}this.initFromArray=function(t){this.points=[];for(var e=0;e<t.length;e++)this.points[e]={x:t[e][0],y:t[e][1],z:t[e][2]}},this.getPoint=function(t){return e=(this.points.length-1)*t,r=Math.floor(e),i=e-r,u[0]=0===r?r:r-1,u[1]=r,u[2]=r>this.points.length-2?this.points.length-1:r+1,u[3]=r>this.points.length-3?this.points.length-1:r+2,a=this.points[u[0]],s=this.points[u[1]],h=this.points[u[2]],c=this.points[u[3]],o=i*(n=i*i),l.x=E(a.x,s.x,h.x,c.x,i,n,o),l.y=E(a.y,s.y,h.y,c.y,i,n,o),l.z=E(a.z,s.z,h.z,c.z,i,n,o),l},this.getControlPointsArray=function(){var t,e,r=this.points.length,i=[];for(t=0;t<r;t++)e=this.points[t],i[t]=[e.x,e.y,e.z];return i},this.getLength=function(t){var e,r,i,n,o=0,a=0,s=0,h=new THREE.Vector3,c=new THREE.Vector3,u=[],l=0;for(u[0]=0,t||(t=100),i=this.points.length*t,h.copy(this.points[0]),e=1;e<i;e++)r=e/i,n=this.getPoint(r),c.copy(n),l+=c.distanceTo(h),h.copy(n),o=(this.points.length-1)*r,(a=Math.floor(o))!==s&&(u[a]=l,s=a);return u[u.length]=l,{chunks:u,total:l}},this.reparametrizeByArcLength=function(t){var e,r,i,n,o,a,s,h,c=[],u=new THREE.Vector3,l=this.getLength();for(c.push(u.copy(this.points[0]).clone()),e=1;e<this.points.length;e++){for(a=l.chunks[e]-l.chunks[e-1],s=Math.ceil(t*a/l.total),n=(e-1)/(this.points.length-1),o=e/(this.points.length-1),r=1;r<s-1;r++)i=n+r*(1/s)*(o-n),h=this.getPoint(i),c.push(u.copy(h).clone());c.push(u.copy(this.points[e]).clone())}this.points=c}},THREE.Triangle=function(t,e,r){this.a=void 0!==t?t:new THREE.Vector3,this.b=void 0!==e?e:new THREE.Vector3,this.c=void 0!==r?r:new THREE.Vector3},THREE.Triangle.normal=function(){var t=new THREE.Vector3;return function(e,r,i,n){var o=n||new THREE.Vector3;o.subVectors(i,r),t.subVectors(e,r),o.cross(t);var a=o.lengthSq();return a>0?o.multiplyScalar(1/Math.sqrt(a)):o.set(0,0,0)}}(),THREE.Triangle.barycoordFromPoint=function(){var t=new THREE.Vector3,e=new THREE.Vector3,r=new THREE.Vector3;return function(i,n,o,a,s){t.subVectors(a,n),e.subVectors(o,n),r.subVectors(i,n);var h=t.dot(t),c=t.dot(e),u=t.dot(r),l=e.dot(e),E=e.dot(r),p=h*l-c*c,d=s||new THREE.Vector3;if(0===p)return d.set(-2,-1,-1);var f=1/p,m=(l*u-c*E)*f,T=(h*E-c*u)*f;return d.set(1-m-T,T,m)}}(),THREE.Triangle.containsPoint=function(){var t=new THREE.Vector3;return function(e,r,i,n){var o=THREE.Triangle.barycoordFromPoint(e,r,i,n,t);return o.x>=0&&o.y>=0&&o.x+o.y<=1}}(),THREE.Triangle.prototype={constructor:THREE.Triangle,set:function(t,e,r){return this.a.copy(t),this.b.copy(e),this.c.copy(r),this},setFromPointsAndIndices:function(t,e,r,i){return this.a.copy(t[e]),this.b.copy(t[r]),this.c.copy(t[i]),this},clone:function(){return(new this.constructor).copy(this)},copy:function(t){return this.a.copy(t.a),this.b.copy(t.b),this.c.copy(t.c),this},area:function(){var t=new THREE.Vector3,e=new THREE.Vector3;return function(){return t.subVectors(this.c,this.b),e.subVectors(this.a,this.b),.5*t.cross(e).length()}}(),midpoint:function(t){return(t||new THREE.Vector3).addVectors(this.a,this.b).add(this.c).multiplyScalar(1/3)},normal:function(t){return THREE.Triangle.normal(this.a,this.b,this.c,t)},plane:function(t){return(t||new THREE.Plane).setFromCoplanarPoints(this.a,this.b,this.c)},barycoordFromPoint:function(t,e){return THREE.Triangle.barycoordFromPoint(t,this.a,this.b,this.c,e)},containsPoint:function(t){return THREE.Triangle.containsPoint(t,this.a,this.b,this.c)},equals:function(t){return t.a.equals(this.a)&&t.b.equals(this.b)&&t.c.equals(this.c)}},THREE.Channels=function(){this.mask=1},THREE.Channels.prototype={constructor:THREE.Channels,set:function(t){this.mask=1<<t},enable:function(t){this.mask|=1<<t},toggle:function(t){this.mask^=1<<t},disable:function(t){this.mask&=~(1<<t)}},THREE.Clock=function(t){this.autoStart=void 0===t||t,this.startTime=0,this.oldTime=0,this.elapsedTime=0,this.running=!1},THREE.Clock.prototype={constructor:THREE.Clock,start:function(){this.startTime=self.performance.now(),this.oldTime=this.startTime,this.running=!0},stop:function(){this.getElapsedTime(),this.running=!1},getElapsedTime:function(){return this.getDelta(),this.elapsedTime},getDelta:function(){var t=0;if(this.autoStart&&!this.running&&this.start(),this.running){var e=self.performance.now();t=.001*(e-this.oldTime),this.oldTime=e,this.elapsedTime+=t}return t}},THREE.EventDispatcher=function(){},THREE.EventDispatcher.prototype={constructor:THREE.EventDispatcher,apply:function(t){t.addEventListener=THREE.EventDispatcher.prototype.addEventListener,t.hasEventListener=THREE.EventDispatcher.prototype.hasEventListener,t.removeEventListener=THREE.EventDispatcher.prototype.removeEventListener,t.dispatchEvent=THREE.EventDispatcher.prototype.dispatchEvent},addEventListener:function(t,e){void 0===this._listeners&&(this._listeners={});var r=this._listeners;void 0===r[t]&&(r[t]=[]),-1===r[t].indexOf(e)&&r[t].push(e)},hasEventListener:function(t,e){if(void 0===this._listeners)return!1;var r=this._listeners;return void 0!==r[t]&&-1!==r[t].indexOf(e)},removeEventListener:function(t,e){if(void 0!==this._listeners){var r=this._listeners[t];if(void 0!==r){var i=r.indexOf(e);-1!==i&&r.splice(i,1)}}},dispatchEvent:function(t){if(void 0!==this._listeners){var e=this._listeners[t.type];if(void 0!==e){t.target=this;for(var r=[],i=e.length,n=0;n<i;n++)r[n]=e[n];for(n=0;n<i;n++)r[n].call(this,t)}}}},function(t){function e(t,e){return t.distance-e.distance}function r(t,e,i,n){if(!1!==t.visible&&(t.raycast(e,i),!0===n))for(var o=t.children,a=0,s=o.length;a<s;a++)r(o[a],e,i,!0)}t.Raycaster=function(e,r,i,n){this.ray=new t.Ray(e,r),this.near=i||0,this.far=n||1/0,this.params={Mesh:{},Line:{},LOD:{},Points:{threshold:1},Sprite:{}},Object.defineProperties(this.params,{PointCloud:{get:function(){return console.warn("THREE.Raycaster: params.PointCloud has been renamed to params.Points."),this.Points}}})},t.Raycaster.prototype={constructor:t.Raycaster,linePrecision:1,set:function(t,e){this.ray.set(t,e)},setFromCamera:function(e,r){r instanceof t.PerspectiveCamera?(this.ray.origin.setFromMatrixPosition(r.matrixWorld),this.ray.direction.set(e.x,e.y,.5).unproject(r).sub(this.ray.origin).normalize()):r instanceof t.OrthographicCamera?(this.ray.origin.set(e.x,e.y,-1).unproject(r),this.ray.direction.set(0,0,-1).transformDirection(r.matrixWorld)):console.error("THREE.Raycaster: Unsupported camera type.")},intersectObject:function(t,i){var n=[];return r(t,this,n,i),n.sort(e),n},intersectObjects:function(t,i){var n=[];if(!1===Array.isArray(t))return console.warn("THREE.Raycaster.intersectObjects: objects is not an Array."),n;for(var o=0,a=t.length;o<a;o++)r(t[o],this,n,i);return n.sort(e),n}}}(THREE),THREE.Object3D=function(){Object.defineProperty(this,"id",{value:THREE.Object3DIdCount++}),this.uuid=THREE.Math.generateUUID(),this.name="",this.type="Object3D",this.parent=null,this.channels=new THREE.Channels,this.children=[],this.up=THREE.Object3D.DefaultUp.clone();var t=new THREE.Vector3,e=new THREE.Euler,r=new THREE.Quaternion,i=new THREE.Vector3(1,1,1);e.onChange((function(){r.setFromEuler(e,!1)})),r.onChange((function(){e.setFromQuaternion(r,void 0,!1)})),Object.defineProperties(this,{position:{enumerable:!0,value:t},rotation:{enumerable:!0,value:e},quaternion:{enumerable:!0,value:r},scale:{enumerable:!0,value:i},modelViewMatrix:{value:new THREE.Matrix4},normalMatrix:{value:new THREE.Matrix3}}),this.rotationAutoUpdate=!0,this.matrix=new THREE.Matrix4,this.matrixWorld=new THREE.Matrix4,this.matrixAutoUpdate=THREE.Object3D.DefaultMatrixAutoUpdate,this.matrixWorldNeedsUpdate=!1,this.visible=!0,this.castShadow=!1,this.receiveShadow=!1,this.frustumCulled=!0,this.renderOrder=0,this.userData={}},THREE.Object3D.DefaultUp=new THREE.Vector3(0,1,0),THREE.Object3D.DefaultMatrixAutoUpdate=!0,THREE.Object3D.prototype={constructor:THREE.Object3D,get eulerOrder(){return console.warn("THREE.Object3D: .eulerOrder is now .rotation.order."),this.rotation.order},set eulerOrder(t){console.warn("THREE.Object3D: .eulerOrder is now .rotation.order."),this.rotation.order=t},get useQuaternion(){console.warn("THREE.Object3D: .useQuaternion has been removed. The library now uses quaternions by default.")},set useQuaternion(t){console.warn("THREE.Object3D: .useQuaternion has been removed. The library now uses quaternions by default.")},set renderDepth(t){console.warn("THREE.Object3D: .renderDepth has been removed. Use .renderOrder, instead.")},applyMatrix:function(t){this.matrix.multiplyMatrices(t,this.matrix),this.matrix.decompose(this.position,this.quaternion,this.scale)},setRotationFromAxisAngle:function(t,e){this.quaternion.setFromAxisAngle(t,e)},setRotationFromEuler:function(t){this.quaternion.setFromEuler(t,!0)},setRotationFromMatrix:function(t){this.quaternion.setFromRotationMatrix(t)},setRotationFromQuaternion:function(t){this.quaternion.copy(t)},rotateOnAxis:function(){var t=new THREE.Quaternion;return function(e,r){return t.setFromAxisAngle(e,r),this.quaternion.multiply(t),this}}(),rotateX:function(){var t=new THREE.Vector3(1,0,0);return function(e){return this.rotateOnAxis(t,e)}}(),rotateY:function(){var t=new THREE.Vector3(0,1,0);return function(e){return this.rotateOnAxis(t,e)}}(),rotateZ:function(){var t=new THREE.Vector3(0,0,1);return function(e){return this.rotateOnAxis(t,e)}}(),translateOnAxis:function(){var t=new THREE.Vector3;return function(e,r){return t.copy(e).applyQuaternion(this.quaternion),this.position.add(t.multiplyScalar(r)),this}}(),translate:function(t,e){return console.warn("THREE.Object3D: .translate() has been removed. Use .translateOnAxis( axis, distance ) instead."),this.translateOnAxis(e,t)},translateX:function(){var t=new THREE.Vector3(1,0,0);return function(e){return this.translateOnAxis(t,e)}}(),translateY:function(){var t=new THREE.Vector3(0,1,0);return function(e){return this.translateOnAxis(t,e)}}(),translateZ:function(){var t=new THREE.Vector3(0,0,1);return function(e){return this.translateOnAxis(t,e)}}(),localToWorld:function(t){return t.applyMatrix4(this.matrixWorld)},worldToLocal:function(){var t=new THREE.Matrix4;return function(e){return e.applyMatrix4(t.getInverse(this.matrixWorld))}}(),lookAt:function(){var t=new THREE.Matrix4;return function(e){t.lookAt(e,this.position,this.up),this.quaternion.setFromRotationMatrix(t)}}(),add:function(t){if(arguments.length>1){for(var e=0;e<arguments.length;e++)this.add(arguments[e]);return this}return t===this?(console.error("THREE.Object3D.add: object can't be added as a child of itself.",t),this):(t instanceof THREE.Object3D?(null!==t.parent&&t.parent.remove(t),t.parent=this,t.dispatchEvent({type:"added"}),this.children.push(t)):console.error("THREE.Object3D.add: object not an instance of THREE.Object3D.",t),this)},remove:function(t){if(arguments.length>1)for(var e=0;e<arguments.length;e++)this.remove(arguments[e]);var r=this.children.indexOf(t);-1!==r&&(t.parent=null,t.dispatchEvent({type:"removed"}),this.children.splice(r,1))},getChildByName:function(t){return console.warn("THREE.Object3D: .getChildByName() has been renamed to .getObjectByName()."),this.getObjectByName(t)},getObjectById:function(t){return this.getObjectByProperty("id",t)},getObjectByName:function(t){return this.getObjectByProperty("name",t)},getObjectByProperty:function(t,e){if(this[t]===e)return this;for(var r=0,i=this.children.length;r<i;r++){var n=this.children[r].getObjectByProperty(t,e);if(void 0!==n)return n}},getWorldPosition:function(t){var e=t||new THREE.Vector3;return this.updateMatrixWorld(!0),e.setFromMatrixPosition(this.matrixWorld)},getWorldQuaternion:function(){var t=new THREE.Vector3,e=new THREE.Vector3;return function(r){var i=r||new THREE.Quaternion;return this.updateMatrixWorld(!0),this.matrixWorld.decompose(t,i,e),i}}(),getWorldRotation:function(){var t=new THREE.Quaternion;return function(e){var r=e||new THREE.Euler;return this.getWorldQuaternion(t),r.setFromQuaternion(t,this.rotation.order,!1)}}(),getWorldScale:function(){var t=new THREE.Vector3,e=new THREE.Quaternion;return function(r){var i=r||new THREE.Vector3;return this.updateMatrixWorld(!0),this.matrixWorld.decompose(t,e,i),i}}(),getWorldDirection:function(){var t=new THREE.Quaternion;return function(e){var r=e||new THREE.Vector3;return this.getWorldQuaternion(t),r.set(0,0,1).applyQuaternion(t)}}(),raycast:function(){},traverse:function(t){t(this);for(var e=this.children,r=0,i=e.length;r<i;r++)e[r].traverse(t)},traverseVisible:function(t){if(!1!==this.visible){t(this);for(var e=this.children,r=0,i=e.length;r<i;r++)e[r].traverseVisible(t)}},traverseAncestors:function(t){var e=this.parent;null!==e&&(t(e),e.traverseAncestors(t))},updateMatrix:function(){this.matrix.compose(this.position,this.quaternion,this.scale),this.matrixWorldNeedsUpdate=!0},updateMatrixWorld:function(t){!0===this.matrixAutoUpdate&&this.updateMatrix(),!0!==this.matrixWorldNeedsUpdate&&!0!==t||(null===this.parent?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix),this.matrixWorldNeedsUpdate=!1,t=!0);for(var e=0,r=this.children.length;e<r;e++)this.children[e].updateMatrixWorld(t)},toJSON:function(t){var e=void 0===t,r={};e&&(t={geometries:{},materials:{},textures:{},images:{}},r.metadata={version:4.4,type:"Object",generator:"Object3D.toJSON"});var i={};if(i.uuid=this.uuid,i.type=this.type,""!==this.name&&(i.name=this.name),"{}"!==JSON.stringify(this.userData)&&(i.userData=this.userData),!0===this.castShadow&&(i.castShadow=!0),!0===this.receiveShadow&&(i.receiveShadow=!0),!1===this.visible&&(i.visible=!1),i.matrix=this.matrix.toArray(),void 0!==this.geometry&&(void 0===t.geometries[this.geometry.uuid]&&(t.geometries[this.geometry.uuid]=this.geometry.toJSON(t)),i.geometry=this.geometry.uuid),void 0!==this.material&&(void 0===t.materials[this.material.uuid]&&(t.materials[this.material.uuid]=this.material.toJSON(t)),i.material=this.material.uuid),this.children.length>0){i.children=[];for(var n=0;n<this.children.length;n++)i.children.push(this.children[n].toJSON(t).object)}if(e){var o=c(t.geometries),a=c(t.materials),s=c(t.textures),h=c(t.images);o.length>0&&(r.geometries=o),a.length>0&&(r.materials=a),s.length>0&&(r.textures=s),h.length>0&&(r.images=h)}return r.object=i,r;function c(t){var e=[];for(var r in t){var i=t[r];delete i.metadata,e.push(i)}return e}},clone:function(t){return(new this.constructor).copy(this,t)},copy:function(t,e){if(void 0===e&&(e=!0),this.name=t.name,this.up.copy(t.up),this.position.copy(t.position),this.quaternion.copy(t.quaternion),this.scale.copy(t.scale),this.rotationAutoUpdate=t.rotationAutoUpdate,this.matrix.copy(t.matrix),this.matrixWorld.copy(t.matrixWorld),this.matrixAutoUpdate=t.matrixAutoUpdate,this.matrixWorldNeedsUpdate=t.matrixWorldNeedsUpdate,this.visible=t.visible,this.castShadow=t.castShadow,this.receiveShadow=t.receiveShadow,this.frustumCulled=t.frustumCulled,this.renderOrder=t.renderOrder,this.userData=JSON.parse(JSON.stringify(t.userData)),!0===e)for(var r=0;r<t.children.length;r++){var i=t.children[r];this.add(i.clone())}return this}},THREE.EventDispatcher.prototype.apply(THREE.Object3D.prototype),THREE.Object3DIdCount=0,THREE.Face3=function(t,e,r,i,n,o){this.a=t,this.b=e,this.c=r,this.normal=i instanceof THREE.Vector3?i:new THREE.Vector3,this.vertexNormals=Array.isArray(i)?i:[],this.color=n instanceof THREE.Color?n:new THREE.Color,this.vertexColors=Array.isArray(n)?n:[],this.materialIndex=void 0!==o?o:0},THREE.Face3.prototype={constructor:THREE.Face3,clone:function(){return(new this.constructor).copy(this)},copy:function(t){this.a=t.a,this.b=t.b,this.c=t.c,this.normal.copy(t.normal),this.color.copy(t.color),this.materialIndex=t.materialIndex;for(var e=0,r=t.vertexNormals.length;e<r;e++)this.vertexNormals[e]=t.vertexNormals[e].clone();for(e=0,r=t.vertexColors.length;e<r;e++)this.vertexColors[e]=t.vertexColors[e].clone();return this}},THREE.Face4=function(t,e,r,i,n,o,a){return console.warn("THREE.Face4 has been removed. A THREE.Face3 will be created instead."),new THREE.Face3(t,e,r,n,o,a)},THREE.BufferAttribute=function(t,e){this.uuid=THREE.Math.generateUUID(),this.array=t,this.itemSize=e,this.dynamic=!1,this.updateRange={offset:0,count:-1},this.version=0},THREE.BufferAttribute.prototype={constructor:THREE.BufferAttribute,get length(){return console.warn("THREE.BufferAttribute: .length has been deprecated. Please use .count."),this.array.length},get count(){return this.array.length/this.itemSize},set needsUpdate(t){!0===t&&this.version++},setDynamic:function(t){return this.dynamic=t,this},copy:function(t){return this.array=new t.array.constructor(t.array),this.itemSize=t.itemSize,this.dynamic=t.dynamic,this},copyAt:function(t,e,r){t*=this.itemSize,r*=e.itemSize;for(var i=0,n=this.itemSize;i<n;i++)this.array[t+i]=e.array[r+i];return this},copyArray:function(t){return this.array.set(t),this},copyColorsArray:function(t){for(var e=this.array,r=0,i=0,n=t.length;i<n;i++){var o=t[i];void 0===o&&(console.warn("THREE.BufferAttribute.copyColorsArray(): color is undefined",i),o=new THREE.Color),e[r++]=o.r,e[r++]=o.g,e[r++]=o.b}return this},copyIndicesArray:function(t){for(var e=this.array,r=0,i=0,n=t.length;i<n;i++){var o=t[i];e[r++]=o.a,e[r++]=o.b,e[r++]=o.c}return this},copyVector2sArray:function(t){for(var e=this.array,r=0,i=0,n=t.length;i<n;i++){var o=t[i];void 0===o&&(console.warn("THREE.BufferAttribute.copyVector2sArray(): vector is undefined",i),o=new THREE.Vector2),e[r++]=o.x,e[r++]=o.y}return this},copyVector3sArray:function(t){for(var e=this.array,r=0,i=0,n=t.length;i<n;i++){var o=t[i];void 0===o&&(console.warn("THREE.BufferAttribute.copyVector3sArray(): vector is undefined",i),o=new THREE.Vector3),e[r++]=o.x,e[r++]=o.y,e[r++]=o.z}return this},copyVector4sArray:function(t){for(var e=this.array,r=0,i=0,n=t.length;i<n;i++){var o=t[i];void 0===o&&(console.warn("THREE.BufferAttribute.copyVector4sArray(): vector is undefined",i),o=new THREE.Vector4),e[r++]=o.x,e[r++]=o.y,e[r++]=o.z,e[r++]=o.w}return this},set:function(t,e){return void 0===e&&(e=0),this.array.set(t,e),this},getX:function(t){return this.array[t*this.itemSize]},setX:function(t,e){return this.array[t*this.itemSize]=e,this},getY:function(t){return this.array[t*this.itemSize+1]},setY:function(t,e){return this.array[t*this.itemSize+1]=e,this},getZ:function(t){return this.array[t*this.itemSize+2]},setZ:function(t,e){return this.array[t*this.itemSize+2]=e,this},getW:function(t){return this.array[t*this.itemSize+3]},setW:function(t,e){return this.array[t*this.itemSize+3]=e,this},setXY:function(t,e,r){return t*=this.itemSize,this.array[t+0]=e,this.array[t+1]=r,this},setXYZ:function(t,e,r,i){return t*=this.itemSize,this.array[t+0]=e,this.array[t+1]=r,this.array[t+2]=i,this},setXYZW:function(t,e,r,i,n){return t*=this.itemSize,this.array[t+0]=e,this.array[t+1]=r,this.array[t+2]=i,this.array[t+3]=n,this},clone:function(){return(new this.constructor).copy(this)}},THREE.Int8Attribute=function(t,e){return new THREE.BufferAttribute(new Int8Array(t),e)},THREE.Uint8Attribute=function(t,e){return new THREE.BufferAttribute(new Uint8Array(t),e)},THREE.Uint8ClampedAttribute=function(t,e){return new THREE.BufferAttribute(new Uint8ClampedArray(t),e)},THREE.Int16Attribute=function(t,e){return new THREE.BufferAttribute(new Int16Array(t),e)},THREE.Uint16Attribute=function(t,e){return new THREE.BufferAttribute(new Uint16Array(t),e)},THREE.Int32Attribute=function(t,e){return new THREE.BufferAttribute(new Int32Array(t),e)},THREE.Uint32Attribute=function(t,e){return new THREE.BufferAttribute(new Uint32Array(t),e)},THREE.Float32Attribute=function(t,e){return new THREE.BufferAttribute(new Float32Array(t),e)},THREE.Float64Attribute=function(t,e){return new THREE.BufferAttribute(new Float64Array(t),e)},THREE.DynamicBufferAttribute=function(t,e){return console.warn("THREE.DynamicBufferAttribute has been removed. Use new THREE.BufferAttribute().setDynamic( true ) instead."),new THREE.BufferAttribute(t,e).setDynamic(!0)},THREE.InstancedBufferAttribute=function(t,e,r){THREE.BufferAttribute.call(this,t,e),this.meshPerAttribute=r||1},THREE.InstancedBufferAttribute.prototype=Object.create(THREE.BufferAttribute.prototype),THREE.InstancedBufferAttribute.prototype.constructor=THREE.InstancedBufferAttribute,THREE.InstancedBufferAttribute.prototype.copy=function(t){return THREE.BufferAttribute.prototype.copy.call(this,t),this.meshPerAttribute=t.meshPerAttribute,this},THREE.InterleavedBuffer=function(t,e){this.uuid=THREE.Math.generateUUID(),this.array=t,this.stride=e,this.dynamic=!1,this.updateRange={offset:0,count:-1},this.version=0},THREE.InterleavedBuffer.prototype={constructor:THREE.InterleavedBuffer,get length(){return this.array.length},get count(){return this.array.length/this.stride},set needsUpdate(t){!0===t&&this.version++},setDynamic:function(t){return this.dynamic=t,this},copy:function(t){this.array=new t.array.constructor(t.array),this.stride=t.stride,this.dynamic=t.dynamic},copyAt:function(t,e,r){t*=this.stride,r*=e.stride;for(var i=0,n=this.stride;i<n;i++)this.array[t+i]=e.array[r+i];return this},set:function(t,e){return void 0===e&&(e=0),this.array.set(t,e),this},clone:function(){return(new this.constructor).copy(this)}},THREE.InstancedInterleavedBuffer=function(t,e,r){THREE.InterleavedBuffer.call(this,t,e),this.meshPerAttribute=r||1},THREE.InstancedInterleavedBuffer.prototype=Object.create(THREE.InterleavedBuffer.prototype),THREE.InstancedInterleavedBuffer.prototype.constructor=THREE.InstancedInterleavedBuffer,THREE.InstancedInterleavedBuffer.prototype.copy=function(t){return THREE.InterleavedBuffer.prototype.copy.call(this,t),this.meshPerAttribute=t.meshPerAttribute,this},THREE.InterleavedBufferAttribute=function(t,e,r){this.uuid=THREE.Math.generateUUID(),this.data=t,this.itemSize=e,this.offset=r},THREE.InterleavedBufferAttribute.prototype={constructor:THREE.InterleavedBufferAttribute,get length(){return console.warn("THREE.BufferAttribute: .length has been deprecated. Please use .count."),this.array.length},get count(){return this.data.array.length/this.data.stride},setX:function(t,e){return this.data.array[t*this.data.stride+this.offset]=e,this},setY:function(t,e){return this.data.array[t*this.data.stride+this.offset+1]=e,this},setZ:function(t,e){return this.data.array[t*this.data.stride+this.offset+2]=e,this},setW:function(t,e){return this.data.array[t*this.data.stride+this.offset+3]=e,this},getX:function(t){return this.data.array[t*this.data.stride+this.offset]},getY:function(t){return this.data.array[t*this.data.stride+this.offset+1]},getZ:function(t){return this.data.array[t*this.data.stride+this.offset+2]},getW:function(t){return this.data.array[t*this.data.stride+this.offset+3]},setXY:function(t,e,r){return t=t*this.data.stride+this.offset,this.data.array[t+0]=e,this.data.array[t+1]=r,this},setXYZ:function(t,e,r,i){return t=t*this.data.stride+this.offset,this.data.array[t+0]=e,this.data.array[t+1]=r,this.data.array[t+2]=i,this},setXYZW:function(t,e,r,i,n){return t=t*this.data.stride+this.offset,this.data.array[t+0]=e,this.data.array[t+1]=r,this.data.array[t+2]=i,this.data.array[t+3]=n,this}},THREE.Geometry=function(){Object.defineProperty(this,"id",{value:THREE.GeometryIdCount++}),this.uuid=THREE.Math.generateUUID(),this.name="",this.type="Geometry",this.vertices=[],this.colors=[],this.faces=[],this.faceVertexUvs=[[]],this.morphTargets=[],this.morphNormals=[],this.skinWeights=[],this.skinIndices=[],this.lineDistances=[],this.boundingBox=null,this.boundingSphere=null,this.verticesNeedUpdate=!1,this.elementsNeedUpdate=!1,this.uvsNeedUpdate=!1,this.normalsNeedUpdate=!1,this.colorsNeedUpdate=!1,this.lineDistancesNeedUpdate=!1,this.groupsNeedUpdate=!1},THREE.Geometry.prototype={constructor:THREE.Geometry,applyMatrix:function(t){for(var e=(new THREE.Matrix3).getNormalMatrix(t),r=0,i=this.vertices.length;r<i;r++){this.vertices[r].applyMatrix4(t)}for(r=0,i=this.faces.length;r<i;r++){var n=this.faces[r];n.normal.applyMatrix3(e).normalize();for(var o=0,a=n.vertexNormals.length;o<a;o++)n.vertexNormals[o].applyMatrix3(e).normalize()}null!==this.boundingBox&&this.computeBoundingBox(),null!==this.boundingSphere&&this.computeBoundingSphere(),this.verticesNeedUpdate=!0,this.normalsNeedUpdate=!0},rotateX:function(){var t;return function(e){return void 0===t&&(t=new THREE.Matrix4),t.makeRotationX(e),this.applyMatrix(t),this}}(),rotateY:function(){var t;return function(e){return void 0===t&&(t=new THREE.Matrix4),t.makeRotationY(e),this.applyMatrix(t),this}}(),rotateZ:function(){var t;return function(e){return void 0===t&&(t=new THREE.Matrix4),t.makeRotationZ(e),this.applyMatrix(t),this}}(),translate:function(){var t;return function(e,r,i){return void 0===t&&(t=new THREE.Matrix4),t.makeTranslation(e,r,i),this.applyMatrix(t),this}}(),scale:function(){var t;return function(e,r,i){return void 0===t&&(t=new THREE.Matrix4),t.makeScale(e,r,i),this.applyMatrix(t),this}}(),lookAt:function(){var t;return function(e){void 0===t&&(t=new THREE.Object3D),t.lookAt(e),t.updateMatrix(),this.applyMatrix(t.matrix)}}(),fromBufferGeometry:function(t){var e=this,r=null!==t.index?t.index.array:void 0,i=t.attributes,n=i.position.array,o=void 0!==i.normal?i.normal.array:void 0,a=void 0!==i.color?i.color.array:void 0,s=void 0!==i.uv?i.uv.array:void 0,h=void 0!==i.uv2?i.uv2.array:void 0;void 0!==h&&(this.faceVertexUvs[1]=[]);for(var c=[],u=[],l=[],E=0,p=0,d=0;E<n.length;E+=3,p+=2,d+=4)e.vertices.push(new THREE.Vector3(n[E],n[E+1],n[E+2])),void 0!==o&&c.push(new THREE.Vector3(o[E],o[E+1],o[E+2])),void 0!==a&&e.colors.push(new THREE.Color(a[E],a[E+1],a[E+2])),void 0!==s&&u.push(new THREE.Vector2(s[p],s[p+1])),void 0!==h&&l.push(new THREE.Vector2(h[p],h[p+1]));function f(t,r,i){var n=void 0!==o?[c[t].clone(),c[r].clone(),c[i].clone()]:[],E=void 0!==a?[e.colors[t].clone(),e.colors[r].clone(),e.colors[i].clone()]:[],p=new THREE.Face3(t,r,i,n,E);e.faces.push(p),void 0!==s&&e.faceVertexUvs[0].push([u[t].clone(),u[r].clone(),u[i].clone()]),void 0!==h&&e.faceVertexUvs[1].push([l[t].clone(),l[r].clone(),l[i].clone()])}if(void 0!==r){var m=t.groups;if(m.length>0)for(E=0;E<m.length;E++)for(var T=m[E],g=T.start,v=(p=g,g+T.count);p<v;p+=3)f(r[p],r[p+1],r[p+2]);else for(E=0;E<r.length;E+=3)f(r[E],r[E+1],r[E+2])}else for(E=0;E<n.length/3;E+=3)f(E,E+1,E+2);return this.computeFaceNormals(),null!==t.boundingBox&&(this.boundingBox=t.boundingBox.clone()),null!==t.boundingSphere&&(this.boundingSphere=t.boundingSphere.clone()),this},center:function(){this.computeBoundingBox();var t=this.boundingBox.center().negate();return this.translate(t.x,t.y,t.z),t},normalize:function(){this.computeBoundingSphere();var t=this.boundingSphere.center,e=this.boundingSphere.radius,r=0===e?1:1/e,i=new THREE.Matrix4;return i.set(r,0,0,-r*t.x,0,r,0,-r*t.y,0,0,r,-r*t.z,0,0,0,1),this.applyMatrix(i),this},computeFaceNormals:function(){for(var t=new THREE.Vector3,e=new THREE.Vector3,r=0,i=this.faces.length;r<i;r++){var n=this.faces[r],o=this.vertices[n.a],a=this.vertices[n.b],s=this.vertices[n.c];t.subVectors(s,a),e.subVectors(o,a),t.cross(e),t.normalize(),n.normal.copy(t)}},computeVertexNormals:function(t){var e,r,i,n,o,a;for(a=new Array(this.vertices.length),e=0,r=this.vertices.length;e<r;e++)a[e]=new THREE.Vector3;if(t){var s,h,c,u=new THREE.Vector3,l=new THREE.Vector3;for(i=0,n=this.faces.length;i<n;i++)o=this.faces[i],s=this.vertices[o.a],h=this.vertices[o.b],c=this.vertices[o.c],u.subVectors(c,h),l.subVectors(s,h),u.cross(l),a[o.a].add(u),a[o.b].add(u),a[o.c].add(u)}else for(i=0,n=this.faces.length;i<n;i++)a[(o=this.faces[i]).a].add(o.normal),a[o.b].add(o.normal),a[o.c].add(o.normal);for(e=0,r=this.vertices.length;e<r;e++)a[e].normalize();for(i=0,n=this.faces.length;i<n;i++){var E=(o=this.faces[i]).vertexNormals;3===E.length?(E[0].copy(a[o.a]),E[1].copy(a[o.b]),E[2].copy(a[o.c])):(E[0]=a[o.a].clone(),E[1]=a[o.b].clone(),E[2]=a[o.c].clone())}},computeMorphNormals:function(){var t,e,r,i,n;for(r=0,i=this.faces.length;r<i;r++)for((n=this.faces[r]).__originalFaceNormal?n.__originalFaceNormal.copy(n.normal):n.__originalFaceNormal=n.normal.clone(),n.__originalVertexNormals||(n.__originalVertexNormals=[]),t=0,e=n.vertexNormals.length;t<e;t++)n.__originalVertexNormals[t]?n.__originalVertexNormals[t].copy(n.vertexNormals[t]):n.__originalVertexNormals[t]=n.vertexNormals[t].clone();var o=new THREE.Geometry;for(o.faces=this.faces,t=0,e=this.morphTargets.length;t<e;t++){if(!this.morphNormals[t]){this.morphNormals[t]={},this.morphNormals[t].faceNormals=[],this.morphNormals[t].vertexNormals=[];var a=this.morphNormals[t].faceNormals,s=this.morphNormals[t].vertexNormals;for(r=0,i=this.faces.length;r<i;r++)h=new THREE.Vector3,c={a:new THREE.Vector3,b:new THREE.Vector3,c:new THREE.Vector3},a.push(h),s.push(c)}var h,c,u=this.morphNormals[t];for(o.vertices=this.morphTargets[t].vertices,o.computeFaceNormals(),o.computeVertexNormals(),r=0,i=this.faces.length;r<i;r++)n=this.faces[r],h=u.faceNormals[r],c=u.vertexNormals[r],h.copy(n.normal),c.a.copy(n.vertexNormals[0]),c.b.copy(n.vertexNormals[1]),c.c.copy(n.vertexNormals[2])}for(r=0,i=this.faces.length;r<i;r++)(n=this.faces[r]).normal=n.__originalFaceNormal,n.vertexNormals=n.__originalVertexNormals},computeTangents:function(){console.warn("THREE.Geometry: .computeTangents() has been removed.")},computeLineDistances:function(){for(var t=0,e=this.vertices,r=0,i=e.length;r<i;r++)r>0&&(t+=e[r].distanceTo(e[r-1])),this.lineDistances[r]=t},computeBoundingBox:function(){null===this.boundingBox&&(this.boundingBox=new THREE.Box3),this.boundingBox.setFromPoints(this.vertices)},computeBoundingSphere:function(){null===this.boundingSphere&&(this.boundingSphere=new THREE.Sphere),this.boundingSphere.setFromPoints(this.vertices)},merge:function(t,e,r){if(t instanceof THREE.Geometry!=!1){var i,n=this.vertices.length,o=this.vertices,a=t.vertices,s=this.faces,h=t.faces,c=this.faceVertexUvs[0],u=t.faceVertexUvs[0];void 0===r&&(r=0),void 0!==e&&(i=(new THREE.Matrix3).getNormalMatrix(e));for(var l=0,E=a.length;l<E;l++){var p=a[l].clone();void 0!==e&&p.applyMatrix4(e),o.push(p)}for(l=0,E=h.length;l<E;l++){var d,f,m,T=h[l],g=T.vertexNormals,v=T.vertexColors;(d=new THREE.Face3(T.a+n,T.b+n,T.c+n)).normal.copy(T.normal),void 0!==i&&d.normal.applyMatrix3(i).normalize();for(var y=0,R=g.length;y<R;y++)f=g[y].clone(),void 0!==i&&f.applyMatrix3(i).normalize(),d.vertexNormals.push(f);d.color.copy(T.color);for(y=0,R=v.length;y<R;y++)m=v[y],d.vertexColors.push(m.clone());d.materialIndex=T.materialIndex+r,s.push(d)}for(l=0,E=u.length;l<E;l++){var H=u[l],x=[];if(void 0!==H){for(y=0,R=H.length;y<R;y++)x.push(H[y].clone());c.push(x)}}}else console.error("THREE.Geometry.merge(): geometry not an instance of THREE.Geometry.",t)},mergeMesh:function(t){t instanceof THREE.Mesh!=!1?(t.matrixAutoUpdate&&t.updateMatrix(),this.merge(t.geometry,t.matrix)):console.error("THREE.Geometry.mergeMesh(): mesh not an instance of THREE.Mesh.",t)},mergeVertices:function(){var t,e,r,i,n,o,a,s,h={},c=[],u=[],l=Math.pow(10,4);for(r=0,i=this.vertices.length;r<i;r++)t=this.vertices[r],void 0===h[e=Math.round(t.x*l)+"_"+Math.round(t.y*l)+"_"+Math.round(t.z*l)]?(h[e]=r,c.push(this.vertices[r]),u[r]=c.length-1):u[r]=u[h[e]];var E=[];for(r=0,i=this.faces.length;r<i;r++){(n=this.faces[r]).a=u[n.a],n.b=u[n.b],n.c=u[n.c],o=[n.a,n.b,n.c];for(var p=0;p<3;p++)if(o[p]===o[(p+1)%3]){p,E.push(r);break}}for(r=E.length-1;r>=0;r--){var d=E[r];for(this.faces.splice(d,1),a=0,s=this.faceVertexUvs.length;a<s;a++)this.faceVertexUvs[a].splice(d,1)}var f=this.vertices.length-c.length;return this.vertices=c,f},sortFacesByMaterialIndex:function(){for(var t=this.faces,e=t.length,r=0;r<e;r++)t[r]._id=r;t.sort((function(t,e){return t.materialIndex-e.materialIndex}));var i,n,o=this.faceVertexUvs[0],a=this.faceVertexUvs[1];o&&o.length===e&&(i=[]),a&&a.length===e&&(n=[]);for(r=0;r<e;r++){var s=t[r]._id;i&&i.push(o[s]),n&&n.push(a[s])}i&&(this.faceVertexUvs[0]=i),n&&(this.faceVertexUvs[1]=n)},toJSON:function(){var t={metadata:{version:4.4,type:"Geometry",generator:"Geometry.toJSON"}};if(t.uuid=this.uuid,t.type=this.type,""!==this.name&&(t.name=this.name),void 0!==this.parameters){var e=this.parameters;for(var r in e)void 0!==e[r]&&(t[r]=e[r]);return t}for(var i=[],n=0;n<this.vertices.length;n++){var o=this.vertices[n];i.push(o.x,o.y,o.z)}var a=[],s=[],h={},c=[],u={},l=[],E={};for(n=0;n<this.faces.length;n++){var p=this.faces[n],d=void 0!==this.faceVertexUvs[0][n],f=p.normal.length()>0,m=p.vertexNormals.length>0,T=1!==p.color.r||1!==p.color.g||1!==p.color.b,g=p.vertexColors.length>0,v=0;if(v=x(v,0,0),v=x(v,1,!1),v=x(v,2,!1),v=x(v,3,d),v=x(v,4,f),v=x(v,5,m),v=x(v,6,T),v=x(v,7,g),a.push(v),a.push(p.a,p.b,p.c),d){var y=this.faceVertexUvs[0][n];a.push(M(y[0]),M(y[1]),M(y[2]))}if(f&&a.push(b(p.normal)),m){var R=p.vertexNormals;a.push(b(R[0]),b(R[1]),b(R[2]))}if(T&&a.push(w(p.color)),g){var H=p.vertexColors;a.push(w(H[0]),w(H[1]),w(H[2]))}}function x(t,e,r){return r?t|1<<e:t&~(1<<e)}function b(t){var e=t.x.toString()+t.y.toString()+t.z.toString();return void 0!==h[e]||(h[e]=s.length/3,s.push(t.x,t.y,t.z)),h[e]}function w(t){var e=t.r.toString()+t.g.toString()+t.b.toString();return void 0!==u[e]||(u[e]=c.length,c.push(t.getHex())),u[e]}function M(t){var e=t.x.toString()+t.y.toString();return void 0!==E[e]||(E[e]=l.length/2,l.push(t.x,t.y)),E[e]}return t.data={},t.data.vertices=i,t.data.normals=s,c.length>0&&(t.data.colors=c),l.length>0&&(t.data.uvs=[l]),t.data.faces=a,t},clone:function(){return(new this.constructor).copy(this)},copy:function(t){this.vertices=[],this.faces=[],this.faceVertexUvs=[[]];for(var e=t.vertices,r=0,i=e.length;r<i;r++)this.vertices.push(e[r].clone());var n=t.faces;for(r=0,i=n.length;r<i;r++)this.faces.push(n[r].clone());for(r=0,i=t.faceVertexUvs.length;r<i;r++){var o=t.faceVertexUvs[r];void 0===this.faceVertexUvs[r]&&(this.faceVertexUvs[r]=[]);for(var a=0,s=o.length;a<s;a++){for(var h=o[a],c=[],u=0,l=h.length;u<l;u++){var E=h[u];c.push(E.clone())}this.faceVertexUvs[r].push(c)}}return this},dispose:function(){this.dispatchEvent({type:"dispose"})}},THREE.EventDispatcher.prototype.apply(THREE.Geometry.prototype),THREE.GeometryIdCount=0,THREE.DirectGeometry=function(){Object.defineProperty(this,"id",{value:THREE.GeometryIdCount++}),this.uuid=THREE.Math.generateUUID(),this.name="",this.type="DirectGeometry",this.indices=[],this.vertices=[],this.normals=[],this.colors=[],this.uvs=[],this.uvs2=[],this.groups=[],this.morphTargets={},this.skinWeights=[],this.skinIndices=[],this.boundingBox=null,this.boundingSphere=null,this.verticesNeedUpdate=!1,this.normalsNeedUpdate=!1,this.colorsNeedUpdate=!1,this.uvsNeedUpdate=!1,this.groupsNeedUpdate=!1},THREE.DirectGeometry.prototype={constructor:THREE.DirectGeometry,computeBoundingBox:THREE.Geometry.prototype.computeBoundingBox,computeBoundingSphere:THREE.Geometry.prototype.computeBoundingSphere,computeFaceNormals:function(){console.warn("THREE.DirectGeometry: computeFaceNormals() is not a method of this type of geometry.")},computeVertexNormals:function(){console.warn("THREE.DirectGeometry: computeVertexNormals() is not a method of this type of geometry.")},computeGroups:function(t){for(var e,r,i=[],n=t.faces,o=0;o<n.length;o++){var a=n[o];a.materialIndex!==r&&(r=a.materialIndex,void 0!==e&&(e.count=3*o-e.start,i.push(e)),e={start:3*o,materialIndex:r})}void 0!==e&&(e.count=3*o-e.start,i.push(e)),this.groups=i},fromGeometry:function(t){var e=t.faces,r=t.vertices,i=t.faceVertexUvs,n=i[0]&&i[0].length>0,o=i[1]&&i[1].length>0,a=t.morphTargets,s=a.length;if(s>0){for(var h=[],c=0;c<s;c++)h[c]=[];this.morphTargets.position=h}var u=t.morphNormals,l=u.length;if(l>0){var E=[];for(c=0;c<l;c++)E[c]=[];this.morphTargets.normal=E}var p=t.skinIndices,d=t.skinWeights,f=p.length===r.length,m=d.length===r.length;for(c=0;c<e.length;c++){var T=e[c];this.vertices.push(r[T.a],r[T.b],r[T.c]);var g=T.vertexNormals;if(3===g.length)this.normals.push(g[0],g[1],g[2]);else{var v=T.normal;this.normals.push(v,v,v)}var y,R=T.vertexColors;if(3===R.length)this.colors.push(R[0],R[1],R[2]);else{var H=T.color;this.colors.push(H,H,H)}if(!0===n)void 0!==(y=i[0][c])?this.uvs.push(y[0],y[1],y[2]):(console.warn("THREE.DirectGeometry.fromGeometry(): Undefined vertexUv ",c),this.uvs.push(new THREE.Vector2,new THREE.Vector2,new THREE.Vector2));if(!0===o)void 0!==(y=i[1][c])?this.uvs2.push(y[0],y[1],y[2]):(console.warn("THREE.DirectGeometry.fromGeometry(): Undefined vertexUv2 ",c),this.uvs2.push(new THREE.Vector2,new THREE.Vector2,new THREE.Vector2));for(var x=0;x<s;x++){var b=a[x].vertices;h[x].push(b[T.a],b[T.b],b[T.c])}for(x=0;x<l;x++){var w=u[x].vertexNormals[c];E[x].push(w.a,w.b,w.c)}f&&this.skinIndices.push(p[T.a],p[T.b],p[T.c]),m&&this.skinWeights.push(d[T.a],d[T.b],d[T.c])}return this.computeGroups(t),this.verticesNeedUpdate=t.verticesNeedUpdate,this.normalsNeedUpdate=t.normalsNeedUpdate,this.colorsNeedUpdate=t.colorsNeedUpdate,this.uvsNeedUpdate=t.uvsNeedUpdate,this.groupsNeedUpdate=t.groupsNeedUpdate,this},dispose:function(){this.dispatchEvent({type:"dispose"})}},THREE.EventDispatcher.prototype.apply(THREE.DirectGeometry.prototype),THREE.BufferGeometry=function(){Object.defineProperty(this,"id",{value:THREE.GeometryIdCount++}),this.uuid=THREE.Math.generateUUID(),this.name="",this.type="BufferGeometry",this.index=null,this.attributes={},this.morphAttributes={},this.groups=[],this.boundingBox=null,this.boundingSphere=null,this.drawRange={start:0,count:1/0}},THREE.BufferGeometry.prototype={constructor:THREE.BufferGeometry,addIndex:function(t){console.warn("THREE.BufferGeometry: .addIndex() has been renamed to .setIndex()."),this.setIndex(t)},getIndex:function(){return this.index},setIndex:function(t){this.index=t},addAttribute:function(t,e){return e instanceof THREE.BufferAttribute==!1&&e instanceof THREE.InterleavedBufferAttribute==!1?(console.warn("THREE.BufferGeometry: .addAttribute() now expects ( name, attribute )."),void this.addAttribute(t,new THREE.BufferAttribute(arguments[1],arguments[2]))):"index"===t?(console.warn("THREE.BufferGeometry.addAttribute: Use .setIndex() for index attribute."),void this.setIndex(e)):void(this.attributes[t]=e)},getAttribute:function(t){return this.attributes[t]},removeAttribute:function(t){delete this.attributes[t]},get drawcalls(){return console.error("THREE.BufferGeometry: .drawcalls has been renamed to .groups."),this.groups},get offsets(){return console.warn("THREE.BufferGeometry: .offsets has been renamed to .groups."),this.groups},addDrawCall:function(t,e,r){void 0!==r&&console.warn("THREE.BufferGeometry: .addDrawCall() no longer supports indexOffset."),console.warn("THREE.BufferGeometry: .addDrawCall() is now .addGroup()."),this.addGroup(t,e)},clearDrawCalls:function(){console.warn("THREE.BufferGeometry: .clearDrawCalls() is now .clearGroups()."),this.clearGroups()},addGroup:function(t,e,r){this.groups.push({start:t,count:e,materialIndex:void 0!==r?r:0})},clearGroups:function(){this.groups=[]},setDrawRange:function(t,e){this.drawRange.start=t,this.drawRange.count=e},applyMatrix:function(t){var e=this.attributes.position;void 0!==e&&(t.applyToVector3Array(e.array),e.needsUpdate=!0);var r=this.attributes.normal;void 0!==r&&((new THREE.Matrix3).getNormalMatrix(t).applyToVector3Array(r.array),r.needsUpdate=!0);null!==this.boundingBox&&this.computeBoundingBox(),null!==this.boundingSphere&&this.computeBoundingSphere()},rotateX:function(){var t;return function(e){return void 0===t&&(t=new THREE.Matrix4),t.makeRotationX(e),this.applyMatrix(t),this}}(),rotateY:function(){var t;return function(e){return void 0===t&&(t=new THREE.Matrix4),t.makeRotationY(e),this.applyMatrix(t),this}}(),rotateZ:function(){var t;return function(e){return void 0===t&&(t=new THREE.Matrix4),t.makeRotationZ(e),this.applyMatrix(t),this}}(),translate:function(){var t;return function(e,r,i){return void 0===t&&(t=new THREE.Matrix4),t.makeTranslation(e,r,i),this.applyMatrix(t),this}}(),scale:function(){var t;return function(e,r,i){return void 0===t&&(t=new THREE.Matrix4),t.makeScale(e,r,i),this.applyMatrix(t),this}}(),lookAt:function(){var t;return function(e){void 0===t&&(t=new THREE.Object3D),t.lookAt(e),t.updateMatrix(),this.applyMatrix(t.matrix)}}(),center:function(){this.computeBoundingBox();var t=this.boundingBox.center().negate();return this.translate(t.x,t.y,t.z),t},setFromObject:function(t){var e=t.geometry;if(t instanceof THREE.Points||t instanceof THREE.Line){var r=new THREE.Float32Attribute(3*e.vertices.length,3),i=new THREE.Float32Attribute(3*e.colors.length,3);if(this.addAttribute("position",r.copyVector3sArray(e.vertices)),this.addAttribute("color",i.copyColorsArray(e.colors)),e.lineDistances&&e.lineDistances.length===e.vertices.length){var n=new THREE.Float32Attribute(e.lineDistances.length,1);this.addAttribute("lineDistance",n.copyArray(e.lineDistances))}null!==e.boundingSphere&&(this.boundingSphere=e.boundingSphere.clone()),null!==e.boundingBox&&(this.boundingBox=e.boundingBox.clone())}else t instanceof THREE.Mesh&&e instanceof THREE.Geometry&&this.fromGeometry(e);return this},updateFromObject:function(t){var e,r=t.geometry;if(t instanceof THREE.Mesh){var i=r.__directGeometry;if(void 0===i)return this.fromGeometry(r);i.verticesNeedUpdate=r.verticesNeedUpdate,i.normalsNeedUpdate=r.normalsNeedUpdate,i.colorsNeedUpdate=r.colorsNeedUpdate,i.uvsNeedUpdate=r.uvsNeedUpdate,i.groupsNeedUpdate=r.groupsNeedUpdate,r.verticesNeedUpdate=!1,r.normalsNeedUpdate=!1,r.colorsNeedUpdate=!1,r.uvsNeedUpdate=!1,r.groupsNeedUpdate=!1,r=i}!0===r.verticesNeedUpdate&&(void 0!==(e=this.attributes.position)&&(e.copyVector3sArray(r.vertices),e.needsUpdate=!0),r.verticesNeedUpdate=!1);!0===r.normalsNeedUpdate&&(void 0!==(e=this.attributes.normal)&&(e.copyVector3sArray(r.normals),e.needsUpdate=!0),r.normalsNeedUpdate=!1);!0===r.colorsNeedUpdate&&(void 0!==(e=this.attributes.color)&&(e.copyColorsArray(r.colors),e.needsUpdate=!0),r.colorsNeedUpdate=!1);r.uvsNeedUpdate&&(void 0!==(e=this.attributes.uv)&&(e.copyVector2sArray(r.uvs),e.needsUpdate=!0),r.uvsNeedUpdate=!1);r.lineDistancesNeedUpdate&&(void 0!==(e=this.attributes.lineDistance)&&(e.copyArray(r.lineDistances),e.needsUpdate=!0),r.lineDistancesNeedUpdate=!1);return r.groupsNeedUpdate&&(r.computeGroups(t.geometry),this.groups=r.groups,r.groupsNeedUpdate=!1),this},fromGeometry:function(t){return t.__directGeometry=(new THREE.DirectGeometry).fromGeometry(t),this.fromDirectGeometry(t.__directGeometry)},fromDirectGeometry:function(t){var e=new Float32Array(3*t.vertices.length);if(this.addAttribute("position",new THREE.BufferAttribute(e,3).copyVector3sArray(t.vertices)),t.normals.length>0){var r=new Float32Array(3*t.normals.length);this.addAttribute("normal",new THREE.BufferAttribute(r,3).copyVector3sArray(t.normals))}if(t.colors.length>0){var i=new Float32Array(3*t.colors.length);this.addAttribute("color",new THREE.BufferAttribute(i,3).copyColorsArray(t.colors))}if(t.uvs.length>0){var n=new Float32Array(2*t.uvs.length);this.addAttribute("uv",new THREE.BufferAttribute(n,2).copyVector2sArray(t.uvs))}if(t.uvs2.length>0){var o=new Float32Array(2*t.uvs2.length);this.addAttribute("uv2",new THREE.BufferAttribute(o,2).copyVector2sArray(t.uvs2))}if(t.indices.length>0){var a=new(t.vertices.length>65535?Uint32Array:Uint16Array)(3*t.indices.length);this.setIndex(new THREE.BufferAttribute(a,1).copyIndicesArray(t.indices))}for(var s in this.groups=t.groups,t.morphTargets){for(var h=[],c=t.morphTargets[s],u=0,l=c.length;u<l;u++){var E=c[u],p=new THREE.Float32Attribute(3*E.length,3);h.push(p.copyVector3sArray(E))}this.morphAttributes[s]=h}if(t.skinIndices.length>0){var d=new THREE.Float32Attribute(4*t.skinIndices.length,4);this.addAttribute("skinIndex",d.copyVector4sArray(t.skinIndices))}if(t.skinWeights.length>0){var f=new THREE.Float32Attribute(4*t.skinWeights.length,4);this.addAttribute("skinWeight",f.copyVector4sArray(t.skinWeights))}return null!==t.boundingSphere&&(this.boundingSphere=t.boundingSphere.clone()),null!==t.boundingBox&&(this.boundingBox=t.boundingBox.clone()),this},computeBoundingBox:function(){var t=new THREE.Vector3;return function(){null===this.boundingBox&&(this.boundingBox=new THREE.Box3);var e=this.attributes.position.array;if(e){var r=this.boundingBox;r.makeEmpty();for(var i=0,n=e.length;i<n;i+=3)t.fromArray(e,i),r.expandByPoint(t)}void 0!==e&&0!==e.length||(this.boundingBox.min.set(0,0,0),this.boundingBox.max.set(0,0,0)),(isNaN(this.boundingBox.min.x)||isNaN(this.boundingBox.min.y)||isNaN(this.boundingBox.min.z))&&console.error('THREE.BufferGeometry.computeBoundingBox: Computed min/max have NaN values. The "position" attribute is likely to have NaN values.',this)}}(),computeBoundingSphere:function(){var t=new THREE.Box3,e=new THREE.Vector3;return function(){null===this.boundingSphere&&(this.boundingSphere=new THREE.Sphere);var r=this.attributes.position.array;if(r){t.makeEmpty();for(var i=this.boundingSphere.center,n=0,o=r.length;n<o;n+=3)e.fromArray(r,n),t.expandByPoint(e);t.center(i);var a=0;for(n=0,o=r.length;n<o;n+=3)e.fromArray(r,n),a=Math.max(a,i.distanceToSquared(e));this.boundingSphere.radius=Math.sqrt(a),isNaN(this.boundingSphere.radius)&&console.error('THREE.BufferGeometry.computeBoundingSphere(): Computed radius is NaN. The "position" attribute is likely to have NaN values.',this)}}}(),computeFaceNormals:function(){},computeVertexNormals:function(){var t=this.index,e=this.attributes,r=this.groups;if(e.position){var i=e.position.array;if(void 0===e.normal)this.addAttribute("normal",new THREE.BufferAttribute(new Float32Array(i.length),3));else for(var n=0,o=(c=e.normal.array).length;n<o;n++)c[n]=0;var a,s,h,c=e.normal.array,u=new THREE.Vector3,l=new THREE.Vector3,E=new THREE.Vector3,p=new THREE.Vector3,d=new THREE.Vector3;if(t){var f=t.array;0===r.length&&this.addGroup(0,f.length);for(var m=0,T=r.length;m<T;++m){var g=r[m],v=g.start;for(n=v,o=v+g.count;n<o;n+=3)a=3*f[n+0],s=3*f[n+1],h=3*f[n+2],u.fromArray(i,a),l.fromArray(i,s),E.fromArray(i,h),p.subVectors(E,l),d.subVectors(u,l),p.cross(d),c[a]+=p.x,c[a+1]+=p.y,c[a+2]+=p.z,c[s]+=p.x,c[s+1]+=p.y,c[s+2]+=p.z,c[h]+=p.x,c[h+1]+=p.y,c[h+2]+=p.z}}else for(n=0,o=i.length;n<o;n+=9)u.fromArray(i,n),l.fromArray(i,n+3),E.fromArray(i,n+6),p.subVectors(E,l),d.subVectors(u,l),p.cross(d),c[n]=p.x,c[n+1]=p.y,c[n+2]=p.z,c[n+3]=p.x,c[n+4]=p.y,c[n+5]=p.z,c[n+6]=p.x,c[n+7]=p.y,c[n+8]=p.z;this.normalizeNormals(),e.normal.needsUpdate=!0}},computeTangents:function(){console.warn("THREE.BufferGeometry: .computeTangents() has been removed.")},computeOffsets:function(t){console.warn("THREE.BufferGeometry: .computeOffsets() has been removed.")},merge:function(t,e){if(t instanceof THREE.BufferGeometry!=!1){void 0===e&&(e=0);var r=this.attributes;for(var i in r)if(void 0!==t.attributes[i])for(var n=r[i].array,o=t.attributes[i],a=o.array,s=0,h=o.itemSize*e;s<a.length;s++,h++)n[h]=a[s];return this}console.error("THREE.BufferGeometry.merge(): geometry not an instance of THREE.BufferGeometry.",t)},normalizeNormals:function(){for(var t,e,r,i,n=this.attributes.normal.array,o=0,a=n.length;o<a;o+=3)t=n[o],e=n[o+1],r=n[o+2],i=1/Math.sqrt(t*t+e*e+r*r),n[o]*=i,n[o+1]*=i,n[o+2]*=i},toJSON:function(){var t={metadata:{version:4.4,type:"BufferGeometry",generator:"BufferGeometry.toJSON"}};if(t.uuid=this.uuid,t.type=this.type,""!==this.name&&(t.name=this.name),void 0!==this.parameters){var e=this.parameters;for(var r in e)void 0!==e[r]&&(t[r]=e[r]);return t}t.data={attributes:{}};var i=this.index;if(null!==i){var n=Array.prototype.slice.call(i.array);t.data.index={type:i.array.constructor.name,array:n}}var o=this.attributes;for(var r in o){var a=o[r];n=Array.prototype.slice.call(a.array);t.data.attributes[r]={itemSize:a.itemSize,type:a.array.constructor.name,array:n}}var s=this.groups;s.length>0&&(t.data.groups=JSON.parse(JSON.stringify(s)));var h=this.boundingSphere;return null!==h&&(t.data.boundingSphere={center:h.center.toArray(),radius:h.radius}),t},clone:function(){return(new this.constructor).copy(this)},copy:function(t){var e=t.index;null!==e&&this.setIndex(e.clone());var r=t.attributes;for(var i in r){var n=r[i];this.addAttribute(i,n.clone())}for(var o=t.groups,a=0,s=o.length;a<s;a++){var h=o[a];this.addGroup(h.start,h.count)}return this},dispose:function(){this.dispatchEvent({type:"dispose"})}},THREE.EventDispatcher.prototype.apply(THREE.BufferGeometry.prototype),THREE.BufferGeometry.MaxIndex=65535,THREE.InstancedBufferGeometry=function(){THREE.BufferGeometry.call(this),this.type="InstancedBufferGeometry",this.maxInstancedCount=void 0},THREE.InstancedBufferGeometry.prototype=Object.create(THREE.BufferGeometry.prototype),THREE.InstancedBufferGeometry.prototype.constructor=THREE.InstancedBufferGeometry,THREE.InstancedBufferGeometry.prototype.addGroup=function(t,e,r){this.groups.push({start:t,count:e,instances:r})},THREE.InstancedBufferGeometry.prototype.copy=function(t){var e=t.index;null!==e&&this.setIndex(e.clone());var r=t.attributes;for(var i in r){var n=r[i];this.addAttribute(i,n.clone())}for(var o=t.groups,a=0,s=o.length;a<s;a++){var h=o[a];this.addGroup(h.start,h.count,h.instances)}return this},THREE.EventDispatcher.prototype.apply(THREE.InstancedBufferGeometry.prototype),THREE.AnimationAction=function(t,e,r,i,n){if(void 0===t)throw new Error("clip is null");this.clip=t,this.localRoot=null,this.startTime=e||0,this.timeScale=r||1,this.weight=i||1,this.loop=n||THREE.LoopRepeat,this.loopCount=0,this.enabled=!0,this.actionTime=-this.startTime,this.clipTime=0,this.propertyBindings=[]},THREE.AnimationAction.prototype={constructor:THREE.AnimationAction,setLocalRoot:function(t){return this.localRoot=t,this},updateTime:function(t){var e=this.clipTime,r=this.loopCount,i=(this.actionTime,this.clip.duration);if(this.actionTime=this.actionTime+t,this.loop===THREE.LoopOnce)return this.loopCount=0,this.clipTime=Math.min(Math.max(this.actionTime,0),i),this.clipTime!==e&&(this.clipTime===i?this.mixer.dispatchEvent({type:"finished",action:this,direction:1}):0===this.clipTime&&this.mixer.dispatchEvent({type:"finished",action:this,direction:-1})),this.clipTime;this.loopCount=Math.floor(this.actionTime/i);var n=this.actionTime-this.loopCount*i;return n%=i,this.loop==THREE.LoopPingPong&&1===Math.abs(this.loopCount%2)&&(n=i-n),this.clipTime=n,this.loopCount!==r&&this.mixer.dispatchEvent({type:"loop",action:this,loopDelta:this.loopCount-this.loopCount}),this.clipTime},syncWith:function(t){return this.actionTime=t.actionTime,this.timeScale=t.timeScale,this},warpToDuration:function(t){return this.timeScale=this.clip.duration/t,this},init:function(t){return this.clipTime=t-this.startTime,this},update:function(t){return this.updateTime(t),this.clip.getAt(this.clipTime)},getTimeScaleAt:function(t){return this.timeScale.getAt?this.timeScale.getAt(t):this.timeScale},getWeightAt:function(t){return this.weight.getAt?this.weight.getAt(t):this.weight}},THREE.AnimationClip=function(t,e,r){if(this.name=t,this.tracks=r,this.duration=void 0!==e?e:-1,this.duration<0)for(var i=0;i<this.tracks.length;i++){var n=this.tracks[i];this.duration=Math.max(n.keys[n.keys.length-1].time)}this.trim(),this.optimize(),this.results=[]},THREE.AnimationClip.prototype={constructor:THREE.AnimationClip,getAt:function(t){t=Math.max(0,Math.min(t,this.duration));for(var e=0;e<this.tracks.length;e++){var r=this.tracks[e];this.results[e]=r.getAt(t)}return this.results},trim:function(){for(var t=0;t<this.tracks.length;t++)this.tracks[t].trim(0,this.duration);return this},optimize:function(){for(var t=0;t<this.tracks.length;t++)this.tracks[t].optimize();return this}},THREE.AnimationClip.CreateFromMorphTargetSequence=function(t,e,r){for(var i=e.length,n=[],o=0;o<i;o++){var a=[];a.push({time:(o+i-1)%i,value:0}),a.push({time:o,value:1}),a.push({time:(o+1)%i,value:0}),a.sort(THREE.KeyframeTrack.keyComparer),0===a[0].time&&a.push({time:i,value:a[0].value}),n.push(new THREE.NumberKeyframeTrack(".morphTargetInfluences["+e[o].name+"]",a).scale(1/r))}return new THREE.AnimationClip(t,-1,n)},THREE.AnimationClip.findByName=function(t,e){for(var r=0;r<t.length;r++)if(t[r].name===e)return t[r];return null},THREE.AnimationClip.CreateClipsFromMorphTargetSequences=function(t,e){for(var r={},i=/^([\w-]*?)([\d]+)$/,n=0,o=t.length;n<o;n++){var a=t[n],s=a.name.match(i);if(s&&s.length>1){var h=r[u=s[1]];h||(r[u]=h=[]),h.push(a)}}var c=[];for(var u in r)c.push(THREE.AnimationClip.CreateFromMorphTargetSequence(u,r[u],e));return c},THREE.AnimationClip.parse=function(t){for(var e=[],r=0;r<t.tracks.length;r++)e.push(THREE.KeyframeTrack.parse(t.tracks[r]).scale(1/t.fps));return new THREE.AnimationClip(t.name,t.duration,e)},THREE.AnimationClip.parseAnimation=function(t,e,r){if(!t)return console.error("  no animation in JSONLoader data"),null;for(var i=function(t,e,r,i,n){for(var o=[],a=0;a<e.length;a++){var s=e[a];void 0!==s[r]&&o.push({time:s.time,value:n(s)})}return o.length>0?new i(t,o):null},n=[],o=t.name||"default",a=t.length||-1,s=t.fps||30,h=t.hierarchy||[],c=0;c<h.length;c++){var u=h[c].keys;if(u&&0!=u.length)if(u[0].morphTargets){for(var l={},E=0;E<u.length;E++)if(u[E].morphTargets)for(var p=0;p<u[E].morphTargets.length;p++)l[u[E].morphTargets[p]]=-1;for(var d in l){var f=[];for(p=0;p<u[E].morphTargets.length;p++){var m=u[E];f.push({time:m.time,value:m.morphTarget===d?1:0})}n.push(new THREE.NumberKeyframeTrack(r+".morphTargetInfluence["+d+"]",f))}a=l.length*(s||1)}else{var T=r+".bones["+e[c].name+"]",g=i(T+".position",u,"pos",THREE.VectorKeyframeTrack,(function(t){return(new THREE.Vector3).fromArray(t.pos)}));g&&n.push(g);var v=i(T+".quaternion",u,"rot",THREE.QuaternionKeyframeTrack,(function(t){return t.rot.slerp?t.rot.clone():(new THREE.Quaternion).fromArray(t.rot)}));v&&n.push(v);var y=i(T+".scale",u,"scl",THREE.VectorKeyframeTrack,(function(t){return(new THREE.Vector3).fromArray(t.scl)}));y&&n.push(y)}}return 0===n.length?null:new THREE.AnimationClip(o,a,n)},THREE.AnimationMixer=function(t){this.root=t,this.time=0,this.timeScale=1,this.actions=[],this.propertyBindingMap={}},THREE.AnimationMixer.prototype={constructor:THREE.AnimationMixer,addAction:function(t){this.actions.push(t),t.init(this.time),t.mixer=this;for(var e=t.clip.tracks,r=t.localRoot||this.root,i=0;i<e.length;i++){var n=e[i],o=r.uuid+"-"+n.name,a=this.propertyBindingMap[o];void 0===a&&(a=new THREE.PropertyBinding(r,n.name),this.propertyBindingMap[o]=a),t.propertyBindings.push(a),a.referenceCount+=1}},removeAllActions:function(){for(var t=0;t<this.actions.length;t++)this.actions[t].mixer=null;for(var e in this.propertyBindingMap)this.propertyBindingMap[e].unbind();return this.actions=[],this.propertyBindingMap={},this},removeAction:function(t){var e=this.actions.indexOf(t);-1!==e&&(this.actions.splice(e,1),t.mixer=null);for(var r=t.localRoot||this.root,i=t.clip.tracks,n=0;n<i.length;n++){var o=i[n],a=r.uuid+"-"+o.name,s=this.propertyBindingMap[a];s.referenceCount-=1,s.referenceCount<=0&&(s.unbind(),delete this.propertyBindingMap[a])}return this},findActionByName:function(t){for(var e=0;e<this.actions.length;e++)if(this.actions[e].name===t)return this.actions[e];return null},play:function(t,e){return t.startTime=this.time,this.addAction(t),this},fadeOut:function(t,e){var r=[];return r.push({time:this.time,value:1}),r.push({time:this.time+e,value:0}),t.weight=new THREE.NumberKeyframeTrack("weight",r),this},fadeIn:function(t,e){var r=[];return r.push({time:this.time,value:0}),r.push({time:this.time+e,value:1}),t.weight=new THREE.NumberKeyframeTrack("weight",r),this},warp:function(t,e,r,i){var n=[];return n.push({time:this.time,value:e}),n.push({time:this.time+i,value:r}),t.timeScale=new THREE.NumberKeyframeTrack("timeScale",n),this},crossFade:function(t,e,r,i){if(this.fadeOut(t,r),this.fadeIn(e,r),i){var n=t.clip.duration/e.clip.duration,o=1/n;this.warp(t,1,n,r),this.warp(e,o,1,r)}return this},update:function(t){var e=t*this.timeScale;this.time+=e;for(var r=0;r<this.actions.length;r++){var i=this.actions[r],n=i.getWeightAt(this.time),o=e*i.getTimeScaleAt(this.time),a=i.update(o);if(!(i.weight<=0)&&i.enabled)for(var s=0;s<a.length;s++){i.clip.tracks[s].name;i.propertyBindings[s].accumulate(a[s],n)}}for(var h in this.propertyBindingMap)this.propertyBindingMap[h].apply();return this}},THREE.EventDispatcher.prototype.apply(THREE.AnimationMixer.prototype),THREE.AnimationUtils={getEqualsFunc:function(t){return t.equals?function(t,e){return t.equals(e)}:function(t,e){return t===e}},clone:function(t){if("object"===typeof t){if(t.clone)return t.clone();console.error("can not figure out how to copy exemplarValue",t)}return t},lerp:function(t,e,r,i){return THREE.AnimationUtils.getLerpFunc(t,i)(t,e,r)},lerp_object:function(t,e,r){return t.lerp(e,r)},slerp_object:function(t,e,r){return t.slerp(e,r)},lerp_number:function(t,e,r){return t*(1-r)+e*r},lerp_boolean:function(t,e,r){return r<.5?t:e},lerp_boolean_immediate:function(t,e,r){return t},lerp_string:function(t,e,r){return r<.5?t:e},lerp_string_immediate:function(t,e,r){return t},getLerpFunc:function(t,e){if(null==t)throw new Error("examplarValue is null");switch(typeof t){case"object":if(t.lerp)return THREE.AnimationUtils.lerp_object;if(t.slerp)return THREE.AnimationUtils.slerp_object;break;case"number":return THREE.AnimationUtils.lerp_number;case"boolean":return e?THREE.AnimationUtils.lerp_boolean:THREE.AnimationUtils.lerp_boolean_immediate;case"string":return e?THREE.AnimationUtils.lerp_string:THREE.AnimationUtils.lerp_string_immediate}}},THREE.KeyframeTrack=function(t,e){if(void 0===t)throw new Error("track name is undefined");if(void 0===e||0===e.length)throw new Error("no keys in track named "+t);this.name=t,this.keys=e,this.lastIndex=0,this.validate(),this.optimize()},THREE.KeyframeTrack.prototype={constructor:THREE.KeyframeTrack,getAt:function(t){for(;this.lastIndex<this.keys.length&&t>=this.keys[this.lastIndex].time;)this.lastIndex++;for(;this.lastIndex>0&&t<this.keys[this.lastIndex-1].time;)this.lastIndex--;if(this.lastIndex>=this.keys.length)return this.setResult(this.keys[this.keys.length-1].value),this.result;if(0===this.lastIndex)return this.setResult(this.keys[0].value),this.result;var e=this.keys[this.lastIndex-1];if(this.setResult(e.value),e.constantToNext)return this.result;var r=this.keys[this.lastIndex],i=(t-e.time)/(r.time-e.time);return this.result=this.lerpValues(this.result,r.value,i),this.result},shift:function(t){if(0!==t)for(var e=0;e<this.keys.length;e++)this.keys[e].time+=t;return this},scale:function(t){if(1!==t)for(var e=0;e<this.keys.length;e++)this.keys[e].time*=t;return this},trim:function(t,e){for(var r=0,i=1;i<this.keys.length;i++)this.keys[i]<=t&&r++;var n=0;for(i=this.keys.length-2;i>0&&this.keys[i]>=e;i++)n++;return r+n>0&&(this.keys=this.keys.splice(r,this.keys.length-n-r)),this},validate:function(){var t=null;if(0!==this.keys.length){for(var e=0;e<this.keys.length;e++){var r=this.keys[e];if(!r)return void console.error("  key is null in track",this,e);if("number"!=typeof r.time||isNaN(r.time))return void console.error("  key.time is not a valid number",this,e,r);if(void 0===r.value||null===r.value)return void console.error("  key.value is null in track",this,e,r);if(t&&t.time>r.time)return void console.error("  key.time is less than previous key time, out of order keys",this,e,r,t);t=r}return this}console.error("  track is empty, no keys",this)},optimize:function(){var t=[],e=this.keys[0];t.push(e);THREE.AnimationUtils.getEqualsFunc(e.value);for(var r=1;r<this.keys.length-1;r++){var i=this.keys[r],n=this.keys[r+1];e.time!==i.time&&(this.compareValues(e.value,i.value)&&this.compareValues(i.value,n.value)||(e.constantToNext=this.compareValues(e.value,i.value),t.push(i),e=i))}return t.push(this.keys[this.keys.length-1]),this.keys=t,this}},THREE.KeyframeTrack.keyComparer=function(t,e){return t.time-e.time},THREE.KeyframeTrack.parse=function(t){if(void 0===t.type)throw new Error("track type undefined, can not parse");return THREE.KeyframeTrack.GetTrackTypeForTypeName(t.type).parse(t)},THREE.KeyframeTrack.GetTrackTypeForTypeName=function(t){switch(t.toLowerCase()){case"vector":case"vector2":case"vector3":case"vector4":return THREE.VectorKeyframeTrack;case"quaternion":return THREE.QuaternionKeyframeTrack;case"integer":case"scalar":case"double":case"float":case"number":return THREE.NumberKeyframeTrack;case"bool":case"boolean":return THREE.BooleanKeyframeTrack;case"string":return THREE.StringKeyframeTrack}throw new Error("Unsupported typeName: "+t)},THREE.PropertyBinding=function(t,e){this.rootNode=t,this.trackName=e,this.referenceCount=0,this.originalValue=null;var r=THREE.PropertyBinding.parseTrackName(e);this.directoryName=r.directoryName,this.nodeName=r.nodeName,this.objectName=r.objectName,this.objectIndex=r.objectIndex,this.propertyName=r.propertyName,this.propertyIndex=r.propertyIndex,this.node=THREE.PropertyBinding.findNode(t,this.nodeName)||t,this.cumulativeValue=null,this.cumulativeWeight=0},THREE.PropertyBinding.prototype={constructor:THREE.PropertyBinding,reset:function(){this.cumulativeValue=null,this.cumulativeWeight=0},accumulate:function(t,e){if(this.isBound||this.bind(),0===this.cumulativeWeight)e>0&&(null===this.cumulativeValue&&(this.cumulativeValue=THREE.AnimationUtils.clone(t)),this.cumulativeWeight=e);else{var r=e/(this.cumulativeWeight+e);this.cumulativeValue=this.lerpValue(this.cumulativeValue,t,r),this.cumulativeWeight+=e}},unbind:function(){this.isBound&&(this.setValue(this.originalValue),this.setValue=null,this.getValue=null,this.lerpValue=null,this.equalsValue=null,this.triggerDirty=null,this.isBound=!1)},bind:function(){if(!this.isBound){var t=this.node;if(t){if(this.objectName){if("materials"===this.objectName){if(!t.material)return void console.error("  can not bind to material as node does not have a material",this);if(!t.material.materials)return void console.error("  can not bind to material.materials as node.material does not have a materials array",this);t=t.material.materials}else if("bones"===this.objectName){if(!t.skeleton)return void console.error("  can not bind to bones as node does not have a skeleton",this);t=t.skeleton.bones;for(var e=0;e<t.length;e++)if(t[e].name===this.objectIndex){this.objectIndex=e;break}}else{if(void 0===t[this.objectName])return void console.error("  can not bind to objectName of node, undefined",this);t=t[this.objectName]}if(void 0!==this.objectIndex){if(void 0===t[this.objectIndex])return void console.error("  trying to bind to objectIndex of objectName, but is undefined:",this,t);t=t[this.objectIndex]}}var r=t[this.propertyName];if(r){if(void 0!==this.propertyIndex){if("morphTargetInfluences"===this.propertyName){t.geometry||console.error("  can not bind to morphTargetInfluences becasuse node does not have a geometry",this),t.geometry.morphTargets||console.error("  can not bind to morphTargetInfluences becasuse node does not have a geometry.morphTargets",this);for(e=0;e<this.node.geometry.morphTargets.length;e++)if(t.geometry.morphTargets[e].name===this.propertyIndex){this.propertyIndex=e;break}}this.setValue=function(t){return!this.equalsValue(r[this.propertyIndex],t)&&(r[this.propertyIndex]=t,!0)},this.getValue=function(){return r[this.propertyIndex]}}else r.copy?(this.setValue=function(t){return!this.equalsValue(r,t)&&(r.copy(t),!0)},this.getValue=function(){return r}):(this.setValue=function(e){return!this.equalsValue(t[this.propertyName],e)&&(t[this.propertyName]=e,!0)},this.getValue=function(){return t[this.propertyName]});void 0!==t.needsUpdate?this.triggerDirty=function(){this.node.needsUpdate=!0}:void 0!==t.matrixWorldNeedsUpdate&&(this.triggerDirty=function(){t.matrixWorldNeedsUpdate=!0}),this.originalValue=this.getValue(),this.equalsValue=THREE.AnimationUtils.getEqualsFunc(this.originalValue),this.lerpValue=THREE.AnimationUtils.getLerpFunc(this.originalValue,!0),this.isBound=!0}else console.error("  trying to update property for track: "+this.nodeName+"."+this.propertyName+" but it wasn't found.",t)}else console.error("  trying to update node for track: "+this.trackName+" but it wasn't found.")}},apply:function(){if(this.isBound||this.bind(),this.cumulativeWeight>0){if(this.cumulativeWeight<1){var t=1-this.cumulativeWeight,e=t/(this.cumulativeWeight+t);this.cumulativeValue=this.lerpValue(this.cumulativeValue,this.originalValue,e)}this.setValue(this.cumulativeValue)&&this.triggerDirty&&this.triggerDirty(),this.cumulativeValue=null,this.cumulativeWeight=0}}},THREE.PropertyBinding.parseTrackName=function(t){var e=/^(([\w]+\/)*)([\w-\d]+)?(\.([\w]+)(\[([\w\d\[\]\_. ]+)\])?)?(\.([\w.]+)(\[([\w\d\[\]\_. ]+)\])?)$/,r=e.exec(t);if(!r)throw new Error("cannot parse trackName at all: "+t);r.index===e.lastIndex&&e.lastIndex++;var i={directoryName:r[1],nodeName:r[3],objectName:r[5],objectIndex:r[7],propertyName:r[9],propertyIndex:r[11]};if(null===i.propertyName||0===i.propertyName.length)throw new Error("can not parse propertyName from trackName: "+t);return i},THREE.PropertyBinding.findNode=function(t,e){if(!e||""===e||"root"===e||"."===e||-1===e||e===t.name||e===t.uuid)return t;if(t.skeleton){var r=function(t){for(var r=0;r<t.bones.length;r++){var i=t.bones[r];if(i.name===e)return i}return null}(t.skeleton);if(r)return r}if(t.children){var i=function t(r){for(var i=0;i<r.length;i++){var n=r[i];if(n.name===e||n.uuid===e)return n;var o=t(n.children);if(o)return o}return null}(t.children);if(i)return i}return null},THREE.VectorKeyframeTrack=function(t,e){THREE.KeyframeTrack.call(this,t,e),this.result=this.keys[0].value.clone()},THREE.VectorKeyframeTrack.prototype=Object.create(THREE.KeyframeTrack.prototype),THREE.VectorKeyframeTrack.prototype.constructor=THREE.VectorKeyframeTrack,THREE.VectorKeyframeTrack.prototype.setResult=function(t){this.result.copy(t)},THREE.VectorKeyframeTrack.prototype.lerpValues=function(t,e,r){return t.lerp(e,r)},THREE.VectorKeyframeTrack.prototype.compareValues=function(t,e){return t.equals(e)},THREE.VectorKeyframeTrack.prototype.clone=function(){for(var t=[],e=0;e<this.keys.length;e++){var r=this.keys[e];t.push({time:r.time,value:r.value.clone()})}return new THREE.VectorKeyframeTrack(this.name,t)},THREE.VectorKeyframeTrack.parse=function(t){for(var e=t.keys[0].value.length,r=THREE["Vector"+e],i=[],n=0;n<t.keys.length;n++){var o=t.keys[n];i.push({value:(new r).fromArray(o.value),time:o.time})}return new THREE.VectorKeyframeTrack(t.name,i)},THREE.QuaternionKeyframeTrack=function(t,e){THREE.KeyframeTrack.call(this,t,e),this.result=this.keys[0].value.clone()},THREE.QuaternionKeyframeTrack.prototype=Object.create(THREE.KeyframeTrack.prototype),THREE.QuaternionKeyframeTrack.prototype.constructor=THREE.QuaternionKeyframeTrack,THREE.QuaternionKeyframeTrack.prototype.setResult=function(t){this.result.copy(t)},THREE.QuaternionKeyframeTrack.prototype.lerpValues=function(t,e,r){return t.slerp(e,r)},THREE.QuaternionKeyframeTrack.prototype.compareValues=function(t,e){return t.equals(e)},THREE.QuaternionKeyframeTrack.prototype.multiply=function(t){for(var e=0;e<this.keys.length;e++)this.keys[e].value.multiply(t);return this},THREE.QuaternionKeyframeTrack.prototype.clone=function(){for(var t=[],e=0;e<this.keys.length;e++){var r=this.keys[e];t.push({time:r.time,value:r.value.clone()})}return new THREE.QuaternionKeyframeTrack(this.name,t)},THREE.QuaternionKeyframeTrack.parse=function(t){for(var e=[],r=0;r<t.keys.length;r++){var i=t.keys[r];e.push({value:(new THREE.Quaternion).fromArray(i.value),time:i.time})}return new THREE.QuaternionKeyframeTrack(t.name,e)},THREE.StringKeyframeTrack=function(t,e){THREE.KeyframeTrack.call(this,t,e),this.result=this.keys[0].value},THREE.StringKeyframeTrack.prototype=Object.create(THREE.KeyframeTrack.prototype),THREE.StringKeyframeTrack.prototype.constructor=THREE.StringKeyframeTrack,THREE.StringKeyframeTrack.prototype.setResult=function(t){this.result=t},THREE.StringKeyframeTrack.prototype.lerpValues=function(t,e,r){return r<1?t:e},THREE.StringKeyframeTrack.prototype.compareValues=function(t,e){return t===e},THREE.StringKeyframeTrack.prototype.clone=function(){for(var t=[],e=0;e<this.keys.length;e++){var r=this.keys[e];t.push({time:r.time,value:r.value})}return new THREE.StringKeyframeTrack(this.name,t)},THREE.StringKeyframeTrack.parse=function(t){return new THREE.StringKeyframeTrack(t.name,t.keys)},THREE.BooleanKeyframeTrack=function(t,e){THREE.KeyframeTrack.call(this,t,e),this.result=this.keys[0].value},THREE.BooleanKeyframeTrack.prototype=Object.create(THREE.KeyframeTrack.prototype),THREE.BooleanKeyframeTrack.prototype.constructor=THREE.BooleanKeyframeTrack,THREE.BooleanKeyframeTrack.prototype.setResult=function(t){this.result=t},THREE.BooleanKeyframeTrack.prototype.lerpValues=function(t,e,r){return r<1?t:e},THREE.BooleanKeyframeTrack.prototype.compareValues=function(t,e){return t===e},THREE.BooleanKeyframeTrack.prototype.clone=function(){for(var t=[],e=0;e<this.keys.length;e++){var r=this.keys[e];t.push({time:r.time,value:r.value})}return new THREE.BooleanKeyframeTrack(this.name,t)},THREE.BooleanKeyframeTrack.parse=function(t){return new THREE.BooleanKeyframeTrack(t.name,t.keys)},THREE.NumberKeyframeTrack=function(t,e){THREE.KeyframeTrack.call(this,t,e),this.result=this.keys[0].value},THREE.NumberKeyframeTrack.prototype=Object.create(THREE.KeyframeTrack.prototype),THREE.NumberKeyframeTrack.prototype.constructor=THREE.NumberKeyframeTrack,THREE.NumberKeyframeTrack.prototype.setResult=function(t){this.result=t},THREE.NumberKeyframeTrack.prototype.lerpValues=function(t,e,r){return t*(1-r)+e*r},THREE.NumberKeyframeTrack.prototype.compareValues=function(t,e){return t===e},THREE.NumberKeyframeTrack.prototype.clone=function(){for(var t=[],e=0;e<this.keys.length;e++){var r=this.keys[e];t.push({time:r.time,value:r.value})}return new THREE.NumberKeyframeTrack(this.name,t)},THREE.NumberKeyframeTrack.parse=function(t){return new THREE.NumberKeyframeTrack(t.name,t.keys)},THREE.Camera=function(){THREE.Object3D.call(this),this.type="Camera",this.matrixWorldInverse=new THREE.Matrix4,this.projectionMatrix=new THREE.Matrix4},THREE.Camera.prototype=Object.create(THREE.Object3D.prototype),THREE.Camera.prototype.constructor=THREE.Camera,THREE.Camera.prototype.getWorldDirection=function(){var t=new THREE.Quaternion;return function(e){var r=e||new THREE.Vector3;return this.getWorldQuaternion(t),r.set(0,0,-1).applyQuaternion(t)}}(),THREE.Camera.prototype.lookAt=function(){var t=new THREE.Matrix4;return function(e){t.lookAt(this.position,e,this.up),this.quaternion.setFromRotationMatrix(t)}}(),THREE.Camera.prototype.clone=function(){return(new this.constructor).copy(this)},THREE.Camera.prototype.copy=function(t){return THREE.Object3D.prototype.copy.call(this,t),this.matrixWorldInverse.copy(t.matrixWorldInverse),this.projectionMatrix.copy(t.projectionMatrix),this},THREE.CubeCamera=function(t,e,r){THREE.Object3D.call(this),this.type="CubeCamera";var i=90,n=new THREE.PerspectiveCamera(i,1,t,e);n.up.set(0,-1,0),n.lookAt(new THREE.Vector3(1,0,0)),this.add(n);var o=new THREE.PerspectiveCamera(i,1,t,e);o.up.set(0,-1,0),o.lookAt(new THREE.Vector3(-1,0,0)),this.add(o);var a=new THREE.PerspectiveCamera(i,1,t,e);a.up.set(0,0,1),a.lookAt(new THREE.Vector3(0,1,0)),this.add(a);var s=new THREE.PerspectiveCamera(i,1,t,e);s.up.set(0,0,-1),s.lookAt(new THREE.Vector3(0,-1,0)),this.add(s);var h=new THREE.PerspectiveCamera(i,1,t,e);h.up.set(0,-1,0),h.lookAt(new THREE.Vector3(0,0,1)),this.add(h);var c=new THREE.PerspectiveCamera(i,1,t,e);c.up.set(0,-1,0),c.lookAt(new THREE.Vector3(0,0,-1)),this.add(c),this.renderTarget=new THREE.WebGLRenderTargetCube(r,r,{format:THREE.RGBFormat,magFilter:THREE.LinearFilter,minFilter:THREE.LinearFilter}),this.updateCubeMap=function(t,e){null===this.parent&&this.updateMatrixWorld();var r=this.renderTarget,i=r.texture.generateMipmaps;r.texture.generateMipmaps=!1,r.activeCubeFace=0,t.render(e,n,r),r.activeCubeFace=1,t.render(e,o,r),r.activeCubeFace=2,t.render(e,a,r),r.activeCubeFace=3,t.render(e,s,r),r.activeCubeFace=4,t.render(e,h,r),r.texture.generateMipmaps=i,r.activeCubeFace=5,t.render(e,c,r),t.setRenderTarget(null)}},THREE.CubeCamera.prototype=Object.create(THREE.Object3D.prototype),THREE.CubeCamera.prototype.constructor=THREE.CubeCamera,THREE.OrthographicCamera=function(t,e,r,i,n,o){THREE.Camera.call(this),this.type="OrthographicCamera",this.zoom=1,this.left=t,this.right=e,this.top=r,this.bottom=i,this.near=void 0!==n?n:.1,this.far=void 0!==o?o:2e3,this.updateProjectionMatrix()},THREE.OrthographicCamera.prototype=Object.create(THREE.Camera.prototype),THREE.OrthographicCamera.prototype.constructor=THREE.OrthographicCamera,THREE.OrthographicCamera.prototype.updateProjectionMatrix=function(){var t=(this.right-this.left)/(2*this.zoom),e=(this.top-this.bottom)/(2*this.zoom),r=(this.right+this.left)/2,i=(this.top+this.bottom)/2;this.projectionMatrix.makeOrthographic(r-t,r+t,i+e,i-e,this.near,this.far)},THREE.OrthographicCamera.prototype.copy=function(t){return THREE.Camera.prototype.copy.call(this,t),this.left=t.left,this.right=t.right,this.top=t.top,this.bottom=t.bottom,this.near=t.near,this.far=t.far,this.zoom=t.zoom,this},THREE.OrthographicCamera.prototype.toJSON=function(t){var e=THREE.Object3D.prototype.toJSON.call(this,t);return e.object.zoom=this.zoom,e.object.left=this.left,e.object.right=this.right,e.object.top=this.top,e.object.bottom=this.bottom,e.object.near=this.near,e.object.far=this.far,e},THREE.PerspectiveCamera=function(t,e,r,i){THREE.Camera.call(this),this.type="PerspectiveCamera",this.zoom=1,this.fov=void 0!==t?t:50,this.aspect=void 0!==e?e:1,this.near=void 0!==r?r:.1,this.far=void 0!==i?i:2e3,this.updateProjectionMatrix()},THREE.PerspectiveCamera.prototype=Object.create(THREE.Camera.prototype),THREE.PerspectiveCamera.prototype.constructor=THREE.PerspectiveCamera,THREE.PerspectiveCamera.prototype.setLens=function(t,e){void 0===e&&(e=24),this.fov=2*THREE.Math.radToDeg(Math.atan(e/(2*t))),this.updateProjectionMatrix()},THREE.PerspectiveCamera.prototype.setViewOffset=function(t,e,r,i,n,o){this.fullWidth=t,this.fullHeight=e,this.x=r,this.y=i,this.width=n,this.height=o,this.updateProjectionMatrix()},THREE.PerspectiveCamera.prototype.updateProjectionMatrix=function(){var t=THREE.Math.radToDeg(2*Math.atan(Math.tan(.5*THREE.Math.degToRad(this.fov))/this.zoom));if(this.fullWidth){var e=this.fullWidth/this.fullHeight,r=Math.tan(THREE.Math.degToRad(.5*t))*this.near,i=-r,n=e*i,o=e*r,a=Math.abs(o-n),s=Math.abs(r-i);this.projectionMatrix.makeFrustum(n+this.x*a/this.fullWidth,n+(this.x+this.width)*a/this.fullWidth,r-(this.y+this.height)*s/this.fullHeight,r-this.y*s/this.fullHeight,this.near,this.far)}else this.projectionMatrix.makePerspective(t,this.aspect,this.near,this.far)},THREE.PerspectiveCamera.prototype.copy=function(t){return THREE.Camera.prototype.copy.call(this,t),this.fov=t.fov,this.aspect=t.aspect,this.near=t.near,this.far=t.far,this.zoom=t.zoom,this},THREE.PerspectiveCamera.prototype.toJSON=function(t){var e=THREE.Object3D.prototype.toJSON.call(this,t);return e.object.zoom=this.zoom,e.object.fov=this.fov,e.object.aspect=this.aspect,e.object.near=this.near,e.object.far=this.far,e},THREE.Light=function(t){THREE.Object3D.call(this),this.type="Light",this.color=new THREE.Color(t),this.receiveShadow=void 0},THREE.Light.prototype=Object.create(THREE.Object3D.prototype),THREE.Light.prototype.constructor=THREE.Light,Object.defineProperties(THREE.Light.prototype,{onlyShadow:{set:function(t){console.warn("THREE.Light: .onlyShadow has been removed.")}},shadowCameraFov:{set:function(t){this.shadow.camera.fov=t}},shadowCameraLeft:{set:function(t){this.shadow.camera.left=t}},shadowCameraRight:{set:function(t){this.shadow.camera.right=t}},shadowCameraTop:{set:function(t){this.shadow.camera.top=t}},shadowCameraBottom:{set:function(t){this.shadow.camera.bottom=t}},shadowCameraNear:{set:function(t){this.shadow.camera.near=t}},shadowCameraFar:{set:function(t){this.shadow.camera.far=t}},shadowCameraVisible:{set:function(t){console.warn("THREE.Light: .shadowCameraVisible has been removed. Use new THREE.CameraHelper( light.shadow ) instead.")}},shadowBias:{set:function(t){this.shadow.bias=t}},shadowDarkness:{set:function(t){this.shadow.darkness=t}},shadowMapWidth:{set:function(t){this.shadow.mapSize.width=t}},shadowMapHeight:{set:function(t){this.shadow.mapSize.height=t}}}),THREE.Light.prototype.copy=function(t){return THREE.Object3D.prototype.copy.call(this,t),this.color.copy(t.color),this},THREE.Light.prototype.toJSON=function(t){var e=THREE.Object3D.prototype.toJSON.call(this,t);return e.object.color=this.color.getHex(),void 0!==this.groundColor&&(e.object.groundColor=this.groundColor.getHex()),void 0!==this.intensity&&(e.object.intensity=this.intensity),void 0!==this.distance&&(e.object.distance=this.distance),void 0!==this.angle&&(e.object.angle=this.angle),void 0!==this.decay&&(e.object.decay=this.decay),void 0!==this.exponent&&(e.object.exponent=this.exponent),e},THREE.LightShadow=function(t){this.camera=t,this.bias=0,this.darkness=1,this.mapSize=new THREE.Vector2(512,512),this.map=null,this.matrix=null},THREE.LightShadow.prototype={constructor:THREE.LightShadow,copy:function(t){this.camera=t.camera.clone(),this.bias=t.bias,this.darkness=t.darkness,this.mapSize.copy(t.mapSize)},clone:function(){return(new this.constructor).copy(this)}},THREE.AmbientLight=function(t){THREE.Light.call(this,t),this.type="AmbientLight",this.castShadow=void 0},THREE.AmbientLight.prototype=Object.create(THREE.Light.prototype),THREE.AmbientLight.prototype.constructor=THREE.AmbientLight,THREE.DirectionalLight=function(t,e){THREE.Light.call(this,t),this.type="DirectionalLight",this.position.set(0,1,0),this.updateMatrix(),this.target=new THREE.Object3D,this.intensity=void 0!==e?e:1,this.shadow=new THREE.LightShadow(new THREE.OrthographicCamera(-500,500,500,-500,50,5e3))},THREE.DirectionalLight.prototype=Object.create(THREE.Light.prototype),THREE.DirectionalLight.prototype.constructor=THREE.DirectionalLight,THREE.DirectionalLight.prototype.copy=function(t){return THREE.Light.prototype.copy.call(this,t),this.intensity=t.intensity,this.target=t.target.clone(),this.shadow=t.shadow.clone(),this},THREE.HemisphereLight=function(t,e,r){THREE.Light.call(this,t),this.type="HemisphereLight",this.castShadow=void 0,this.position.set(0,1,0),this.updateMatrix(),this.groundColor=new THREE.Color(e),this.intensity=void 0!==r?r:1},THREE.HemisphereLight.prototype=Object.create(THREE.Light.prototype),THREE.HemisphereLight.prototype.constructor=THREE.HemisphereLight,THREE.HemisphereLight.prototype.copy=function(t){return THREE.Light.prototype.copy.call(this,t),this.groundColor.copy(t.groundColor),this.intensity=t.intensity,this},THREE.PointLight=function(t,e,r,i){THREE.Light.call(this,t),this.type="PointLight",this.intensity=void 0!==e?e:1,this.distance=void 0!==r?r:0,this.decay=void 0!==i?i:1,this.shadow=new THREE.LightShadow(new THREE.PerspectiveCamera(90,1,1,500))},THREE.PointLight.prototype=Object.create(THREE.Light.prototype),THREE.PointLight.prototype.constructor=THREE.PointLight,THREE.PointLight.prototype.copy=function(t){return THREE.Light.prototype.copy.call(this,t),this.intensity=t.intensity,this.distance=t.distance,this.decay=t.decay,this.shadow=t.shadow.clone(),this},THREE.SpotLight=function(t,e,r,i,n,o){THREE.Light.call(this,t),this.type="SpotLight",this.position.set(0,1,0),this.updateMatrix(),this.target=new THREE.Object3D,this.intensity=void 0!==e?e:1,this.distance=void 0!==r?r:0,this.angle=void 0!==i?i:Math.PI/3,this.exponent=void 0!==n?n:10,this.decay=void 0!==o?o:1,this.shadow=new THREE.LightShadow(new THREE.PerspectiveCamera(50,1,50,5e3))},THREE.SpotLight.prototype=Object.create(THREE.Light.prototype),THREE.SpotLight.prototype.constructor=THREE.SpotLight,THREE.SpotLight.prototype.copy=function(t){return THREE.Light.prototype.copy.call(this,t),this.intensity=t.intensity,this.distance=t.distance,this.angle=t.angle,this.exponent=t.exponent,this.decay=t.decay,this.target=t.target.clone(),this.shadow=t.shadow.clone(),this},THREE.Cache={enabled:!1,files:{},add:function(t,e){!1!==this.enabled&&(this.files[t]=e)},get:function(t){if(!1!==this.enabled)return this.files[t]},remove:function(t){delete this.files[t]},clear:function(){this.files={}}},THREE.Loader=function(){this.onLoadStart=function(){},this.onLoadProgress=function(){},this.onLoadComplete=function(){}},THREE.Loader.prototype={constructor:THREE.Loader,crossOrigin:void 0,extractUrlBase:function(t){var e=t.split("/");return 1===e.length?"./":(e.pop(),e.join("/")+"/")},initMaterials:function(t,e,r){for(var i=[],n=0;n<t.length;++n)i[n]=this.createMaterial(t[n],e,r);return i},createMaterial:function(){var t,e,r;return function(i,n,o){void 0===t&&(t=new THREE.Color),void 0===e&&(e=new THREE.TextureLoader),void 0===r&&(r=new THREE.MaterialLoader);var a={};function s(t,r,i,s,h){var c,u=n+t,l=THREE.Loader.Handlers.get(u);null!==l?c=l.load(u):(e.setCrossOrigin(o),c=e.load(u)),void 0!==r&&(c.repeat.fromArray(r),1!==r[0]&&(c.wrapS=THREE.RepeatWrapping),1!==r[1]&&(c.wrapT=THREE.RepeatWrapping)),void 0!==i&&c.offset.fromArray(i),void 0!==s&&("repeat"===s[0]&&(c.wrapS=THREE.RepeatWrapping),"mirror"===s[0]&&(c.wrapS=THREE.MirroredRepeatWrapping),"repeat"===s[1]&&(c.wrapT=THREE.RepeatWrapping),"mirror"===s[1]&&(c.wrapT=THREE.MirroredRepeatWrapping)),void 0!==h&&(c.anisotropy=h);var E=THREE.Math.generateUUID();return a[E]=c,E}var h={uuid:THREE.Math.generateUUID(),type:"MeshLambertMaterial"};for(var c in i){var u=i[c];switch(c){case"DbgColor":h.color=u;break;case"DbgIndex":case"opticalDensity":case"illumination":case"mapDiffuseRepeat":case"mapDiffuseOffset":case"mapDiffuseWrap":case"mapDiffuseAnisotropy":case"mapLightRepeat":case"mapLightOffset":case"mapLightWrap":case"mapLightAnisotropy":case"mapAORepeat":case"mapAOOffset":case"mapAOWrap":case"mapAOAnisotropy":case"mapBumpRepeat":case"mapBumpOffset":case"mapBumpWrap":case"mapBumpAnisotropy":case"mapNormalRepeat":case"mapNormalOffset":case"mapNormalWrap":case"mapNormalAnisotropy":case"mapSpecularRepeat":case"mapSpecularOffset":case"mapSpecularWrap":case"mapSpecularAnisotropy":case"mapAlphaRepeat":case"mapAlphaOffset":case"mapAlphaWrap":case"mapAlphaAnisotropy":break;case"DbgName":h.name=u;break;case"blending":h.blending=THREE[u];break;case"colorDiffuse":h.color=t.fromArray(u).getHex();break;case"colorSpecular":h.specular=t.fromArray(u).getHex();break;case"colorEmissive":h.emissive=t.fromArray(u).getHex();break;case"specularCoef":h.shininess=u;break;case"shading":"basic"===u.toLowerCase()&&(h.type="MeshBasicMaterial"),"phong"===u.toLowerCase()&&(h.type="MeshPhongMaterial");break;case"mapDiffuse":h.map=s(u,i.mapDiffuseRepeat,i.mapDiffuseOffset,i.mapDiffuseWrap,i.mapDiffuseAnisotropy);break;case"mapLight":h.lightMap=s(u,i.mapLightRepeat,i.mapLightOffset,i.mapLightWrap,i.mapLightAnisotropy);break;case"mapAO":h.aoMap=s(u,i.mapAORepeat,i.mapAOOffset,i.mapAOWrap,i.mapAOAnisotropy);break;case"mapBump":h.bumpMap=s(u,i.mapBumpRepeat,i.mapBumpOffset,i.mapBumpWrap,i.mapBumpAnisotropy);break;case"mapBumpScale":h.bumpScale=u;break;case"mapNormal":h.normalMap=s(u,i.mapNormalRepeat,i.mapNormalOffset,i.mapNormalWrap,i.mapNormalAnisotropy);break;case"mapNormalFactor":h.normalScale=[u,u];break;case"mapSpecular":h.specularMap=s(u,i.mapSpecularRepeat,i.mapSpecularOffset,i.mapSpecularWrap,i.mapSpecularAnisotropy);break;case"mapAlpha":h.alphaMap=s(u,i.mapAlphaRepeat,i.mapAlphaOffset,i.mapAlphaWrap,i.mapAlphaAnisotropy);break;case"flipSided":h.side=THREE.BackSide;break;case"doubleSided":h.side=THREE.DoubleSide;break;case"transparency":console.warn("THREE.Loader: transparency has been renamed to opacity"),h.opacity=u;break;case"opacity":case"transparent":case"depthTest":case"depthWrite":case"transparent":case"visible":case"wireframe":h[c]=u;break;case"vertexColors":!0===u&&(h.vertexColors=THREE.VertexColors),"face"===u&&(h.vertexColors=THREE.FaceColors);break;default:console.error("Loader.createMaterial: Unsupported",c,u)}}return"MeshPhongMaterial"!==h.type&&delete h.specular,h.opacity<1&&(h.transparent=!0),r.setTextures(a),r.parse(h)}}()},THREE.Loader.Handlers={handlers:[],add:function(t,e){this.handlers.push(t,e)},get:function(t){for(var e=this.handlers,r=0,i=e.length;r<i;r+=2){var n=e[r],o=e[r+1];if(n.test(t))return o}return null}},THREE.XHRLoader=function(t){this.manager=void 0!==t?t:THREE.DefaultLoadingManager},THREE.XHRLoader.prototype={constructor:THREE.XHRLoader,load:function(t,e,r,i){var n=this,o=THREE.Cache.get(t);if(void 0!==o)return e&&setTimeout((function(){e(o)}),0),o;var a=new XMLHttpRequest;return a.open("GET",t,!0),a.addEventListener("load",(function(r){var i=r.target.response;THREE.Cache.add(t,i),e&&e(i),n.manager.itemEnd(t)}),!1),void 0!==r&&a.addEventListener("progress",(function(t){r(t)}),!1),a.addEventListener("error",(function(e){i&&i(e),n.manager.itemError(t)}),!1),void 0!==this.crossOrigin&&(a.crossOrigin=this.crossOrigin),void 0!==this.responseType&&(a.responseType=this.responseType),void 0!==this.withCredentials&&(a.withCredentials=this.withCredentials),a.send(null),n.manager.itemStart(t),a},setResponseType:function(t){this.responseType=t},setCrossOrigin:function(t){this.crossOrigin=t},setWithCredentials:function(t){this.withCredentials=t}},THREE.ImageLoader=function(t){this.manager=void 0!==t?t:THREE.DefaultLoadingManager},THREE.ImageLoader.prototype={constructor:THREE.ImageLoader,load:function(t,e,r,i){var n=this,o=THREE.Cache.get(t);if(void 0!==o)return n.manager.itemStart(t),e?setTimeout((function(){e(o),n.manager.itemEnd(t)}),0):n.manager.itemEnd(t),o;var a=document.createElement("img");return a.addEventListener("load",(function(r){THREE.Cache.add(t,this),e&&e(this),n.manager.itemEnd(t)}),!1),void 0!==r&&a.addEventListener("progress",(function(t){r(t)}),!1),a.addEventListener("error",(function(e){i&&i(e),n.manager.itemError(t)}),!1),void 0!==this.crossOrigin&&(a.crossOrigin=this.crossOrigin),n.manager.itemStart(t),a.src=t,a},setCrossOrigin:function(t){this.crossOrigin=t}},THREE.JSONLoader=function(t){"boolean"==typeof t&&(console.warn("THREE.JSONLoader: showStatus parameter has been removed from constructor."),t=void 0),this.manager=void 0!==t?t:THREE.DefaultLoadingManager,this.withCredentials=!1},THREE.JSONLoader.prototype={constructor:THREE.JSONLoader,get statusDomElement(){return void 0===this._statusDomElement&&(this._statusDomElement=document.createElement("div")),console.warn("THREE.JSONLoader: .statusDomElement has been removed."),this._statusDomElement},load:function(t,e,r,i){var n=this,o=this.texturePath&&"string"==typeof this.texturePath?this.texturePath:THREE.Loader.prototype.extractUrlBase(t),a=new THREE.XHRLoader(this.manager);a.setCrossOrigin(this.crossOrigin),a.setWithCredentials(this.withCredentials),a.load(t,(function(r){var i=JSON.parse(r),a=i.metadata;if(void 0!==a){if("object"===a.type)return void console.error("THREE.JSONLoader: "+t+" should be loaded with THREE.ObjectLoader instead.");if("scene"===a.type)return void console.error("THREE.JSONLoader: "+t+" should be loaded with THREE.SceneLoader instead.")}var s=n.parse(i,o);e(s.geometry,s.materials)}))},setCrossOrigin:function(t){this.crossOrigin=t},setTexturePath:function(t){this.texturePath=t},parse:function(t,e){var r=new THREE.Geometry,i=void 0!==t.scale?1/t.scale:1;if(function(e){function i(t,e){return t&1<<e}var n,o,a,s,h,c,u,l,E,p,d,f,m,T,g,v,y,R,H,x,b,w,M,S,_,A,C,L=t.faces,P=t.vertices,D=t.normals,k=t.colors,V=0;if(void 0!==t.uvs){for(n=0;n<t.uvs.length;n++)t.uvs[n].length&&V++;for(n=0;n<V;n++)r.faceVertexUvs[n]=[]}s=0,h=P.length;for(;s<h;)(R=new THREE.Vector3).x=P[s++]*e,R.y=P[s++]*e,R.z=P[s++]*e,r.vertices.push(R);s=0,h=L.length;for(;s<h;)if(p=L[s++],d=i(p,0),f=i(p,1),m=i(p,3),T=i(p,4),g=i(p,5),v=i(p,6),y=i(p,7),d){if((x=new THREE.Face3).a=L[s],x.b=L[s+1],x.c=L[s+3],(b=new THREE.Face3).a=L[s+1],b.b=L[s+2],b.c=L[s+3],s+=4,f&&(E=L[s++],x.materialIndex=E,b.materialIndex=E),a=r.faces.length,m)for(n=0;n<V;n++)for(S=t.uvs[n],r.faceVertexUvs[n][a]=[],r.faceVertexUvs[n][a+1]=[],o=0;o<4;o++)l=L[s++],A=S[2*l],C=S[2*l+1],_=new THREE.Vector2(A,C),2!==o&&r.faceVertexUvs[n][a].push(_),0!==o&&r.faceVertexUvs[n][a+1].push(_);if(T&&(u=3*L[s++],x.normal.set(D[u++],D[u++],D[u]),b.normal.copy(x.normal)),g)for(n=0;n<4;n++)u=3*L[s++],M=new THREE.Vector3(D[u++],D[u++],D[u]),2!==n&&x.vertexNormals.push(M),0!==n&&b.vertexNormals.push(M);if(v&&(c=L[s++],w=k[c],x.color.setHex(w),b.color.setHex(w)),y)for(n=0;n<4;n++)c=L[s++],w=k[c],2!==n&&x.vertexColors.push(new THREE.Color(w)),0!==n&&b.vertexColors.push(new THREE.Color(w));r.faces.push(x),r.faces.push(b)}else{if((H=new THREE.Face3).a=L[s++],H.b=L[s++],H.c=L[s++],f&&(E=L[s++],H.materialIndex=E),a=r.faces.length,m)for(n=0;n<V;n++)for(S=t.uvs[n],r.faceVertexUvs[n][a]=[],o=0;o<3;o++)l=L[s++],A=S[2*l],C=S[2*l+1],_=new THREE.Vector2(A,C),r.faceVertexUvs[n][a].push(_);if(T&&(u=3*L[s++],H.normal.set(D[u++],D[u++],D[u])),g)for(n=0;n<3;n++)u=3*L[s++],M=new THREE.Vector3(D[u++],D[u++],D[u]),H.vertexNormals.push(M);if(v&&(c=L[s++],H.color.setHex(k[c])),y)for(n=0;n<3;n++)c=L[s++],H.vertexColors.push(new THREE.Color(k[c]));r.faces.push(H)}}(i),function(){var e=void 0!==t.influencesPerVertex?t.influencesPerVertex:2;if(t.skinWeights)for(var i=0,n=t.skinWeights.length;i<n;i+=e){var o=t.skinWeights[i],a=e>1?t.skinWeights[i+1]:0,s=e>2?t.skinWeights[i+2]:0,h=e>3?t.skinWeights[i+3]:0;r.skinWeights.push(new THREE.Vector4(o,a,s,h))}if(t.skinIndices)for(i=0,n=t.skinIndices.length;i<n;i+=e){var c=t.skinIndices[i],u=e>1?t.skinIndices[i+1]:0,l=e>2?t.skinIndices[i+2]:0,E=e>3?t.skinIndices[i+3]:0;r.skinIndices.push(new THREE.Vector4(c,u,l,E))}r.bones=t.bones,r.bones&&r.bones.length>0&&(r.skinWeights.length!==r.skinIndices.length||r.skinIndices.length!==r.vertices.length)&&console.warn("When skinning, number of vertices ("+r.vertices.length+"), skinIndices ("+r.skinIndices.length+"), and skinWeights ("+r.skinWeights.length+") should match.")}(),function(e){if(void 0!==t.morphTargets)for(var i=0,n=t.morphTargets.length;i<n;i++){r.morphTargets[i]={},r.morphTargets[i].name=t.morphTargets[i].name,r.morphTargets[i].vertices=[];for(var o=r.morphTargets[i].vertices,a=t.morphTargets[i].vertices,s=0,h=a.length;s<h;s+=3){var c=new THREE.Vector3;c.x=a[s]*e,c.y=a[s+1]*e,c.z=a[s+2]*e,o.push(c)}}if(void 0!==t.morphColors&&t.morphColors.length>0){console.warn('THREE.JSONLoader: "morphColors" no longer supported. Using them as face colors.');var u=r.faces,l=t.morphColors[0].colors;for(i=0,n=u.length;i<n;i++)u[i].color.fromArray(l,3*i)}}(i),function(){var e=[],i=[];void 0!==t.animation&&i.push(t.animation);void 0!==t.animations&&(t.animations.length?i=i.concat(t.animations):i.push(t.animations));for(var n=0;n<i.length;n++){var o=THREE.AnimationClip.parseAnimation(i[n],r.bones);o&&e.push(o)}if(r.morphTargets){var a=THREE.AnimationClip.CreateClipsFromMorphTargetSequences(r.morphTargets,10);e=e.concat(a)}e.length>0&&(r.animations=e)}(),r.computeFaceNormals(),r.computeBoundingSphere(),void 0===t.materials||0===t.materials.length)return{geometry:r};var n=THREE.Loader.prototype.initMaterials(t.materials,e,this.crossOrigin);return{geometry:r,materials:n}}},THREE.LoadingManager=function(t,e,r){var i=this,n=!1,o=0,a=0;this.onStart=void 0,this.onLoad=t,this.onProgress=e,this.onError=r,this.itemStart=function(t){a++,!1===n&&void 0!==i.onStart&&i.onStart(t,o,a),n=!0},this.itemEnd=function(t){o++,void 0!==i.onProgress&&i.onProgress(t,o,a),o===a&&(n=!1,void 0!==i.onLoad&&i.onLoad())},this.itemError=function(t){void 0!==i.onError&&i.onError(t)}},THREE.DefaultLoadingManager=new THREE.LoadingManager,THREE.BufferGeometryLoader=function(t){this.manager=void 0!==t?t:THREE.DefaultLoadingManager},THREE.BufferGeometryLoader.prototype={constructor:THREE.BufferGeometryLoader,load:function(t,e,r,i){var n=this,o=new THREE.XHRLoader(n.manager);o.setCrossOrigin(this.crossOrigin),o.load(t,(function(t){e(n.parse(JSON.parse(t)))}),r,i)},setCrossOrigin:function(t){this.crossOrigin=t},parse:function(t){var e=new THREE.BufferGeometry,r=t.data.index;if(void 0!==r){var i=new self[r.type](r.array);e.setIndex(new THREE.BufferAttribute(i,1))}var n=t.data.attributes;for(var o in n){var a=n[o];i=new self[a.type](a.array);e.addAttribute(o,new THREE.BufferAttribute(i,a.itemSize))}var s=t.data.groups||t.data.drawcalls||t.data.offsets;if(void 0!==s)for(var h=0,c=s.length;h!==c;++h){var u=s[h];e.addGroup(u.start,u.count)}var l=t.data.boundingSphere;if(void 0!==l){var E=new THREE.Vector3;void 0!==l.center&&E.fromArray(l.center),e.boundingSphere=new THREE.Sphere(E,l.radius)}return e}},THREE.MaterialLoader=function(t){this.manager=void 0!==t?t:THREE.DefaultLoadingManager,this.textures={}},THREE.MaterialLoader.prototype={constructor:THREE.MaterialLoader,load:function(t,e,r,i){var n=this,o=new THREE.XHRLoader(n.manager);o.setCrossOrigin(this.crossOrigin),o.load(t,(function(t){e(n.parse(JSON.parse(t)))}),r,i)},setCrossOrigin:function(t){this.crossOrigin=t},setTextures:function(t){this.textures=t},getTexture:function(t){var e=this.textures;return void 0===e[t]&&console.warn("THREE.MaterialLoader: Undefined texture",t),e[t]},parse:function(t){var e=new THREE[t.type];if(e.uuid=t.uuid,void 0!==t.name&&(e.name=t.name),void 0!==t.color&&e.color.setHex(t.color),void 0!==t.emissive&&e.emissive.setHex(t.emissive),void 0!==t.specular&&e.specular.setHex(t.specular),void 0!==t.shininess&&(e.shininess=t.shininess),void 0!==t.uniforms&&(e.uniforms=t.uniforms),void 0!==t.vertexShader&&(e.vertexShader=t.vertexShader),void 0!==t.fragmentShader&&(e.fragmentShader=t.fragmentShader),void 0!==t.vertexColors&&(e.vertexColors=t.vertexColors),void 0!==t.shading&&(e.shading=t.shading),void 0!==t.blending&&(e.blending=t.blending),void 0!==t.side&&(e.side=t.side),void 0!==t.opacity&&(e.opacity=t.opacity),void 0!==t.transparent&&(e.transparent=t.transparent),void 0!==t.alphaTest&&(e.alphaTest=t.alphaTest),void 0!==t.depthTest&&(e.depthTest=t.depthTest),void 0!==t.depthWrite&&(e.depthWrite=t.depthWrite),void 0!==t.wireframe&&(e.wireframe=t.wireframe),void 0!==t.wireframeLinewidth&&(e.wireframeLinewidth=t.wireframeLinewidth),void 0!==t.size&&(e.size=t.size),void 0!==t.sizeAttenuation&&(e.sizeAttenuation=t.sizeAttenuation),void 0!==t.map&&(e.map=this.getTexture(t.map)),void 0!==t.alphaMap&&(e.alphaMap=this.getTexture(t.alphaMap),e.transparent=!0),void 0!==t.bumpMap&&(e.bumpMap=this.getTexture(t.bumpMap)),void 0!==t.bumpScale&&(e.bumpScale=t.bumpScale),void 0!==t.normalMap&&(e.normalMap=this.getTexture(t.normalMap)),t.normalScale&&(e.normalScale=new THREE.Vector2(t.normalScale,t.normalScale)),void 0!==t.displacementMap&&(e.displacementMap=this.getTexture(t.displacementMap)),void 0!==t.displacementScale&&(e.displacementScale=t.displacementScale),void 0!==t.displacementBias&&(e.displacementBias=t.displacementBias),void 0!==t.specularMap&&(e.specularMap=this.getTexture(t.specularMap)),void 0!==t.envMap&&(e.envMap=this.getTexture(t.envMap),e.combine=THREE.MultiplyOperation),t.reflectivity&&(e.reflectivity=t.reflectivity),void 0!==t.lightMap&&(e.lightMap=this.getTexture(t.lightMap)),void 0!==t.lightMapIntensity&&(e.lightMapIntensity=t.lightMapIntensity),void 0!==t.aoMap&&(e.aoMap=this.getTexture(t.aoMap)),void 0!==t.aoMapIntensity&&(e.aoMapIntensity=t.aoMapIntensity),void 0!==t.materials)for(var r=0,i=t.materials.length;r<i;r++)e.materials.push(this.parse(t.materials[r]));return e}},THREE.ObjectLoader=function(t){this.manager=void 0!==t?t:THREE.DefaultLoadingManager,this.texturePath=""},THREE.ObjectLoader.prototype={constructor:THREE.ObjectLoader,load:function(t,e,r,i){""===this.texturePath&&(this.texturePath=t.substring(0,t.lastIndexOf("/")+1));var n=this,o=new THREE.XHRLoader(n.manager);o.setCrossOrigin(this.crossOrigin),o.load(t,(function(t){n.parse(JSON.parse(t),e)}),r,i)},setTexturePath:function(t){this.texturePath=t},setCrossOrigin:function(t){this.crossOrigin=t},parse:function(t,e){var r=this.parseGeometries(t.geometries),i=this.parseImages(t.images,(function(){void 0!==e&&e(a)})),n=this.parseTextures(t.textures,i),o=this.parseMaterials(t.materials,n),a=this.parseObject(t.object,r,o);return t.animations&&(a.animations=this.parseAnimations(t.animations)),void 0!==t.images&&0!==t.images.length||void 0!==e&&e(a),a},parseGeometries:function(t){var e={};if(void 0!==t)for(var r=new THREE.JSONLoader,i=new THREE.BufferGeometryLoader,n=0,o=t.length;n<o;n++){var a,s=t[n];switch(s.type){case"PlaneGeometry":case"PlaneBufferGeometry":a=new THREE[s.type](s.width,s.height,s.widthSegments,s.heightSegments);break;case"BoxGeometry":case"CubeGeometry":a=new THREE.BoxGeometry(s.width,s.height,s.depth,s.widthSegments,s.heightSegments,s.depthSegments);break;case"CircleBufferGeometry":a=new THREE.CircleBufferGeometry(s.radius,s.segments,s.thetaStart,s.thetaLength);break;case"CircleGeometry":a=new THREE.CircleGeometry(s.radius,s.segments,s.thetaStart,s.thetaLength);break;case"CylinderGeometry":a=new THREE.CylinderGeometry(s.radiusTop,s.radiusBottom,s.height,s.radialSegments,s.heightSegments,s.openEnded,s.thetaStart,s.thetaLength);break;case"SphereGeometry":a=new THREE.SphereGeometry(s.radius,s.widthSegments,s.heightSegments,s.phiStart,s.phiLength,s.thetaStart,s.thetaLength);break;case"SphereBufferGeometry":a=new THREE.SphereBufferGeometry(s.radius,s.widthSegments,s.heightSegments,s.phiStart,s.phiLength,s.thetaStart,s.thetaLength);break;case"DodecahedronGeometry":a=new THREE.DodecahedronGeometry(s.radius,s.detail);break;case"IcosahedronGeometry":a=new THREE.IcosahedronGeometry(s.radius,s.detail);break;case"OctahedronGeometry":a=new THREE.OctahedronGeometry(s.radius,s.detail);break;case"TetrahedronGeometry":a=new THREE.TetrahedronGeometry(s.radius,s.detail);break;case"RingGeometry":a=new THREE.RingGeometry(s.innerRadius,s.outerRadius,s.thetaSegments,s.phiSegments,s.thetaStart,s.thetaLength);break;case"TorusGeometry":a=new THREE.TorusGeometry(s.radius,s.tube,s.radialSegments,s.tubularSegments,s.arc);break;case"TorusKnotGeometry":a=new THREE.TorusKnotGeometry(s.radius,s.tube,s.radialSegments,s.tubularSegments,s.p,s.q,s.heightScale);break;case"BufferGeometry":a=i.parse(s);break;case"Geometry":a=r.parse(s.data,this.texturePath).geometry;break;default:console.warn('THREE.ObjectLoader: Unsupported geometry type "'+s.type+'"');continue}a.uuid=s.uuid,void 0!==s.name&&(a.name=s.name),e[s.uuid]=a}return e},parseMaterials:function(t,e){var r={};if(void 0!==t){var i=new THREE.MaterialLoader;i.setTextures(e);for(var n=0,o=t.length;n<o;n++){var a=i.parse(t[n]);r[a.uuid]=a}}return r},parseAnimations:function(t){for(var e=[],r=0;r<t.length;r++){var i=THREE.AnimationClip.parse(t[r]);e.push(i)}return e},parseImages:function(t,e){var r=this,i={};function n(t){return r.manager.itemStart(t),a.load(t,(function(){r.manager.itemEnd(t)}))}if(void 0!==t&&t.length>0){var o=new THREE.LoadingManager(e),a=new THREE.ImageLoader(o);a.setCrossOrigin(this.crossOrigin);for(var s=0,h=t.length;s<h;s++){var c=t[s],u=/^(\/\/)|([a-z]+:(\/\/)?)/i.test(c.url)?c.url:r.texturePath+c.url;i[c.uuid]=n(u)}}return i},parseTextures:function(t,e){function r(t){return"number"==typeof t?t:(console.warn("THREE.ObjectLoader.parseTexture: Constant should be in numeric form.",t),THREE[t])}var i={};if(void 0!==t)for(var n=0,o=t.length;n<o;n++){var a=t[n];void 0===a.image&&console.warn('THREE.ObjectLoader: No "image" specified for',a.uuid),void 0===e[a.image]&&console.warn("THREE.ObjectLoader: Undefined image",a.image);var s=new THREE.Texture(e[a.image]);s.needsUpdate=!0,s.uuid=a.uuid,void 0!==a.name&&(s.name=a.name),void 0!==a.mapping&&(s.mapping=r(a.mapping)),void 0!==a.offset&&(s.offset=new THREE.Vector2(a.offset[0],a.offset[1])),void 0!==a.repeat&&(s.repeat=new THREE.Vector2(a.repeat[0],a.repeat[1])),void 0!==a.minFilter&&(s.minFilter=r(a.minFilter)),void 0!==a.magFilter&&(s.magFilter=r(a.magFilter)),void 0!==a.anisotropy&&(s.anisotropy=a.anisotropy),Array.isArray(a.wrap)&&(s.wrapS=r(a.wrap[0]),s.wrapT=r(a.wrap[1])),i[a.uuid]=s}return i},parseObject:function(){var t=new THREE.Matrix4;return function(e,r,i){var n;function o(t){return void 0===r[t]&&console.warn("THREE.ObjectLoader: Undefined geometry",t),r[t]}function a(t){if(void 0!==t)return void 0===i[t]&&console.warn("THREE.ObjectLoader: Undefined material",t),i[t]}switch(e.type){case"Scene":n=new THREE.Scene;break;case"PerspectiveCamera":n=new THREE.PerspectiveCamera(e.fov,e.aspect,e.near,e.far);break;case"OrthographicCamera":n=new THREE.OrthographicCamera(e.left,e.right,e.top,e.bottom,e.near,e.far);break;case"AmbientLight":n=new THREE.AmbientLight(e.color);break;case"DirectionalLight":n=new THREE.DirectionalLight(e.color,e.intensity);break;case"PointLight":n=new THREE.PointLight(e.color,e.intensity,e.distance,e.decay);break;case"SpotLight":n=new THREE.SpotLight(e.color,e.intensity,e.distance,e.angle,e.exponent,e.decay);break;case"HemisphereLight":n=new THREE.HemisphereLight(e.color,e.groundColor,e.intensity);break;case"Mesh":n=new THREE.Mesh(o(e.geometry),a(e.material));break;case"LOD":n=new THREE.LOD;break;case"Line":n=new THREE.Line(o(e.geometry),a(e.material),e.mode);break;case"PointCloud":case"Points":n=new THREE.Points(o(e.geometry),a(e.material));break;case"Sprite":n=new THREE.Sprite(a(e.material));break;case"Group":n=new THREE.Group;break;default:n=new THREE.Object3D}if(n.uuid=e.uuid,void 0!==e.name&&(n.name=e.name),void 0!==e.matrix?(t.fromArray(e.matrix),t.decompose(n.position,n.quaternion,n.scale)):(void 0!==e.position&&n.position.fromArray(e.position),void 0!==e.rotation&&n.rotation.fromArray(e.rotation),void 0!==e.scale&&n.scale.fromArray(e.scale)),void 0!==e.castShadow&&(n.castShadow=e.castShadow),void 0!==e.receiveShadow&&(n.receiveShadow=e.receiveShadow),void 0!==e.visible&&(n.visible=e.visible),void 0!==e.userData&&(n.userData=e.userData),void 0!==e.children)for(var s in e.children)n.add(this.parseObject(e.children[s],r,i));if("LOD"===e.type)for(var h=e.levels,c=0;c<h.length;c++){var u=h[c];void 0!==(s=n.getObjectByProperty("uuid",u.object))&&n.addLevel(s,u.distance)}return n}}()},THREE.TextureLoader=function(t){this.manager=void 0!==t?t:THREE.DefaultLoadingManager},THREE.TextureLoader.prototype={constructor:THREE.TextureLoader,load:function(t,e,r,i){var n=new THREE.Texture,o=new THREE.ImageLoader(this.manager);return o.setCrossOrigin(this.crossOrigin),o.load(t,(function(t){n.image=t,n.needsUpdate=!0,void 0!==e&&e(n)}),r,i),n},setCrossOrigin:function(t){this.crossOrigin=t}},THREE.CubeTextureLoader=function(t){this.manager=void 0!==t?t:THREE.DefaultLoadingManager},THREE.CubeTextureLoader.prototype={constructor:THREE.CubeTextureLoader,load:function(t,e,r,i){var n=new THREE.CubeTexture([]),o=new THREE.ImageLoader;o.setCrossOrigin(this.crossOrigin);var a=0;function s(r){o.load(t[r],(function(t){n.images[r]=t,6===++a&&(n.needsUpdate=!0,e&&e(n))}),void 0,i)}for(var h=0;h<t.length;++h)s(h);return n},setCrossOrigin:function(t){this.crossOrigin=t}},THREE.DataTextureLoader=THREE.BinaryTextureLoader=function(t){this.manager=void 0!==t?t:THREE.DefaultLoadingManager,this._parser=null},THREE.BinaryTextureLoader.prototype={constructor:THREE.BinaryTextureLoader,load:function(t,e,r,i){var n=this,o=new THREE.DataTexture,a=new THREE.XHRLoader(this.manager);return a.setCrossOrigin(this.crossOrigin),a.setResponseType("arraybuffer"),a.load(t,(function(t){var r=n._parser(t);r&&(void 0!==r.image?o.image=r.image:void 0!==r.data&&(o.image.width=r.width,o.image.height=r.height,o.image.data=r.data),o.wrapS=void 0!==r.wrapS?r.wrapS:THREE.ClampToEdgeWrapping,o.wrapT=void 0!==r.wrapT?r.wrapT:THREE.ClampToEdgeWrapping,o.magFilter=void 0!==r.magFilter?r.magFilter:THREE.LinearFilter,o.minFilter=void 0!==r.minFilter?r.minFilter:THREE.LinearMipMapLinearFilter,o.anisotropy=void 0!==r.anisotropy?r.anisotropy:1,void 0!==r.format&&(o.format=r.format),void 0!==r.type&&(o.type=r.type),void 0!==r.mipmaps&&(o.mipmaps=r.mipmaps),1===r.mipmapCount&&(o.minFilter=THREE.LinearFilter),o.needsUpdate=!0,e&&e(o,r))}),r,i),o},setCrossOrigin:function(t){this.crossOrigin=t}},THREE.CompressedTextureLoader=function(t){this.manager=void 0!==t?t:THREE.DefaultLoadingManager,this._parser=null},THREE.CompressedTextureLoader.prototype={constructor:THREE.CompressedTextureLoader,load:function(t,e,r,i){var n=this,o=[],a=new THREE.CompressedTexture;a.image=o;var s=new THREE.XHRLoader(this.manager);if(s.setCrossOrigin(this.crossOrigin),s.setResponseType("arraybuffer"),Array.isArray(t))for(var h=0,c=function(c){s.load(t[c],(function(t){var r=n._parser(t,!0);o[c]={width:r.width,height:r.height,format:r.format,mipmaps:r.mipmaps},6===(h+=1)&&(1===r.mipmapCount&&(a.minFilter=THREE.LinearFilter),a.format=r.format,a.needsUpdate=!0,e&&e(a))}),r,i)},u=0,l=t.length;u<l;++u)c(u);else s.load(t,(function(t){var r=n._parser(t,!0);if(r.isCubemap)for(var i=r.mipmaps.length/r.mipmapCount,s=0;s<i;s++){o[s]={mipmaps:[]};for(var h=0;h<r.mipmapCount;h++)o[s].mipmaps.push(r.mipmaps[s*r.mipmapCount+h]),o[s].format=r.format,o[s].width=r.width,o[s].height=r.height}else a.image.width=r.width,a.image.height=r.height,a.mipmaps=r.mipmaps;1===r.mipmapCount&&(a.minFilter=THREE.LinearFilter),a.format=r.format,a.needsUpdate=!0,e&&e(a)}),r,i);return a},setCrossOrigin:function(t){this.crossOrigin=t}},THREE.Material=function(){Object.defineProperty(this,"id",{value:THREE.MaterialIdCount++}),this.uuid=THREE.Math.generateUUID(),this.name="",this.type="Material",this.side=THREE.FrontSide,this.opacity=1,this.transparent=!1,this.blending=THREE.NormalBlending,this.blendSrc=THREE.SrcAlphaFactor,this.blendDst=THREE.OneMinusSrcAlphaFactor,this.blendEquation=THREE.AddEquation,this.blendSrcAlpha=null,this.blendDstAlpha=null,this.blendEquationAlpha=null,this.depthFunc=THREE.LessEqualDepth,this.depthTest=!0,this.depthWrite=!0,this.colorWrite=!0,this.precision=null,this.polygonOffset=!1,this.polygonOffsetFactor=0,this.polygonOffsetUnits=0,this.alphaTest=0,this.overdraw=0,this.visible=!0,this._needsUpdate=!0},THREE.Material.prototype={constructor:THREE.Material,get needsUpdate(){return this._needsUpdate},set needsUpdate(t){!0===t&&this.update(),this._needsUpdate=t},setValues:function(t){if(void 0!==t)for(var e in t){var r=t[e];if(void 0!==r){var i=this[e];void 0!==i?i instanceof THREE.Color?i.set(r):i instanceof THREE.Vector3&&r instanceof THREE.Vector3?i.copy(r):this[e]="overdraw"===e?Number(r):r:console.warn("THREE."+this.type+": '"+e+"' is not a property of this material.")}else console.warn("THREE.Material: '"+e+"' parameter is undefined.")}},toJSON:function(t){var e={metadata:{version:4.4,type:"Material",generator:"Material.toJSON"}};return e.uuid=this.uuid,e.type=this.type,""!==this.name&&(e.name=this.name),this.color instanceof THREE.Color&&(e.color=this.color.getHex()),this.emissive instanceof THREE.Color&&(e.emissive=this.emissive.getHex()),this.specular instanceof THREE.Color&&(e.specular=this.specular.getHex()),void 0!==this.shininess&&(e.shininess=this.shininess),this.map instanceof THREE.Texture&&(e.map=this.map.toJSON(t).uuid),this.alphaMap instanceof THREE.Texture&&(e.alphaMap=this.alphaMap.toJSON(t).uuid),this.lightMap instanceof THREE.Texture&&(e.lightMap=this.lightMap.toJSON(t).uuid),this.bumpMap instanceof THREE.Texture&&(e.bumpMap=this.bumpMap.toJSON(t).uuid,e.bumpScale=this.bumpScale),this.normalMap instanceof THREE.Texture&&(e.normalMap=this.normalMap.toJSON(t).uuid,e.normalScale=this.normalScale),this.displacementMap instanceof THREE.Texture&&(e.displacementMap=this.displacementMap.toJSON(t).uuid,e.displacementScale=this.displacementScale,e.displacementBias=this.displacementBias),this.specularMap instanceof THREE.Texture&&(e.specularMap=this.specularMap.toJSON(t).uuid),this.envMap instanceof THREE.Texture&&(e.envMap=this.envMap.toJSON(t).uuid,e.reflectivity=this.reflectivity),void 0!==this.size&&(e.size=this.size),void 0!==this.sizeAttenuation&&(e.sizeAttenuation=this.sizeAttenuation),void 0!==this.vertexColors&&this.vertexColors!==THREE.NoColors&&(e.vertexColors=this.vertexColors),void 0!==this.shading&&this.shading!==THREE.SmoothShading&&(e.shading=this.shading),void 0!==this.blending&&this.blending!==THREE.NormalBlending&&(e.blending=this.blending),void 0!==this.side&&this.side!==THREE.FrontSide&&(e.side=this.side),this.opacity<1&&(e.opacity=this.opacity),!0===this.transparent&&(e.transparent=this.transparent),this.alphaTest>0&&(e.alphaTest=this.alphaTest),!0===this.wireframe&&(e.wireframe=this.wireframe),this.wireframeLinewidth>1&&(e.wireframeLinewidth=this.wireframeLinewidth),e},clone:function(){return(new this.constructor).copy(this)},copy:function(t){return this.name=t.name,this.side=t.side,this.opacity=t.opacity,this.transparent=t.transparent,this.blending=t.blending,this.blendSrc=t.blendSrc,this.blendDst=t.blendDst,this.blendEquation=t.blendEquation,this.blendSrcAlpha=t.blendSrcAlpha,this.blendDstAlpha=t.blendDstAlpha,this.blendEquationAlpha=t.blendEquationAlpha,this.depthFunc=t.depthFunc,this.depthTest=t.depthTest,this.depthWrite=t.depthWrite,this.precision=t.precision,this.polygonOffset=t.polygonOffset,this.polygonOffsetFactor=t.polygonOffsetFactor,this.polygonOffsetUnits=t.polygonOffsetUnits,this.alphaTest=t.alphaTest,this.overdraw=t.overdraw,this.visible=t.visible,this},update:function(){this.dispatchEvent({type:"update"})},dispose:function(){this.dispatchEvent({type:"dispose"})},get wrapAround(){console.warn("THREE."+this.type+": .wrapAround has been removed.")},set wrapAround(t){console.warn("THREE."+this.type+": .wrapAround has been removed.")},get wrapRGB(){return console.warn("THREE."+this.type+": .wrapRGB has been removed."),new THREE.Color}},THREE.EventDispatcher.prototype.apply(THREE.Material.prototype),THREE.MaterialIdCount=0,THREE.LineBasicMaterial=function(t){THREE.Material.call(this),this.type="LineBasicMaterial",this.color=new THREE.Color(16777215),this.linewidth=1,this.linecap="round",this.linejoin="round",this.vertexColors=THREE.NoColors,this.fog=!0,this.setValues(t)},THREE.LineBasicMaterial.prototype=Object.create(THREE.Material.prototype),THREE.LineBasicMaterial.prototype.constructor=THREE.LineBasicMaterial,THREE.LineBasicMaterial.prototype.copy=function(t){return THREE.Material.prototype.copy.call(this,t),this.color.copy(t.color),this.linewidth=t.linewidth,this.linecap=t.linecap,this.linejoin=t.linejoin,this.vertexColors=t.vertexColors,this.fog=t.fog,this},THREE.LineDashedMaterial=function(t){THREE.Material.call(this),this.type="LineDashedMaterial",this.color=new THREE.Color(16777215),this.linewidth=1,this.scale=1,this.dashSize=3,this.gapSize=1,this.vertexColors=!1,this.fog=!0,this.setValues(t)},THREE.LineDashedMaterial.prototype=Object.create(THREE.Material.prototype),THREE.LineDashedMaterial.prototype.constructor=THREE.LineDashedMaterial,THREE.LineDashedMaterial.prototype.copy=function(t){return THREE.Material.prototype.copy.call(this,t),this.color.copy(t.color),this.linewidth=t.linewidth,this.scale=t.scale,this.dashSize=t.dashSize,this.gapSize=t.gapSize,this.vertexColors=t.vertexColors,this.fog=t.fog,this},THREE.MeshBasicMaterial=function(t){THREE.Material.call(this),this.type="MeshBasicMaterial",this.color=new THREE.Color(16777215),this.map=null,this.aoMap=null,this.aoMapIntensity=1,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.combine=THREE.MultiplyOperation,this.reflectivity=1,this.refractionRatio=.98,this.fog=!0,this.shading=THREE.SmoothShading,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.vertexColors=THREE.NoColors,this.skinning=!1,this.morphTargets=!1,this.setValues(t)},THREE.MeshBasicMaterial.prototype=Object.create(THREE.Material.prototype),THREE.MeshBasicMaterial.prototype.constructor=THREE.MeshBasicMaterial,THREE.MeshBasicMaterial.prototype.copy=function(t){return THREE.Material.prototype.copy.call(this,t),this.color.copy(t.color),this.map=t.map,this.aoMap=t.aoMap,this.aoMapIntensity=t.aoMapIntensity,this.specularMap=t.specularMap,this.alphaMap=t.alphaMap,this.envMap=t.envMap,this.combine=t.combine,this.reflectivity=t.reflectivity,this.refractionRatio=t.refractionRatio,this.fog=t.fog,this.shading=t.shading,this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this.wireframeLinecap=t.wireframeLinecap,this.wireframeLinejoin=t.wireframeLinejoin,this.vertexColors=t.vertexColors,this.skinning=t.skinning,this.morphTargets=t.morphTargets,this},THREE.MeshLambertMaterial=function(t){THREE.Material.call(this),this.type="MeshLambertMaterial",this.color=new THREE.Color(16777215),this.emissive=new THREE.Color(0),this.map=null,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.combine=THREE.MultiplyOperation,this.reflectivity=1,this.refractionRatio=.98,this.fog=!0,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.vertexColors=THREE.NoColors,this.skinning=!1,this.morphTargets=!1,this.morphNormals=!1,this.setValues(t)},THREE.MeshLambertMaterial.prototype=Object.create(THREE.Material.prototype),THREE.MeshLambertMaterial.prototype.constructor=THREE.MeshLambertMaterial,THREE.MeshLambertMaterial.prototype.copy=function(t){return THREE.Material.prototype.copy.call(this,t),this.color.copy(t.color),this.emissive.copy(t.emissive),this.map=t.map,this.specularMap=t.specularMap,this.alphaMap=t.alphaMap,this.envMap=t.envMap,this.combine=t.combine,this.reflectivity=t.reflectivity,this.refractionRatio=t.refractionRatio,this.fog=t.fog,this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this.wireframeLinecap=t.wireframeLinecap,this.wireframeLinejoin=t.wireframeLinejoin,this.vertexColors=t.vertexColors,this.skinning=t.skinning,this.morphTargets=t.morphTargets,this.morphNormals=t.morphNormals,this},THREE.MeshPhongMaterial=function(t){THREE.Material.call(this),this.type="MeshPhongMaterial",this.color=new THREE.Color(16777215),this.emissive=new THREE.Color(0),this.specular=new THREE.Color(1118481),this.shininess=30,this.metal=!1,this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalScale=new THREE.Vector2(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.combine=THREE.MultiplyOperation,this.reflectivity=1,this.refractionRatio=.98,this.fog=!0,this.shading=THREE.SmoothShading,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.vertexColors=THREE.NoColors,this.skinning=!1,this.morphTargets=!1,this.morphNormals=!1,this.setValues(t)},THREE.MeshPhongMaterial.prototype=Object.create(THREE.Material.prototype),THREE.MeshPhongMaterial.prototype.constructor=THREE.MeshPhongMaterial,THREE.MeshPhongMaterial.prototype.copy=function(t){return THREE.Material.prototype.copy.call(this,t),this.color.copy(t.color),this.emissive.copy(t.emissive),this.specular.copy(t.specular),this.shininess=t.shininess,this.metal=t.metal,this.map=t.map,this.lightMap=t.lightMap,this.lightMapIntensity=t.lightMapIntensity,this.aoMap=t.aoMap,this.aoMapIntensity=t.aoMapIntensity,this.emissiveMap=t.emissiveMap,this.bumpMap=t.bumpMap,this.bumpScale=t.bumpScale,this.normalMap=t.normalMap,this.normalScale.copy(t.normalScale),this.displacementMap=t.displacementMap,this.displacementScale=t.displacementScale,this.displacementBias=t.displacementBias,this.specularMap=t.specularMap,this.alphaMap=t.alphaMap,this.envMap=t.envMap,this.combine=t.combine,this.reflectivity=t.reflectivity,this.refractionRatio=t.refractionRatio,this.fog=t.fog,this.shading=t.shading,this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this.wireframeLinecap=t.wireframeLinecap,this.wireframeLinejoin=t.wireframeLinejoin,this.vertexColors=t.vertexColors,this.skinning=t.skinning,this.morphTargets=t.morphTargets,this.morphNormals=t.morphNormals,this},THREE.MeshDepthMaterial=function(t){THREE.Material.call(this),this.type="MeshDepthMaterial",this.morphTargets=!1,this.wireframe=!1,this.wireframeLinewidth=1,this.setValues(t)},THREE.MeshDepthMaterial.prototype=Object.create(THREE.Material.prototype),THREE.MeshDepthMaterial.prototype.constructor=THREE.MeshDepthMaterial,THREE.MeshDepthMaterial.prototype.copy=function(t){return THREE.Material.prototype.copy.call(this,t),this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this},THREE.MeshNormalMaterial=function(t){THREE.Material.call(this,t),this.type="MeshNormalMaterial",this.wireframe=!1,this.wireframeLinewidth=1,this.morphTargets=!1,this.setValues(t)},THREE.MeshNormalMaterial.prototype=Object.create(THREE.Material.prototype),THREE.MeshNormalMaterial.prototype.constructor=THREE.MeshNormalMaterial,THREE.MeshNormalMaterial.prototype.copy=function(t){return THREE.Material.prototype.copy.call(this,t),this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this},THREE.MultiMaterial=function(t){this.uuid=THREE.Math.generateUUID(),this.type="MultiMaterial",this.materials=t instanceof Array?t:[],this.visible=!0},THREE.MultiMaterial.prototype={constructor:THREE.MultiMaterial,toJSON:function(){for(var t={metadata:{version:4.2,type:"material",generator:"MaterialExporter"},uuid:this.uuid,type:this.type,materials:[]},e=0,r=this.materials.length;e<r;e++)t.materials.push(this.materials[e].toJSON());return t.visible=this.visible,t},clone:function(){for(var t=new this.constructor,e=0;e<this.materials.length;e++)t.materials.push(this.materials[e].clone());return t.visible=this.visible,t}},THREE.MeshFaceMaterial=THREE.MultiMaterial,THREE.PointsMaterial=function(t){THREE.Material.call(this),this.type="PointsMaterial",this.color=new THREE.Color(16777215),this.map=null,this.size=1,this.sizeAttenuation=!0,this.vertexColors=THREE.NoColors,this.fog=!0,this.setValues(t)},THREE.PointsMaterial.prototype=Object.create(THREE.Material.prototype),THREE.PointsMaterial.prototype.constructor=THREE.PointsMaterial,THREE.PointsMaterial.prototype.copy=function(t){return THREE.Material.prototype.copy.call(this,t),this.color.copy(t.color),this.map=t.map,this.size=t.size,this.sizeAttenuation=t.sizeAttenuation,this.vertexColors=t.vertexColors,this.fog=t.fog,this},THREE.PointCloudMaterial=function(t){return console.warn("THREE.PointCloudMaterial has been renamed to THREE.PointsMaterial."),new THREE.PointsMaterial(t)},THREE.ParticleBasicMaterial=function(t){return console.warn("THREE.ParticleBasicMaterial has been renamed to THREE.PointsMaterial."),new THREE.PointsMaterial(t)},THREE.ParticleSystemMaterial=function(t){return console.warn("THREE.ParticleSystemMaterial has been renamed to THREE.PointsMaterial."),new THREE.PointsMaterial(t)},THREE.ShaderMaterial=function(t){THREE.Material.call(this),this.type="ShaderMaterial",this.defines={},this.uniforms={},this.vertexShader="void main() {\n\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n}",this.fragmentShader="void main() {\n\tgl_FragColor = vec4( 1.0, 0.0, 0.0, 1.0 );\n}",this.shading=THREE.SmoothShading,this.linewidth=1,this.wireframe=!1,this.wireframeLinewidth=1,this.fog=!1,this.lights=!1,this.vertexColors=THREE.NoColors,this.skinning=!1,this.morphTargets=!1,this.morphNormals=!1,this.derivatives=!1,this.defaultAttributeValues={color:[1,1,1],uv:[0,0],uv2:[0,0]},this.index0AttributeName=void 0,void 0!==t&&(void 0!==t.attributes&&console.error("THREE.ShaderMaterial: attributes should now be defined in THREE.BufferGeometry instead."),this.setValues(t))},THREE.ShaderMaterial.prototype=Object.create(THREE.Material.prototype),THREE.ShaderMaterial.prototype.constructor=THREE.ShaderMaterial,THREE.ShaderMaterial.prototype.copy=function(t){return THREE.Material.prototype.copy.call(this,t),this.fragmentShader=t.fragmentShader,this.vertexShader=t.vertexShader,this.uniforms=THREE.UniformsUtils.clone(t.uniforms),this.attributes=t.attributes,this.defines=t.defines,this.shading=t.shading,this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this.fog=t.fog,this.lights=t.lights,this.vertexColors=t.vertexColors,this.skinning=t.skinning,this.morphTargets=t.morphTargets,this.morphNormals=t.morphNormals,this.derivatives=t.derivatives,this},THREE.ShaderMaterial.prototype.toJSON=function(t){var e=THREE.Material.prototype.toJSON.call(this,t);return e.uniforms=this.uniforms,e.attributes=this.attributes,e.vertexShader=this.vertexShader,e.fragmentShader=this.fragmentShader,e},THREE.RawShaderMaterial=function(t){THREE.ShaderMaterial.call(this,t),this.type="RawShaderMaterial"},THREE.RawShaderMaterial.prototype=Object.create(THREE.ShaderMaterial.prototype),THREE.RawShaderMaterial.prototype.constructor=THREE.RawShaderMaterial,THREE.SpriteMaterial=function(t){THREE.Material.call(this),this.type="SpriteMaterial",this.color=new THREE.Color(16777215),this.map=null,this.rotation=0,this.fog=!1,this.setValues(t)},THREE.SpriteMaterial.prototype=Object.create(THREE.Material.prototype),THREE.SpriteMaterial.prototype.constructor=THREE.SpriteMaterial,THREE.SpriteMaterial.prototype.copy=function(t){return THREE.Material.prototype.copy.call(this,t),this.color.copy(t.color),this.map=t.map,this.rotation=t.rotation,this.fog=t.fog,this},THREE.Texture=function(t,e,r,i,n,o,a,s,h){Object.defineProperty(this,"id",{value:THREE.TextureIdCount++}),this.uuid=THREE.Math.generateUUID(),this.name="",this.sourceFile="",this.image=void 0!==t?t:THREE.Texture.DEFAULT_IMAGE,this.mipmaps=[],this.mapping=void 0!==e?e:THREE.Texture.DEFAULT_MAPPING,this.wrapS=void 0!==r?r:THREE.ClampToEdgeWrapping,this.wrapT=void 0!==i?i:THREE.ClampToEdgeWrapping,this.magFilter=void 0!==n?n:THREE.LinearFilter,this.minFilter=void 0!==o?o:THREE.LinearMipMapLinearFilter,this.anisotropy=void 0!==h?h:1,this.format=void 0!==a?a:THREE.RGBAFormat,this.type=void 0!==s?s:THREE.UnsignedByteType,this.offset=new THREE.Vector2(0,0),this.repeat=new THREE.Vector2(1,1),this.generateMipmaps=!0,this.premultiplyAlpha=!1,this.flipY=!0,this.unpackAlignment=4,this.version=0,this.onUpdate=null},THREE.Texture.DEFAULT_IMAGE=void 0,THREE.Texture.DEFAULT_MAPPING=THREE.UVMapping,THREE.Texture.prototype={constructor:THREE.Texture,set needsUpdate(t){!0===t&&this.version++},clone:function(){return(new this.constructor).copy(this)},copy:function(t){return this.image=t.image,this.mipmaps=t.mipmaps.slice(0),this.mapping=t.mapping,this.wrapS=t.wrapS,this.wrapT=t.wrapT,this.magFilter=t.magFilter,this.minFilter=t.minFilter,this.anisotropy=t.anisotropy,this.format=t.format,this.type=t.type,this.offset.copy(t.offset),this.repeat.copy(t.repeat),this.generateMipmaps=t.generateMipmaps,this.premultiplyAlpha=t.premultiplyAlpha,this.flipY=t.flipY,this.unpackAlignment=t.unpackAlignment,this},toJSON:function(t){if(void 0!==t.textures[this.uuid])return t.textures[this.uuid];var e={metadata:{version:4.4,type:"Texture",generator:"Texture.toJSON"},uuid:this.uuid,name:this.name,mapping:this.mapping,repeat:[this.repeat.x,this.repeat.y],offset:[this.offset.x,this.offset.y],wrap:[this.wrapS,this.wrapT],minFilter:this.minFilter,magFilter:this.magFilter,anisotropy:this.anisotropy};if(void 0!==this.image){var r=this.image;void 0===r.uuid&&(r.uuid=THREE.Math.generateUUID()),void 0===t.images[r.uuid]&&(t.images[r.uuid]={uuid:r.uuid,url:function(t){var e;return void 0!==t.toDataURL?e=t:((e=document.createElement("canvas")).width=t.width,e.height=t.height,e.getContext("2d").drawImage(t,0,0,t.width,t.height)),e.width>2048||e.height>2048?e.toDataURL("image/jpeg",.6):e.toDataURL("image/png")}(r)}),e.image=r.uuid}return t.textures[this.uuid]=e,e},dispose:function(){this.dispatchEvent({type:"dispose"})},transformUv:function(t){if(this.mapping===THREE.UVMapping){if(t.multiply(this.repeat),t.add(this.offset),t.x<0||t.x>1)switch(this.wrapS){case THREE.RepeatWrapping:t.x=t.x-Math.floor(t.x);break;case THREE.ClampToEdgeWrapping:t.x=t.x<0?0:1;break;case THREE.MirroredRepeatWrapping:1===Math.abs(Math.floor(t.x)%2)?t.x=Math.ceil(t.x)-t.x:t.x=t.x-Math.floor(t.x)}if(t.y<0||t.y>1)switch(this.wrapT){case THREE.RepeatWrapping:t.y=t.y-Math.floor(t.y);break;case THREE.ClampToEdgeWrapping:t.y=t.y<0?0:1;break;case THREE.MirroredRepeatWrapping:1===Math.abs(Math.floor(t.y)%2)?t.y=Math.ceil(t.y)-t.y:t.y=t.y-Math.floor(t.y)}this.flipY&&(t.y=1-t.y)}}},THREE.EventDispatcher.prototype.apply(THREE.Texture.prototype),THREE.TextureIdCount=0,THREE.CanvasTexture=function(t,e,r,i,n,o,a,s,h){THREE.Texture.call(this,t,e,r,i,n,o,a,s,h),this.needsUpdate=!0},THREE.CanvasTexture.prototype=Object.create(THREE.Texture.prototype),THREE.CanvasTexture.prototype.constructor=THREE.CanvasTexture,THREE.CubeTexture=function(t,e,r,i,n,o,a,s,h){e=void 0!==e?e:THREE.CubeReflectionMapping,THREE.Texture.call(this,t,e,r,i,n,o,a,s,h),this.images=t,this.flipY=!1},THREE.CubeTexture.prototype=Object.create(THREE.Texture.prototype),THREE.CubeTexture.prototype.constructor=THREE.CubeTexture,THREE.CubeTexture.prototype.copy=function(t){return THREE.Texture.prototype.copy.call(this,t),this.images=t.images,this},THREE.CompressedTexture=function(t,e,r,i,n,o,a,s,h,c,u){THREE.Texture.call(this,null,o,a,s,h,c,i,n,u),this.image={width:e,height:r},this.mipmaps=t,this.flipY=!1,this.generateMipmaps=!1},THREE.CompressedTexture.prototype=Object.create(THREE.Texture.prototype),THREE.CompressedTexture.prototype.constructor=THREE.CompressedTexture,THREE.DataTexture=function(t,e,r,i,n,o,a,s,h,c,u){THREE.Texture.call(this,null,o,a,s,h,c,i,n,u),this.image={data:t,width:e,height:r},this.magFilter=void 0!==h?h:THREE.NearestFilter,this.minFilter=void 0!==c?c:THREE.NearestFilter,this.flipY=!1,this.generateMipmaps=!1},THREE.DataTexture.prototype=Object.create(THREE.Texture.prototype),THREE.DataTexture.prototype.constructor=THREE.DataTexture,THREE.VideoTexture=function(t,e,r,i,n,o,a,s,h){THREE.Texture.call(this,t,e,r,i,n,o,a,s,h),this.generateMipmaps=!1;var c=this;!function e(){requestAnimationFrame(e),t.readyState===t.HAVE_ENOUGH_DATA&&(c.needsUpdate=!0)}()},THREE.VideoTexture.prototype=Object.create(THREE.Texture.prototype),THREE.VideoTexture.prototype.constructor=THREE.VideoTexture,THREE.Group=function(){THREE.Object3D.call(this),this.type="Group"},THREE.Group.prototype=Object.create(THREE.Object3D.prototype),THREE.Group.prototype.constructor=THREE.Group,THREE.Points=function(t,e){THREE.Object3D.call(this),this.type="Points",this.geometry=void 0!==t?t:new THREE.Geometry,this.material=void 0!==e?e:new THREE.PointsMaterial({color:16777215*Math.random()})},THREE.Points.prototype=Object.create(THREE.Object3D.prototype),THREE.Points.prototype.constructor=THREE.Points,THREE.Points.prototype.raycast=function(){var t=new THREE.Matrix4,e=new THREE.Ray;return function(r,i){var n=this,o=n.geometry,a=r.params.Points.threshold;if(t.getInverse(this.matrixWorld),e.copy(r.ray).applyMatrix4(t),null===o.boundingBox||!1!==e.isIntersectionBox(o.boundingBox)){var s=a/((this.scale.x+this.scale.y+this.scale.z)/3),h=s*s,c=new THREE.Vector3;if(o instanceof THREE.BufferGeometry){var u=o.index,l=o.attributes.position.array;if(null!==u)for(var E=u.array,p=0,d=E.length;p<d;p++){var f=E[p];c.fromArray(l,3*f),g(c,f)}else{p=0;for(var m=l.length/3;p<m;p++)c.fromArray(l,3*p),g(c,p)}}else{var T=o.vertices;for(p=0,m=T.length;p<m;p++)g(T[p],p)}}function g(t,o){var a=e.distanceSqToPoint(t);if(a<h){var s=e.closestPointToPoint(t);s.applyMatrix4(n.matrixWorld);var c=r.ray.origin.distanceTo(s);if(c<r.near||c>r.far)return;i.push({distance:c,distanceToRay:Math.sqrt(a),point:s.clone(),index:o,face:null,object:n})}}}}(),THREE.Points.prototype.clone=function(){return new this.constructor(this.geometry,this.material).copy(this)},THREE.PointCloud=function(t,e){return console.warn("THREE.PointCloud has been renamed to THREE.Points."),new THREE.Points(t,e)},THREE.ParticleSystem=function(t,e){return console.warn("THREE.ParticleSystem has been renamed to THREE.Points."),new THREE.Points(t,e)},THREE.Line=function(t,e,r){if(1===r)return console.warn("THREE.Line: parameter THREE.LinePieces no longer supported. Created THREE.LineSegments instead."),new THREE.LineSegments(t,e);THREE.Object3D.call(this),this.type="Line",this.geometry=void 0!==t?t:new THREE.Geometry,this.material=void 0!==e?e:new THREE.LineBasicMaterial({color:16777215*Math.random()})},THREE.Line.prototype=Object.create(THREE.Object3D.prototype),THREE.Line.prototype.constructor=THREE.Line,THREE.Line.prototype.raycast=function(){var t=new THREE.Matrix4,e=new THREE.Ray,r=new THREE.Sphere;return function(i,n){var o=i.linePrecision,a=o*o,s=this.geometry;if(null===s.boundingSphere&&s.computeBoundingSphere(),r.copy(s.boundingSphere),r.applyMatrix4(this.matrixWorld),!1!==i.ray.isIntersectionSphere(r)){t.getInverse(this.matrixWorld),e.copy(i.ray).applyMatrix4(t);var h=new THREE.Vector3,c=new THREE.Vector3,u=new THREE.Vector3,l=new THREE.Vector3,E=this instanceof THREE.LineSegments?2:1;if(s instanceof THREE.BufferGeometry){var p=s.index,d=s.attributes;if(null!==p)for(var f=p.array,m=d.position.array,T=0,g=f.length-1;T<g;T+=E){var v=f[T],y=f[T+1];if(h.fromArray(m,3*v),c.fromArray(m,3*y),!(e.distanceSqToSegment(h,c,l,u)>a))l.applyMatrix4(this.matrixWorld),(x=i.ray.origin.distanceTo(l))<i.near||x>i.far||n.push({distance:x,point:u.clone().applyMatrix4(this.matrixWorld),index:T,face:null,faceIndex:null,object:this})}else for(T=0,g=(m=d.position.array).length/3-1;T<g;T+=E){if(h.fromArray(m,3*T),c.fromArray(m,3*T+3),!(e.distanceSqToSegment(h,c,l,u)>a))l.applyMatrix4(this.matrixWorld),(x=i.ray.origin.distanceTo(l))<i.near||x>i.far||n.push({distance:x,point:u.clone().applyMatrix4(this.matrixWorld),index:T,face:null,faceIndex:null,object:this})}}else if(s instanceof THREE.Geometry){var R=s.vertices,H=R.length;for(T=0;T<H-1;T+=E){var x;if(!(e.distanceSqToSegment(R[T],R[T+1],l,u)>a))l.applyMatrix4(this.matrixWorld),(x=i.ray.origin.distanceTo(l))<i.near||x>i.far||n.push({distance:x,point:u.clone().applyMatrix4(this.matrixWorld),index:T,face:null,faceIndex:null,object:this})}}}}}(),THREE.Line.prototype.clone=function(){return new this.constructor(this.geometry,this.material).copy(this)},THREE.LineStrip=0,THREE.LinePieces=1,THREE.LineSegments=function(t,e){THREE.Line.call(this,t,e),this.type="LineSegments"},THREE.LineSegments.prototype=Object.create(THREE.Line.prototype),THREE.LineSegments.prototype.constructor=THREE.LineSegments,THREE.Mesh=function(t,e){THREE.Object3D.call(this),this.type="Mesh",this.geometry=void 0!==t?t:new THREE.Geometry,this.material=void 0!==e?e:new THREE.MeshBasicMaterial({color:16777215*Math.random()}),this.updateMorphTargets()},THREE.Mesh.prototype=Object.create(THREE.Object3D.prototype),THREE.Mesh.prototype.constructor=THREE.Mesh,THREE.Mesh.prototype.updateMorphTargets=function(){if(void 0!==this.geometry.morphTargets&&this.geometry.morphTargets.length>0){this.morphTargetBase=-1,this.morphTargetInfluences=[],this.morphTargetDictionary={};for(var t=0,e=this.geometry.morphTargets.length;t<e;t++)this.morphTargetInfluences.push(0),this.morphTargetDictionary[this.geometry.morphTargets[t].name]=t}},THREE.Mesh.prototype.getMorphTargetIndexByName=function(t){return void 0!==this.morphTargetDictionary[t]?this.morphTargetDictionary[t]:(console.warn("THREE.Mesh.getMorphTargetIndexByName: morph target "+t+" does not exist. Returning 0."),0)},THREE.Mesh.prototype.raycast=function(){var t=new THREE.Matrix4,e=new THREE.Ray,r=new THREE.Sphere,i=new THREE.Vector3,n=new THREE.Vector3,o=new THREE.Vector3,a=new THREE.Vector3,s=new THREE.Vector3,h=new THREE.Vector3,c=new THREE.Vector2,u=new THREE.Vector2,l=new THREE.Vector2,E=new THREE.Vector3,p=new THREE.Vector3,d=new THREE.Vector3;function f(t,e,r,i,n,o,a){return THREE.Triangle.barycoordFromPoint(t,e,r,i,E),n.multiplyScalar(E.x),o.multiplyScalar(E.y),a.multiplyScalar(E.z),n.add(o).add(a),n.clone()}function m(t,e,r,i,n,o,a){var s=t.material;if(null===(s.side===THREE.BackSide?r.intersectTriangle(o,n,i,!0,a):r.intersectTriangle(i,n,o,s.side!==THREE.DoubleSide,a)))return null;d.copy(a),d.applyMatrix4(t.matrixWorld);var h=e.ray.origin.distanceTo(d);return h<e.near||h>e.far?null:{distance:h,point:d.clone(),object:t}}function T(t,e,r,a,s,h,E,d){i.fromArray(a,3*h),n.fromArray(a,3*E),o.fromArray(a,3*d);var T=m(t,e,r,i,n,o,p);return T&&(s&&(c.fromArray(s,2*h),u.fromArray(s,2*E),l.fromArray(s,2*d),T.uv=f(p,i,n,o,c,u,l)),T.face=new THREE.Face3(h,E,d,THREE.Triangle.normal(i,n,o)),T.faceIndex=h),T}return function(E,d){var g=this.geometry,v=this.material;if(void 0!==v){null===g.boundingSphere&&g.computeBoundingSphere();var y,R,H=this.matrixWorld;if(r.copy(g.boundingSphere),r.applyMatrix4(H),!1!==E.ray.isIntersectionSphere(r))if(t.getInverse(H),e.copy(E.ray).applyMatrix4(t),null===g.boundingBox||!1!==e.isIntersectionBox(g.boundingBox))if(g instanceof THREE.BufferGeometry){var x,b,w,M=g.index,S=g.attributes,_=S.position.array;if(void 0!==S.uv&&(y=S.uv.array),null!==M)for(var A=M.array,C=0,L=A.length;C<L;C+=3)x=A[C],b=A[C+1],w=A[C+2],(R=T(this,E,e,_,y,x,b,w))&&(R.faceIndex=Math.floor(C/3),d.push(R));else for(C=0,L=_.length;C<L;C+=9)(R=T(this,E,e,_,y,x=C/3,b=x+1,w=x+2))&&(R.index=x,d.push(R))}else if(g instanceof THREE.Geometry){var P,D,k,V=v instanceof THREE.MeshFaceMaterial,F=!0===V?v.materials:null,U=g.vertices,B=g.faces,O=g.faceVertexUvs[0];O.length>0&&(y=O);for(var G=0,N=B.length;G<N;G++){var I=B[G],z=!0===V?F[I.materialIndex]:v;if(void 0!==z){if(P=U[I.a],D=U[I.b],k=U[I.c],!0===z.morphTargets){var W=g.morphTargets,j=this.morphTargetInfluences;i.set(0,0,0),n.set(0,0,0),o.set(0,0,0);for(var X=0,q=W.length;X<q;X++){var Y=j[X];if(0!==Y){var K=W[X].vertices;i.addScaledVector(a.subVectors(K[I.a],P),Y),n.addScaledVector(s.subVectors(K[I.b],D),Y),o.addScaledVector(h.subVectors(K[I.c],k),Y)}}i.add(P),n.add(D),o.add(k),P=i,D=n,k=o}if(R=m(this,E,e,P,D,k,p)){if(y){var Q=y[G];c.copy(Q[0]),u.copy(Q[1]),l.copy(Q[2]),R.uv=f(p,P,D,k,c,u,l)}R.face=I,R.faceIndex=G,d.push(R)}}}}}}}(),THREE.Mesh.prototype.clone=function(){return new this.constructor(this.geometry,this.material).copy(this)},THREE.Bone=function(t){THREE.Object3D.call(this),this.type="Bone",this.skin=t},THREE.Bone.prototype=Object.create(THREE.Object3D.prototype),THREE.Bone.prototype.constructor=THREE.Bone,THREE.Bone.prototype.copy=function(t){return THREE.Object3D.prototype.copy.call(this,t),this.skin=t.skin,this},THREE.Skeleton=function(t,e,r){if(this.useVertexTexture=void 0===r||r,this.identityMatrix=new THREE.Matrix4,t=t||[],this.bones=t.slice(0),this.useVertexTexture){var i=Math.sqrt(4*this.bones.length);i=THREE.Math.nextPowerOfTwo(Math.ceil(i)),i=Math.max(i,4),this.boneTextureWidth=i,this.boneTextureHeight=i,this.boneMatrices=new Float32Array(this.boneTextureWidth*this.boneTextureHeight*4),this.boneTexture=new THREE.DataTexture(this.boneMatrices,this.boneTextureWidth,this.boneTextureHeight,THREE.RGBAFormat,THREE.FloatType)}else this.boneMatrices=new Float32Array(16*this.bones.length);if(void 0===e)this.calculateInverses();else if(this.bones.length===e.length)this.boneInverses=e.slice(0);else{console.warn("THREE.Skeleton bonInverses is the wrong length."),this.boneInverses=[];for(var n=0,o=this.bones.length;n<o;n++)this.boneInverses.push(new THREE.Matrix4)}},THREE.Skeleton.prototype.calculateInverses=function(){this.boneInverses=[];for(var t=0,e=this.bones.length;t<e;t++){var r=new THREE.Matrix4;this.bones[t]&&r.getInverse(this.bones[t].matrixWorld),this.boneInverses.push(r)}},THREE.Skeleton.prototype.pose=function(){for(var t,e=0,r=this.bones.length;e<r;e++)(t=this.bones[e])&&t.matrixWorld.getInverse(this.boneInverses[e]);for(e=0,r=this.bones.length;e<r;e++)(t=this.bones[e])&&(t.parent?(t.matrix.getInverse(t.parent.matrixWorld),t.matrix.multiply(t.matrixWorld)):t.matrix.copy(t.matrixWorld),t.matrix.decompose(t.position,t.quaternion,t.scale))},THREE.Skeleton.prototype.update=function(){var t=new THREE.Matrix4;return function(){for(var e=0,r=this.bones.length;e<r;e++){var i=this.bones[e]?this.bones[e].matrixWorld:this.identityMatrix;t.multiplyMatrices(i,this.boneInverses[e]),t.flattenToArrayOffset(this.boneMatrices,16*e)}this.useVertexTexture&&(this.boneTexture.needsUpdate=!0)}}(),THREE.Skeleton.prototype.clone=function(){return new THREE.Skeleton(this.bones,this.boneInverses,this.useVertexTexture)},THREE.SkinnedMesh=function(t,e,r){THREE.Mesh.call(this,t,e),this.type="SkinnedMesh",this.bindMode="attached",this.bindMatrix=new THREE.Matrix4,this.bindMatrixInverse=new THREE.Matrix4;var i=[];if(this.geometry&&void 0!==this.geometry.bones){for(var n,o,a=0,s=this.geometry.bones.length;a<s;++a)o=this.geometry.bones[a],n=new THREE.Bone(this),i.push(n),n.name=o.name,n.position.fromArray(o.pos),n.quaternion.fromArray(o.rotq),void 0!==o.scl&&n.scale.fromArray(o.scl);for(a=0,s=this.geometry.bones.length;a<s;++a)-1!==(o=this.geometry.bones[a]).parent&&null!==o.parent?i[o.parent].add(i[a]):this.add(i[a])}this.normalizeSkinWeights(),this.updateMatrixWorld(!0),this.bind(new THREE.Skeleton(i,void 0,r),this.matrixWorld)},THREE.SkinnedMesh.prototype=Object.create(THREE.Mesh.prototype),THREE.SkinnedMesh.prototype.constructor=THREE.SkinnedMesh,THREE.SkinnedMesh.prototype.bind=function(t,e){this.skeleton=t,void 0===e&&(this.updateMatrixWorld(!0),this.skeleton.calculateInverses(),e=this.matrixWorld),this.bindMatrix.copy(e),this.bindMatrixInverse.getInverse(e)},THREE.SkinnedMesh.prototype.pose=function(){this.skeleton.pose()},THREE.SkinnedMesh.prototype.normalizeSkinWeights=function(){if(this.geometry instanceof THREE.Geometry)for(var t=0;t<this.geometry.skinIndices.length;t++){var e=this.geometry.skinWeights[t],r=1/e.lengthManhattan();r!==1/0?e.multiplyScalar(r):e.set(1)}},THREE.SkinnedMesh.prototype.updateMatrixWorld=function(t){THREE.Mesh.prototype.updateMatrixWorld.call(this,!0),"attached"===this.bindMode?this.bindMatrixInverse.getInverse(this.matrixWorld):"detached"===this.bindMode?this.bindMatrixInverse.getInverse(this.bindMatrix):console.warn("THREE.SkinnedMesh unrecognized bindMode: "+this.bindMode)},THREE.SkinnedMesh.prototype.clone=function(){return new this.constructor(this.geometry,this.material,this.useVertexTexture).copy(this)},THREE.LOD=function(){THREE.Object3D.call(this),this.type="LOD",Object.defineProperties(this,{levels:{enumerable:!0,value:[]},objects:{get:function(){return console.warn("THREE.LOD: .objects has been renamed to .levels."),this.levels}}})},THREE.LOD.prototype=Object.create(THREE.Object3D.prototype),THREE.LOD.prototype.constructor=THREE.LOD,THREE.LOD.prototype.addLevel=function(t,e){void 0===e&&(e=0),e=Math.abs(e);for(var r=this.levels,i=0;i<r.length&&!(e<r[i].distance);i++);r.splice(i,0,{distance:e,object:t}),this.add(t)},THREE.LOD.prototype.getObjectForDistance=function(t){for(var e=this.levels,r=1,i=e.length;r<i&&!(t<e[r].distance);r++);return e[r-1].object},THREE.LOD.prototype.raycast=function(){var t=new THREE.Vector3;return function(e,r){t.setFromMatrixPosition(this.matrixWorld);var i=e.ray.origin.distanceTo(t);this.getObjectForDistance(i).raycast(e,r)}}(),THREE.LOD.prototype.update=function(){var t=new THREE.Vector3,e=new THREE.Vector3;return function(r){var i=this.levels;if(i.length>1){t.setFromMatrixPosition(r.matrixWorld),e.setFromMatrixPosition(this.matrixWorld);var n=t.distanceTo(e);i[0].object.visible=!0;for(var o=1,a=i.length;o<a&&n>=i[o].distance;o++)i[o-1].object.visible=!1,i[o].object.visible=!0;for(;o<a;o++)i[o].object.visible=!1}}}(),THREE.LOD.prototype.copy=function(t){THREE.Object3D.prototype.copy.call(this,t,!1);for(var e=t.levels,r=0,i=e.length;r<i;r++){var n=e[r];this.addLevel(n.object.clone(),n.distance)}return this},THREE.LOD.prototype.toJSON=function(t){var e=THREE.Object3D.prototype.toJSON.call(this,t);e.object.levels=[];for(var r=this.levels,i=0,n=r.length;i<n;i++){var o=r[i];e.object.levels.push({object:o.object.uuid,distance:o.distance})}return e},THREE.Sprite=function(){var t=new Uint16Array([0,1,2,0,2,3]),e=new Float32Array([-.5,-.5,0,.5,-.5,0,.5,.5,0,-.5,.5,0]),r=new Float32Array([0,0,1,0,1,1,0,1]),i=new THREE.BufferGeometry;return i.setIndex(new THREE.BufferAttribute(t,1)),i.addAttribute("position",new THREE.BufferAttribute(e,3)),i.addAttribute("uv",new THREE.BufferAttribute(r,2)),function(t){THREE.Object3D.call(this),this.type="Sprite",this.geometry=i,this.material=void 0!==t?t:new THREE.SpriteMaterial}}(),THREE.Sprite.prototype=Object.create(THREE.Object3D.prototype),THREE.Sprite.prototype.constructor=THREE.Sprite,THREE.Sprite.prototype.raycast=function(){var t=new THREE.Vector3;return function(e,r){t.setFromMatrixPosition(this.matrixWorld);var i=e.ray.distanceSqToPoint(t);i>this.scale.x*this.scale.y||r.push({distance:Math.sqrt(i),point:this.position,face:null,object:this})}}(),THREE.Sprite.prototype.clone=function(){return new this.constructor(this.material).copy(this)},THREE.Particle=THREE.Sprite,THREE.LensFlare=function(t,e,r,i,n){THREE.Object3D.call(this),this.lensFlares=[],this.positionScreen=new THREE.Vector3,this.customUpdateCallback=void 0,void 0!==t&&this.add(t,e,r,i,n)},THREE.LensFlare.prototype=Object.create(THREE.Object3D.prototype),THREE.LensFlare.prototype.constructor=THREE.LensFlare,THREE.LensFlare.prototype.add=function(t,e,r,i,n,o){void 0===e&&(e=-1),void 0===r&&(r=0),void 0===o&&(o=1),void 0===n&&(n=new THREE.Color(16777215)),void 0===i&&(i=THREE.NormalBlending),r=Math.min(r,Math.max(0,r)),this.lensFlares.push({texture:t,size:e,distance:r,x:0,y:0,z:0,scale:1,rotation:0,opacity:o,color:n,blending:i})},THREE.LensFlare.prototype.updateLensFlares=function(){var t,e,r=this.lensFlares.length,i=2*-this.positionScreen.x,n=2*-this.positionScreen.y;for(t=0;t<r;t++)(e=this.lensFlares[t]).x=this.positionScreen.x+i*e.distance,e.y=this.positionScreen.y+n*e.distance,e.wantedRotation=e.x*Math.PI*.25,e.rotation+=.25*(e.wantedRotation-e.rotation)},THREE.LensFlare.prototype.copy=function(t){THREE.Object3D.prototype.copy.call(this,t),this.positionScreen.copy(t.positionScreen),this.customUpdateCallback=t.customUpdateCallback;for(var e=0,r=t.lensFlares.length;e<r;e++)this.lensFlares.push(t.lensFlares[e]);return this},THREE.Scene=function(){THREE.Object3D.call(this),this.type="Scene",this.fog=null,this.overrideMaterial=null,this.autoUpdate=!0},THREE.Scene.prototype=Object.create(THREE.Object3D.prototype),THREE.Scene.prototype.constructor=THREE.Scene,THREE.Scene.prototype.copy=function(t){return THREE.Object3D.prototype.copy.call(this,t),null!==t.fog&&(this.fog=t.fog.clone()),null!==t.overrideMaterial&&(this.overrideMaterial=t.overrideMaterial.clone()),this.autoUpdate=t.autoUpdate,this.matrixAutoUpdate=t.matrixAutoUpdate,this},THREE.Fog=function(t,e,r){this.name="",this.color=new THREE.Color(t),this.near=void 0!==e?e:1,this.far=void 0!==r?r:1e3},THREE.Fog.prototype.clone=function(){return new THREE.Fog(this.color.getHex(),this.near,this.far)},THREE.FogExp2=function(t,e){this.name="",this.color=new THREE.Color(t),this.density=void 0!==e?e:25e-5},THREE.FogExp2.prototype.clone=function(){return new THREE.FogExp2(this.color.getHex(),this.density)},THREE.ShaderChunk={},THREE.ShaderChunk.alphamap_fragment="#ifdef USE_ALPHAMAP\n\n\tdiffuseColor.a *= texture2D( alphaMap, vUv ).g;\n\n#endif\n",THREE.ShaderChunk.alphamap_pars_fragment="#ifdef USE_ALPHAMAP\n\n\tuniform sampler2D alphaMap;\n\n#endif\n",THREE.ShaderChunk.alphatest_fragment="#ifdef ALPHATEST\n\n\tif ( diffuseColor.a < ALPHATEST ) discard;\n\n#endif\n",THREE.ShaderChunk.aomap_fragment="#ifdef USE_AOMAP\n\n\ttotalAmbientLight *= ( texture2D( aoMap, vUv2 ).r - 1.0 ) * aoMapIntensity + 1.0;\n\n#endif\n",THREE.ShaderChunk.aomap_pars_fragment="#ifdef USE_AOMAP\n\n\tuniform sampler2D aoMap;\n\tuniform float aoMapIntensity;\n\n#endif",THREE.ShaderChunk.begin_vertex="\nvec3 transformed = vec3( position );\n",THREE.ShaderChunk.beginnormal_vertex="\nvec3 objectNormal = vec3( normal );\n",THREE.ShaderChunk.bumpmap_pars_fragment="#ifdef USE_BUMPMAP\n\n\tuniform sampler2D bumpMap;\n\tuniform float bumpScale;\n\n\n\n\tvec2 dHdxy_fwd() {\n\n\t\tvec2 dSTdx = dFdx( vUv );\n\t\tvec2 dSTdy = dFdy( vUv );\n\n\t\tfloat Hll = bumpScale * texture2D( bumpMap, vUv ).x;\n\t\tfloat dBx = bumpScale * texture2D( bumpMap, vUv + dSTdx ).x - Hll;\n\t\tfloat dBy = bumpScale * texture2D( bumpMap, vUv + dSTdy ).x - Hll;\n\n\t\treturn vec2( dBx, dBy );\n\n\t}\n\n\tvec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy ) {\n\n\t\tvec3 vSigmaX = dFdx( surf_pos );\n\t\tvec3 vSigmaY = dFdy( surf_pos );\n\t\tvec3 vN = surf_norm;\n\t\tvec3 R1 = cross( vSigmaY, vN );\n\t\tvec3 R2 = cross( vN, vSigmaX );\n\n\t\tfloat fDet = dot( vSigmaX, R1 );\n\n\t\tvec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );\n\t\treturn normalize( abs( fDet ) * surf_norm - vGrad );\n\n\t}\n\n#endif\n",THREE.ShaderChunk.color_fragment="#ifdef USE_COLOR\n\n\tdiffuseColor.rgb *= vColor;\n\n#endif",THREE.ShaderChunk.color_pars_fragment="#ifdef USE_COLOR\n\n\tvarying vec3 vColor;\n\n#endif\n",THREE.ShaderChunk.color_pars_vertex="#ifdef USE_COLOR\n\n\tvarying vec3 vColor;\n\n#endif",THREE.ShaderChunk.color_vertex="#ifdef USE_COLOR\n\n\tvColor.xyz = color.xyz;\n\n#endif",THREE.ShaderChunk.common="#define PI 3.14159\n#define PI2 6.28318\n#define RECIPROCAL_PI2 0.15915494\n#define LOG2 1.442695\n#define EPSILON 1e-6\n\n#define saturate(a) clamp( a, 0.0, 1.0 )\n#define whiteCompliment(a) ( 1.0 - saturate( a ) )\n\nvec3 transformDirection( in vec3 normal, in mat4 matrix ) {\n\n\treturn normalize( ( matrix * vec4( normal, 0.0 ) ).xyz );\n\n}\n\nvec3 inverseTransformDirection( in vec3 normal, in mat4 matrix ) {\n\n\treturn normalize( ( vec4( normal, 0.0 ) * matrix ).xyz );\n\n}\n\nvec3 projectOnPlane(in vec3 point, in vec3 pointOnPlane, in vec3 planeNormal ) {\n\n\tfloat distance = dot( planeNormal, point - pointOnPlane );\n\n\treturn - distance * planeNormal + point;\n\n}\n\nfloat sideOfPlane( in vec3 point, in vec3 pointOnPlane, in vec3 planeNormal ) {\n\n\treturn sign( dot( point - pointOnPlane, planeNormal ) );\n\n}\n\nvec3 linePlaneIntersect( in vec3 pointOnLine, in vec3 lineDirection, in vec3 pointOnPlane, in vec3 planeNormal ) {\n\n\treturn lineDirection * ( dot( planeNormal, pointOnPlane - pointOnLine ) / dot( planeNormal, lineDirection ) ) + pointOnLine;\n\n}\n\nfloat calcLightAttenuation( float lightDistance, float cutoffDistance, float decayExponent ) {\n\n\tif ( decayExponent > 0.0 ) {\n\n\t  return pow( saturate( -lightDistance / cutoffDistance + 1.0 ), decayExponent );\n\n\t}\n\n\treturn 1.0;\n\n}\n\nvec3 F_Schlick( in vec3 specularColor, in float dotLH ) {\n\n\n\tfloat fresnel = exp2( ( -5.55437 * dotLH - 6.98316 ) * dotLH );\n\n\treturn ( 1.0 - specularColor ) * fresnel + specularColor;\n\n}\n\nfloat G_BlinnPhong_Implicit( /* in float dotNL, in float dotNV */ ) {\n\n\n\treturn 0.25;\n\n}\n\nfloat D_BlinnPhong( in float shininess, in float dotNH ) {\n\n\n\treturn ( shininess * 0.5 + 1.0 ) * pow( dotNH, shininess );\n\n}\n\nvec3 BRDF_BlinnPhong( in vec3 specularColor, in float shininess, in vec3 normal, in vec3 lightDir, in vec3 viewDir ) {\n\n\tvec3 halfDir = normalize( lightDir + viewDir );\n\n\tfloat dotNH = saturate( dot( normal, halfDir ) );\n\tfloat dotLH = saturate( dot( lightDir, halfDir ) );\n\n\tvec3 F = F_Schlick( specularColor, dotLH );\n\n\tfloat G = G_BlinnPhong_Implicit( /* dotNL, dotNV */ );\n\n\tfloat D = D_BlinnPhong( shininess, dotNH );\n\n\treturn F * G * D;\n\n}\n\nvec3 inputToLinear( in vec3 a ) {\n\n\t#ifdef GAMMA_INPUT\n\n\t\treturn pow( a, vec3( float( GAMMA_FACTOR ) ) );\n\n\t#else\n\n\t\treturn a;\n\n\t#endif\n\n}\n\nvec3 linearToOutput( in vec3 a ) {\n\n\t#ifdef GAMMA_OUTPUT\n\n\t\treturn pow( a, vec3( 1.0 / float( GAMMA_FACTOR ) ) );\n\n\t#else\n\n\t\treturn a;\n\n\t#endif\n\n}\n",THREE.ShaderChunk.defaultnormal_vertex="#ifdef FLIP_SIDED\n\n\tobjectNormal = -objectNormal;\n\n#endif\n\nvec3 transformedNormal = normalMatrix * objectNormal;\n",THREE.ShaderChunk.displacementmap_vertex="#ifdef USE_DISPLACEMENTMAP\n\n\ttransformed += normal * ( texture2D( displacementMap, uv ).x * displacementScale + displacementBias );\n\n#endif\n",THREE.ShaderChunk.displacementmap_pars_vertex="#ifdef USE_DISPLACEMENTMAP\n\n\tuniform sampler2D displacementMap;\n\tuniform float displacementScale;\n\tuniform float displacementBias;\n\n#endif\n",THREE.ShaderChunk.emissivemap_fragment="#ifdef USE_EMISSIVEMAP\n\n\tvec4 emissiveColor = texture2D( emissiveMap, vUv );\n\n\temissiveColor.rgb = inputToLinear( emissiveColor.rgb );\n\n\ttotalEmissiveLight *= emissiveColor.rgb;\n\n#endif\n",THREE.ShaderChunk.emissivemap_pars_fragment="#ifdef USE_EMISSIVEMAP\n\n\tuniform sampler2D emissiveMap;\n\n#endif\n",THREE.ShaderChunk.envmap_fragment="#ifdef USE_ENVMAP\n\n\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG )\n\n\t\tvec3 cameraToVertex = normalize( vWorldPosition - cameraPosition );\n\n\t\tvec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\n\n\t\t#ifdef ENVMAP_MODE_REFLECTION\n\n\t\t\tvec3 reflectVec = reflect( cameraToVertex, worldNormal );\n\n\t\t#else\n\n\t\t\tvec3 reflectVec = refract( cameraToVertex, worldNormal, refractionRatio );\n\n\t\t#endif\n\n\t#else\n\n\t\tvec3 reflectVec = vReflect;\n\n\t#endif\n\n\t#ifdef DOUBLE_SIDED\n\t\tfloat flipNormal = ( float( gl_FrontFacing ) * 2.0 - 1.0 );\n\t#else\n\t\tfloat flipNormal = 1.0;\n\t#endif\n\n\t#ifdef ENVMAP_TYPE_CUBE\n\t\tvec4 envColor = textureCube( envMap, flipNormal * vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );\n\n\t#elif defined( ENVMAP_TYPE_EQUIREC )\n\t\tvec2 sampleUV;\n\t\tsampleUV.y = saturate( flipNormal * reflectVec.y * 0.5 + 0.5 );\n\t\tsampleUV.x = atan( flipNormal * reflectVec.z, flipNormal * reflectVec.x ) * RECIPROCAL_PI2 + 0.5;\n\t\tvec4 envColor = texture2D( envMap, sampleUV );\n\n\t#elif defined( ENVMAP_TYPE_SPHERE )\n\t\tvec3 reflectView = flipNormal * normalize((viewMatrix * vec4( reflectVec, 0.0 )).xyz + vec3(0.0,0.0,1.0));\n\t\tvec4 envColor = texture2D( envMap, reflectView.xy * 0.5 + 0.5 );\n\t#endif\n\n\tenvColor.xyz = inputToLinear( envColor.xyz );\n\n\t#ifdef ENVMAP_BLENDING_MULTIPLY\n\n\t\toutgoingLight = mix( outgoingLight, outgoingLight * envColor.xyz, specularStrength * reflectivity );\n\n\t#elif defined( ENVMAP_BLENDING_MIX )\n\n\t\toutgoingLight = mix( outgoingLight, envColor.xyz, specularStrength * reflectivity );\n\n\t#elif defined( ENVMAP_BLENDING_ADD )\n\n\t\toutgoingLight += envColor.xyz * specularStrength * reflectivity;\n\n\t#endif\n\n#endif\n",THREE.ShaderChunk.envmap_pars_fragment="#ifdef USE_ENVMAP\n\n\tuniform float reflectivity;\n\t#ifdef ENVMAP_TYPE_CUBE\n\t\tuniform samplerCube envMap;\n\t#else\n\t\tuniform sampler2D envMap;\n\t#endif\n\tuniform float flipEnvMap;\n\n\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG )\n\n\t\tuniform float refractionRatio;\n\n\t#else\n\n\t\tvarying vec3 vReflect;\n\n\t#endif\n\n#endif\n",THREE.ShaderChunk.envmap_pars_vertex="#if defined( USE_ENVMAP ) && ! defined( USE_BUMPMAP ) && ! defined( USE_NORMALMAP ) && ! defined( PHONG )\n\n\tvarying vec3 vReflect;\n\n\tuniform float refractionRatio;\n\n#endif\n",THREE.ShaderChunk.envmap_vertex="#if defined( USE_ENVMAP ) && ! defined( USE_BUMPMAP ) && ! defined( USE_NORMALMAP ) && ! defined( PHONG )\n\n\tvec3 cameraToVertex = normalize( worldPosition.xyz - cameraPosition );\n\n\tvec3 worldNormal = inverseTransformDirection( transformedNormal, viewMatrix );\n\n\t#ifdef ENVMAP_MODE_REFLECTION\n\n\t\tvReflect = reflect( cameraToVertex, worldNormal );\n\n\t#else\n\n\t\tvReflect = refract( cameraToVertex, worldNormal, refractionRatio );\n\n\t#endif\n\n#endif\n",THREE.ShaderChunk.fog_fragment="#ifdef USE_FOG\n\n\t#ifdef USE_LOGDEPTHBUF_EXT\n\n\t\tfloat depth = gl_FragDepthEXT / gl_FragCoord.w;\n\n\t#else\n\n\t\tfloat depth = gl_FragCoord.z / gl_FragCoord.w;\n\n\t#endif\n\n\t#ifdef FOG_EXP2\n\n\t\tfloat fogFactor = whiteCompliment( exp2( - fogDensity * fogDensity * depth * depth * LOG2 ) );\n\n\t#else\n\n\t\tfloat fogFactor = smoothstep( fogNear, fogFar, depth );\n\n\t#endif\n\t\n\toutgoingLight = mix( outgoingLight, fogColor, fogFactor );\n\n#endif",THREE.ShaderChunk.fog_pars_fragment="#ifdef USE_FOG\n\n\tuniform vec3 fogColor;\n\n\t#ifdef FOG_EXP2\n\n\t\tuniform float fogDensity;\n\n\t#else\n\n\t\tuniform float fogNear;\n\t\tuniform float fogFar;\n\t#endif\n\n#endif",THREE.ShaderChunk.hemilight_fragment="#if MAX_HEMI_LIGHTS > 0\n\n\tfor ( int i = 0; i < MAX_HEMI_LIGHTS; i ++ ) {\n\n\t\tvec3 lightDir = hemisphereLightDirection[ i ];\n\n\t\tfloat dotProduct = dot( normal, lightDir );\n\n\t\tfloat hemiDiffuseWeight = 0.5 * dotProduct + 0.5;\n\n\t\tvec3 lightColor = mix( hemisphereLightGroundColor[ i ], hemisphereLightSkyColor[ i ], hemiDiffuseWeight );\n\n\t\ttotalAmbientLight += lightColor;\n\n\t}\n\n#endif\n\n",THREE.ShaderChunk.lightmap_fragment="#ifdef USE_LIGHTMAP\n\n\ttotalAmbientLight += texture2D( lightMap, vUv2 ).xyz * lightMapIntensity;\n\n#endif\n",THREE.ShaderChunk.lightmap_pars_fragment="#ifdef USE_LIGHTMAP\n\n\tuniform sampler2D lightMap;\n\tuniform float lightMapIntensity;\n\n#endif",THREE.ShaderChunk.lights_lambert_pars_vertex="#if MAX_DIR_LIGHTS > 0\n\n\tuniform vec3 directionalLightColor[ MAX_DIR_LIGHTS ];\n\tuniform vec3 directionalLightDirection[ MAX_DIR_LIGHTS ];\n\n#endif\n\n#if MAX_HEMI_LIGHTS > 0\n\n\tuniform vec3 hemisphereLightSkyColor[ MAX_HEMI_LIGHTS ];\n\tuniform vec3 hemisphereLightGroundColor[ MAX_HEMI_LIGHTS ];\n\tuniform vec3 hemisphereLightDirection[ MAX_HEMI_LIGHTS ];\n\n#endif\n\n#if MAX_POINT_LIGHTS > 0\n\n\tuniform vec3 pointLightColor[ MAX_POINT_LIGHTS ];\n\tuniform vec3 pointLightPosition[ MAX_POINT_LIGHTS ];\n\tuniform float pointLightDistance[ MAX_POINT_LIGHTS ];\n\tuniform float pointLightDecay[ MAX_POINT_LIGHTS ];\n\n#endif\n\n#if MAX_SPOT_LIGHTS > 0\n\n\tuniform vec3 spotLightColor[ MAX_SPOT_LIGHTS ];\n\tuniform vec3 spotLightPosition[ MAX_SPOT_LIGHTS ];\n\tuniform vec3 spotLightDirection[ MAX_SPOT_LIGHTS ];\n\tuniform float spotLightDistance[ MAX_SPOT_LIGHTS ];\n\tuniform float spotLightAngleCos[ MAX_SPOT_LIGHTS ];\n\tuniform float spotLightExponent[ MAX_SPOT_LIGHTS ];\n\tuniform float spotLightDecay[ MAX_SPOT_LIGHTS ];\n\n#endif\n",THREE.ShaderChunk.lights_lambert_vertex="vLightFront = vec3( 0.0 );\n\n#ifdef DOUBLE_SIDED\n\n\tvLightBack = vec3( 0.0 );\n\n#endif\n\nvec3 normal = normalize( transformedNormal );\n\n#if MAX_POINT_LIGHTS > 0\n\n\tfor ( int i = 0; i < MAX_POINT_LIGHTS; i ++ ) {\n\n\t\tvec3 lightColor = pointLightColor[ i ];\n\n\t\tvec3 lVector = pointLightPosition[ i ] - mvPosition.xyz;\n\t\tvec3 lightDir = normalize( lVector );\n\n\n\t\tfloat attenuation = calcLightAttenuation( length( lVector ), pointLightDistance[ i ], pointLightDecay[ i ] );\n\n\n\t\tfloat dotProduct = dot( normal, lightDir );\n\n\t\tvLightFront += lightColor * attenuation * saturate( dotProduct );\n\n\t\t#ifdef DOUBLE_SIDED\n\n\t\t\tvLightBack += lightColor * attenuation * saturate( - dotProduct );\n\n\t\t#endif\n\n\t}\n\n#endif\n\n#if MAX_SPOT_LIGHTS > 0\n\n\tfor ( int i = 0; i < MAX_SPOT_LIGHTS; i ++ ) {\n\n\t\tvec3 lightColor = spotLightColor[ i ];\n\n\t\tvec3 lightPosition = spotLightPosition[ i ];\n\t\tvec3 lVector = lightPosition - mvPosition.xyz;\n\t\tvec3 lightDir = normalize( lVector );\n\n\t\tfloat spotEffect = dot( spotLightDirection[ i ], lightDir );\n\n\t\tif ( spotEffect > spotLightAngleCos[ i ] ) {\n\n\t\t\tspotEffect = saturate( pow( saturate( spotEffect ), spotLightExponent[ i ] ) );\n\n\n\t\t\tfloat attenuation = calcLightAttenuation( length( lVector ), spotLightDistance[ i ], spotLightDecay[ i ] );\n\n\t\t\tattenuation *= spotEffect;\n\n\n\t\t\tfloat dotProduct = dot( normal, lightDir );\n\n\t\t\tvLightFront += lightColor * attenuation * saturate( dotProduct );\n\n\t\t\t#ifdef DOUBLE_SIDED\n\n\t\t\t\tvLightBack += lightColor * attenuation * saturate( - dotProduct );\n\n\t\t\t#endif\n\n\t\t}\n\n\t}\n\n#endif\n\n#if MAX_DIR_LIGHTS > 0\n\n\tfor ( int i = 0; i < MAX_DIR_LIGHTS; i ++ ) {\n\n\t\tvec3 lightColor = directionalLightColor[ i ];\n\n\t\tvec3 lightDir = directionalLightDirection[ i ];\n\n\n\t\tfloat dotProduct = dot( normal, lightDir );\n\n\t\tvLightFront += lightColor * saturate( dotProduct );\n\n\t\t#ifdef DOUBLE_SIDED\n\n\t\t\tvLightBack += lightColor * saturate( - dotProduct );\n\n\t\t#endif\n\n\t}\n\n#endif\n\n#if MAX_HEMI_LIGHTS > 0\n\n\tfor ( int i = 0; i < MAX_HEMI_LIGHTS; i ++ ) {\n\n\t\tvec3 lightDir = hemisphereLightDirection[ i ];\n\n\n\t\tfloat dotProduct = dot( normal, lightDir );\n\n\t\tfloat hemiDiffuseWeight = 0.5 * dotProduct + 0.5;\n\n\t\tvLightFront += mix( hemisphereLightGroundColor[ i ], hemisphereLightSkyColor[ i ], hemiDiffuseWeight );\n\n\t\t#ifdef DOUBLE_SIDED\n\n\t\t\tfloat hemiDiffuseWeightBack = - 0.5 * dotProduct + 0.5;\n\n\t\t\tvLightBack += mix( hemisphereLightGroundColor[ i ], hemisphereLightSkyColor[ i ], hemiDiffuseWeightBack );\n\n\t\t#endif\n\n\t}\n\n#endif\n",THREE.ShaderChunk.lights_phong_fragment="vec3 viewDir = normalize( vViewPosition );\n\nvec3 totalDiffuseLight = vec3( 0.0 );\nvec3 totalSpecularLight = vec3( 0.0 );\n\n#if MAX_POINT_LIGHTS > 0\n\n\tfor ( int i = 0; i < MAX_POINT_LIGHTS; i ++ ) {\n\n\t\tvec3 lightColor = pointLightColor[ i ];\n\n\t\tvec3 lightPosition = pointLightPosition[ i ];\n\t\tvec3 lVector = lightPosition + vViewPosition.xyz;\n\t\tvec3 lightDir = normalize( lVector );\n\n\n\t\tfloat attenuation = calcLightAttenuation( length( lVector ), pointLightDistance[ i ], pointLightDecay[ i ] );\n\n\n\t\tfloat cosineTerm = saturate( dot( normal, lightDir ) );\n\n\t\ttotalDiffuseLight += lightColor * attenuation * cosineTerm;\n\n\n\t\tvec3 brdf = BRDF_BlinnPhong( specular, shininess, normal, lightDir, viewDir );\n\n\t\ttotalSpecularLight += brdf * specularStrength * lightColor * attenuation * cosineTerm;\n\n\n\t}\n\n#endif\n\n#if MAX_SPOT_LIGHTS > 0\n\n\tfor ( int i = 0; i < MAX_SPOT_LIGHTS; i ++ ) {\n\n\t\tvec3 lightColor = spotLightColor[ i ];\n\n\t\tvec3 lightPosition = spotLightPosition[ i ];\n\t\tvec3 lVector = lightPosition + vViewPosition.xyz;\n\t\tvec3 lightDir = normalize( lVector );\n\n\t\tfloat spotEffect = dot( spotLightDirection[ i ], lightDir );\n\n\t\tif ( spotEffect > spotLightAngleCos[ i ] ) {\n\n\t\t\tspotEffect = saturate( pow( saturate( spotEffect ), spotLightExponent[ i ] ) );\n\n\n\t\t\tfloat attenuation = calcLightAttenuation( length( lVector ), spotLightDistance[ i ], spotLightDecay[ i ] );\n\n\t\t\tattenuation *= spotEffect;\n\n\n\t\t\tfloat cosineTerm = saturate( dot( normal, lightDir ) );\n\n\t\t\ttotalDiffuseLight += lightColor * attenuation * cosineTerm;\n\n\n\t\t\tvec3 brdf = BRDF_BlinnPhong( specular, shininess, normal, lightDir, viewDir );\n\n\t\t\ttotalSpecularLight += brdf * specularStrength * lightColor * attenuation * cosineTerm;\n\n\t\t}\n\n\t}\n\n#endif\n\n#if MAX_DIR_LIGHTS > 0\n\n\tfor ( int i = 0; i < MAX_DIR_LIGHTS; i ++ ) {\n\n\t\tvec3 lightColor = directionalLightColor[ i ];\n\n\t\tvec3 lightDir = directionalLightDirection[ i ];\n\n\n\t\tfloat cosineTerm = saturate( dot( normal, lightDir ) );\n\n\t\ttotalDiffuseLight += lightColor * cosineTerm;\n\n\n\t\tvec3 brdf = BRDF_BlinnPhong( specular, shininess, normal, lightDir, viewDir );\n\n\t\ttotalSpecularLight += brdf * specularStrength * lightColor * cosineTerm;\n\n\t}\n\n#endif\n",THREE.ShaderChunk.lights_phong_pars_fragment="uniform vec3 ambientLightColor;\n\n#if MAX_DIR_LIGHTS > 0\n\n\tuniform vec3 directionalLightColor[ MAX_DIR_LIGHTS ];\n\tuniform vec3 directionalLightDirection[ MAX_DIR_LIGHTS ];\n\n#endif\n\n#if MAX_HEMI_LIGHTS > 0\n\n\tuniform vec3 hemisphereLightSkyColor[ MAX_HEMI_LIGHTS ];\n\tuniform vec3 hemisphereLightGroundColor[ MAX_HEMI_LIGHTS ];\n\tuniform vec3 hemisphereLightDirection[ MAX_HEMI_LIGHTS ];\n\n#endif\n\n#if MAX_POINT_LIGHTS > 0\n\n\tuniform vec3 pointLightColor[ MAX_POINT_LIGHTS ];\n\n\tuniform vec3 pointLightPosition[ MAX_POINT_LIGHTS ];\n\tuniform float pointLightDistance[ MAX_POINT_LIGHTS ];\n\tuniform float pointLightDecay[ MAX_POINT_LIGHTS ];\n\n#endif\n\n#if MAX_SPOT_LIGHTS > 0\n\n\tuniform vec3 spotLightColor[ MAX_SPOT_LIGHTS ];\n\tuniform vec3 spotLightPosition[ MAX_SPOT_LIGHTS ];\n\tuniform vec3 spotLightDirection[ MAX_SPOT_LIGHTS ];\n\tuniform float spotLightAngleCos[ MAX_SPOT_LIGHTS ];\n\tuniform float spotLightExponent[ MAX_SPOT_LIGHTS ];\n\tuniform float spotLightDistance[ MAX_SPOT_LIGHTS ];\n\tuniform float spotLightDecay[ MAX_SPOT_LIGHTS ];\n\n#endif\n\n#if MAX_SPOT_LIGHTS > 0 || defined( USE_ENVMAP )\n\n\tvarying vec3 vWorldPosition;\n\n#endif\n\nvarying vec3 vViewPosition;\n\n#ifndef FLAT_SHADED\n\n\tvarying vec3 vNormal;\n\n#endif\n",THREE.ShaderChunk.lights_phong_pars_vertex="#if MAX_SPOT_LIGHTS > 0 || defined( USE_ENVMAP )\n\n\tvarying vec3 vWorldPosition;\n\n#endif\n\n#if MAX_POINT_LIGHTS > 0\n\n\tuniform vec3 pointLightPosition[ MAX_POINT_LIGHTS ];\n\n#endif\n",THREE.ShaderChunk.lights_phong_vertex="#if MAX_SPOT_LIGHTS > 0 || defined( USE_ENVMAP )\n\n\tvWorldPosition = worldPosition.xyz;\n\n#endif\n",THREE.ShaderChunk.linear_to_gamma_fragment="\n\toutgoingLight = linearToOutput( outgoingLight );\n",THREE.ShaderChunk.logdepthbuf_fragment="#if defined(USE_LOGDEPTHBUF) && defined(USE_LOGDEPTHBUF_EXT)\n\n\tgl_FragDepthEXT = log2(vFragDepth) * logDepthBufFC * 0.5;\n\n#endif",THREE.ShaderChunk.logdepthbuf_pars_fragment="#ifdef USE_LOGDEPTHBUF\n\n\tuniform float logDepthBufFC;\n\n\t#ifdef USE_LOGDEPTHBUF_EXT\n\n\t\tvarying float vFragDepth;\n\n\t#endif\n\n#endif\n",THREE.ShaderChunk.logdepthbuf_pars_vertex="#ifdef USE_LOGDEPTHBUF\n\n\t#ifdef USE_LOGDEPTHBUF_EXT\n\n\t\tvarying float vFragDepth;\n\n\t#endif\n\n\tuniform float logDepthBufFC;\n\n#endif",THREE.ShaderChunk.logdepthbuf_vertex="#ifdef USE_LOGDEPTHBUF\n\n\tgl_Position.z = log2(max( EPSILON, gl_Position.w + 1.0 )) * logDepthBufFC;\n\n\t#ifdef USE_LOGDEPTHBUF_EXT\n\n\t\tvFragDepth = 1.0 + gl_Position.w;\n\n#else\n\n\t\tgl_Position.z = (gl_Position.z - 1.0) * gl_Position.w;\n\n\t#endif\n\n#endif",THREE.ShaderChunk.map_fragment="#ifdef USE_MAP\n\n\tvec4 texelColor = texture2D( map, vUv );\n\n\ttexelColor.xyz = inputToLinear( texelColor.xyz );\n\n\tdiffuseColor *= texelColor;\n\n#endif\n",THREE.ShaderChunk.map_pars_fragment="#ifdef USE_MAP\n\n\tuniform sampler2D map;\n\n#endif",THREE.ShaderChunk.map_particle_fragment="#ifdef USE_MAP\n\n\tdiffuseColor *= texture2D( map, vec2( gl_PointCoord.x, 1.0 - gl_PointCoord.y ) * offsetRepeat.zw + offsetRepeat.xy );\n\n#endif\n",THREE.ShaderChunk.map_particle_pars_fragment="#ifdef USE_MAP\n\n\tuniform vec4 offsetRepeat;\n\tuniform sampler2D map;\n\n#endif\n",THREE.ShaderChunk.morphnormal_vertex="#ifdef USE_MORPHNORMALS\n\n\tobjectNormal += ( morphNormal0 - normal ) * morphTargetInfluences[ 0 ];\n\tobjectNormal += ( morphNormal1 - normal ) * morphTargetInfluences[ 1 ];\n\tobjectNormal += ( morphNormal2 - normal ) * morphTargetInfluences[ 2 ];\n\tobjectNormal += ( morphNormal3 - normal ) * morphTargetInfluences[ 3 ];\n\n#endif\n",THREE.ShaderChunk.morphtarget_pars_vertex="#ifdef USE_MORPHTARGETS\n\n\t#ifndef USE_MORPHNORMALS\n\n\tuniform float morphTargetInfluences[ 8 ];\n\n\t#else\n\n\tuniform float morphTargetInfluences[ 4 ];\n\n\t#endif\n\n#endif",THREE.ShaderChunk.morphtarget_vertex="#ifdef USE_MORPHTARGETS\n\n\ttransformed += ( morphTarget0 - position ) * morphTargetInfluences[ 0 ];\n\ttransformed += ( morphTarget1 - position ) * morphTargetInfluences[ 1 ];\n\ttransformed += ( morphTarget2 - position ) * morphTargetInfluences[ 2 ];\n\ttransformed += ( morphTarget3 - position ) * morphTargetInfluences[ 3 ];\n\n\t#ifndef USE_MORPHNORMALS\n\n\ttransformed += ( morphTarget4 - position ) * morphTargetInfluences[ 4 ];\n\ttransformed += ( morphTarget5 - position ) * morphTargetInfluences[ 5 ];\n\ttransformed += ( morphTarget6 - position ) * morphTargetInfluences[ 6 ];\n\ttransformed += ( morphTarget7 - position ) * morphTargetInfluences[ 7 ];\n\n\t#endif\n\n#endif\n",THREE.ShaderChunk.normal_phong_fragment="#ifndef FLAT_SHADED\n\n\tvec3 normal = normalize( vNormal );\n\n\t#ifdef DOUBLE_SIDED\n\n\t\tnormal = normal * ( -1.0 + 2.0 * float( gl_FrontFacing ) );\n\n\t#endif\n\n#else\n\n\tvec3 fdx = dFdx( vViewPosition );\n\tvec3 fdy = dFdy( vViewPosition );\n\tvec3 normal = normalize( cross( fdx, fdy ) );\n\n#endif\n\n#ifdef USE_NORMALMAP\n\n\tnormal = perturbNormal2Arb( -vViewPosition, normal );\n\n#elif defined( USE_BUMPMAP )\n\n\tnormal = perturbNormalArb( -vViewPosition, normal, dHdxy_fwd() );\n\n#endif\n\n",THREE.ShaderChunk.normalmap_pars_fragment="#ifdef USE_NORMALMAP\n\n\tuniform sampler2D normalMap;\n\tuniform vec2 normalScale;\n\n\n\tvec3 perturbNormal2Arb( vec3 eye_pos, vec3 surf_norm ) {\n\n\t\tvec3 q0 = dFdx( eye_pos.xyz );\n\t\tvec3 q1 = dFdy( eye_pos.xyz );\n\t\tvec2 st0 = dFdx( vUv.st );\n\t\tvec2 st1 = dFdy( vUv.st );\n\n\t\tvec3 S = normalize( q0 * st1.t - q1 * st0.t );\n\t\tvec3 T = normalize( -q0 * st1.s + q1 * st0.s );\n\t\tvec3 N = normalize( surf_norm );\n\n\t\tvec3 mapN = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;\n\t\tmapN.xy = normalScale * mapN.xy;\n\t\tmat3 tsn = mat3( S, T, N );\n\t\treturn normalize( tsn * mapN );\n\n\t}\n\n#endif\n",THREE.ShaderChunk.project_vertex="#ifdef USE_SKINNING\n\n\tvec4 mvPosition = modelViewMatrix * skinned;\n\n#else\n\n\tvec4 mvPosition = modelViewMatrix * vec4( transformed, 1.0 );\n\n#endif\n\ngl_Position = projectionMatrix * mvPosition;\n",THREE.ShaderChunk.shadowmap_fragment="#ifdef USE_SHADOWMAP\n\n\tfor ( int i = 0; i < MAX_SHADOWS; i ++ ) {\n\n\t\tfloat texelSizeY =  1.0 / shadowMapSize[ i ].y;\n\n\t\tfloat shadow = 0.0;\n\n#if defined( POINT_LIGHT_SHADOWS )\n\n\t\tbool isPointLight = shadowDarkness[ i ] < 0.0;\n\n\t\tif ( isPointLight ) {\n\n\t\t\tfloat realShadowDarkness = abs( shadowDarkness[ i ] );\n\n\t\t\tvec3 lightToPosition = vShadowCoord[ i ].xyz;\n\n\t#if defined( SHADOWMAP_TYPE_PCF ) || defined( SHADOWMAP_TYPE_PCF_SOFT )\n\n\t\t\tvec3 bd3D = normalize( lightToPosition );\n\t\t\tfloat dp = length( lightToPosition );\n\n\t\t\tadjustShadowValue1K( dp, texture2D( shadowMap[ i ], cubeToUV( bd3D, texelSizeY ) ), shadowBias[ i ], shadow );\n\n\n\t#if defined( SHADOWMAP_TYPE_PCF )\n\t\t\tconst float Dr = 1.25;\n\t#elif defined( SHADOWMAP_TYPE_PCF_SOFT )\n\t\t\tconst float Dr = 2.25;\n\t#endif\n\n\t\t\tfloat os = Dr *  2.0 * texelSizeY;\n\n\t\t\tconst vec3 Gsd = vec3( - 1, 0, 1 );\n\n\t\t\tadjustShadowValue1K( dp, texture2D( shadowMap[ i ], cubeToUV( bd3D + Gsd.zzz * os, texelSizeY ) ), shadowBias[ i ], shadow );\n\t\t\tadjustShadowValue1K( dp, texture2D( shadowMap[ i ], cubeToUV( bd3D + Gsd.zxz * os, texelSizeY ) ), shadowBias[ i ], shadow );\n\t\t\tadjustShadowValue1K( dp, texture2D( shadowMap[ i ], cubeToUV( bd3D + Gsd.xxz * os, texelSizeY ) ), shadowBias[ i ], shadow );\n\t\t\tadjustShadowValue1K( dp, texture2D( shadowMap[ i ], cubeToUV( bd3D + Gsd.xzz * os, texelSizeY ) ), shadowBias[ i ], shadow );\n\t\t\tadjustShadowValue1K( dp, texture2D( shadowMap[ i ], cubeToUV( bd3D + Gsd.zzx * os, texelSizeY ) ), shadowBias[ i ], shadow );\n\t\t\tadjustShadowValue1K( dp, texture2D( shadowMap[ i ], cubeToUV( bd3D + Gsd.zxx * os, texelSizeY ) ), shadowBias[ i ], shadow );\n\t\t\tadjustShadowValue1K( dp, texture2D( shadowMap[ i ], cubeToUV( bd3D + Gsd.xxx * os, texelSizeY ) ), shadowBias[ i ], shadow );\n\t\t\tadjustShadowValue1K( dp, texture2D( shadowMap[ i ], cubeToUV( bd3D + Gsd.xzx * os, texelSizeY ) ), shadowBias[ i ], shadow );\n\t\t\tadjustShadowValue1K( dp, texture2D( shadowMap[ i ], cubeToUV( bd3D + Gsd.zzy * os, texelSizeY ) ), shadowBias[ i ], shadow );\n\t\t\tadjustShadowValue1K( dp, texture2D( shadowMap[ i ], cubeToUV( bd3D + Gsd.zxy * os, texelSizeY ) ), shadowBias[ i ], shadow );\n\n\t\t\tadjustShadowValue1K( dp, texture2D( shadowMap[ i ], cubeToUV( bd3D + Gsd.xxy * os, texelSizeY ) ), shadowBias[ i ], shadow );\n\t\t\tadjustShadowValue1K( dp, texture2D( shadowMap[ i ], cubeToUV( bd3D + Gsd.xzy * os, texelSizeY ) ), shadowBias[ i ], shadow );\n\t\t\tadjustShadowValue1K( dp, texture2D( shadowMap[ i ], cubeToUV( bd3D + Gsd.zyz * os, texelSizeY ) ), shadowBias[ i ], shadow );\n\t\t\tadjustShadowValue1K( dp, texture2D( shadowMap[ i ], cubeToUV( bd3D + Gsd.xyz * os, texelSizeY ) ), shadowBias[ i ], shadow );\n\t\t\tadjustShadowValue1K( dp, texture2D( shadowMap[ i ], cubeToUV( bd3D + Gsd.zyx * os, texelSizeY ) ), shadowBias[ i ], shadow );\n\t\t\tadjustShadowValue1K( dp, texture2D( shadowMap[ i ], cubeToUV( bd3D + Gsd.xyx * os, texelSizeY ) ), shadowBias[ i ], shadow );\n\t\t\tadjustShadowValue1K( dp, texture2D( shadowMap[ i ], cubeToUV( bd3D + Gsd.yzz * os, texelSizeY ) ), shadowBias[ i ], shadow );\n\t\t\tadjustShadowValue1K( dp, texture2D( shadowMap[ i ], cubeToUV( bd3D + Gsd.yxz * os, texelSizeY ) ), shadowBias[ i ], shadow );\n\t\t\tadjustShadowValue1K( dp, texture2D( shadowMap[ i ], cubeToUV( bd3D + Gsd.yxx * os, texelSizeY ) ), shadowBias[ i ], shadow );\n\t\t\tadjustShadowValue1K( dp, texture2D( shadowMap[ i ], cubeToUV( bd3D + Gsd.yzx * os, texelSizeY ) ), shadowBias[ i ], shadow );\n\n\t\t\tshadow *= realShadowDarkness * ( 1.0 / 21.0 );\n\n\t#else \n\t\t\tvec3 bd3D = normalize( lightToPosition );\n\t\t\tfloat dp = length( lightToPosition );\n\n\t\t\tadjustShadowValue1K( dp, texture2D( shadowMap[ i ], cubeToUV( bd3D, texelSizeY ) ), shadowBias[ i ], shadow );\n\n\t\t\tshadow *= realShadowDarkness;\n\n\t#endif\n\n\t\t} else {\n\n#endif \n\t\t\tfloat texelSizeX =  1.0 / shadowMapSize[ i ].x;\n\n\t\t\tvec3 shadowCoord = vShadowCoord[ i ].xyz / vShadowCoord[ i ].w;\n\n\n\t\t\tbvec4 inFrustumVec = bvec4 ( shadowCoord.x >= 0.0, shadowCoord.x <= 1.0, shadowCoord.y >= 0.0, shadowCoord.y <= 1.0 );\n\t\t\tbool inFrustum = all( inFrustumVec );\n\n\t\t\tbvec2 frustumTestVec = bvec2( inFrustum, shadowCoord.z <= 1.0 );\n\n\t\t\tbool frustumTest = all( frustumTestVec );\n\n\t\t\tif ( frustumTest ) {\n\n\t#if defined( SHADOWMAP_TYPE_PCF )\n\n\n\t\t\t\t/*\n\t\t\t\t\tfor ( float y = -1.25; y <= 1.25; y += 1.25 )\n\t\t\t\t\t\tfor ( float x = -1.25; x <= 1.25; x += 1.25 ) {\n\t\t\t\t\t\t\tvec4 rgbaDepth = texture2D( shadowMap[ i ], vec2( x * xPixelOffset, y * yPixelOffset ) + shadowCoord.xy );\n\t\t\t\t\t\t\tfloat fDepth = unpackDepth( rgbaDepth );\n\t\t\t\t\t\t\tif ( fDepth < shadowCoord.z )\n\t\t\t\t\t\t\t\tshadow += 1.0;\n\t\t\t\t\t}\n\t\t\t\t\tshadow /= 9.0;\n\t\t\t\t*/\n\n\t\t\t\tshadowCoord.z += shadowBias[ i ];\n\n\t\t\t\tconst float ShadowDelta = 1.0 / 9.0;\n\n\t\t\t\tfloat xPixelOffset = texelSizeX;\n\t\t\t\tfloat yPixelOffset = texelSizeY;\n\n\t\t\t\tfloat dx0 = - 1.25 * xPixelOffset;\n\t\t\t\tfloat dy0 = - 1.25 * yPixelOffset;\n\t\t\t\tfloat dx1 = 1.25 * xPixelOffset;\n\t\t\t\tfloat dy1 = 1.25 * yPixelOffset;\n\n\t\t\t\tfloat fDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, dy0 ) ) );\n\t\t\t\tif ( fDepth < shadowCoord.z ) shadow += ShadowDelta;\n\n\t\t\t\tfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( 0.0, dy0 ) ) );\n\t\t\t\tif ( fDepth < shadowCoord.z ) shadow += ShadowDelta;\n\n\t\t\t\tfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, dy0 ) ) );\n\t\t\t\tif ( fDepth < shadowCoord.z ) shadow += ShadowDelta;\n\n\t\t\t\tfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, 0.0 ) ) );\n\t\t\t\tif ( fDepth < shadowCoord.z ) shadow += ShadowDelta;\n\n\t\t\t\tfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy ) );\n\t\t\t\tif ( fDepth < shadowCoord.z ) shadow += ShadowDelta;\n\n\t\t\t\tfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, 0.0 ) ) );\n\t\t\t\tif ( fDepth < shadowCoord.z ) shadow += ShadowDelta;\n\n\t\t\t\tfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, dy1 ) ) );\n\t\t\t\tif ( fDepth < shadowCoord.z ) shadow += ShadowDelta;\n\n\t\t\t\tfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( 0.0, dy1 ) ) );\n\t\t\t\tif ( fDepth < shadowCoord.z ) shadow += ShadowDelta;\n\n\t\t\t\tfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, dy1 ) ) );\n\t\t\t\tif ( fDepth < shadowCoord.z ) shadow += ShadowDelta;\n\n\t\t\t\tshadow *= shadowDarkness[ i ];\n\n\t#elif defined( SHADOWMAP_TYPE_PCF_SOFT )\n\n\n\t\t\t\tshadowCoord.z += shadowBias[ i ];\n\n\t\t\t\tfloat xPixelOffset = texelSizeX;\n\t\t\t\tfloat yPixelOffset = texelSizeY;\n\n\t\t\t\tfloat dx0 = - 1.0 * xPixelOffset;\n\t\t\t\tfloat dy0 = - 1.0 * yPixelOffset;\n\t\t\t\tfloat dx1 = 1.0 * xPixelOffset;\n\t\t\t\tfloat dy1 = 1.0 * yPixelOffset;\n\n\t\t\t\tmat3 shadowKernel;\n\t\t\t\tmat3 depthKernel;\n\n\t\t\t\tdepthKernel[ 0 ][ 0 ] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, dy0 ) ) );\n\t\t\t\tdepthKernel[ 0 ][ 1 ] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, 0.0 ) ) );\n\t\t\t\tdepthKernel[ 0 ][ 2 ] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, dy1 ) ) );\n\t\t\t\tdepthKernel[ 1 ][ 0 ] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( 0.0, dy0 ) ) );\n\t\t\t\tdepthKernel[ 1 ][ 1 ] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy ) );\n\t\t\t\tdepthKernel[ 1 ][ 2 ] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( 0.0, dy1 ) ) );\n\t\t\t\tdepthKernel[ 2 ][ 0 ] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, dy0 ) ) );\n\t\t\t\tdepthKernel[ 2 ][ 1 ] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, 0.0 ) ) );\n\t\t\t\tdepthKernel[ 2 ][ 2 ] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, dy1 ) ) );\n\n\t\t\t\tvec3 shadowZ = vec3( shadowCoord.z );\n\t\t\t\tshadowKernel[ 0 ] = vec3( lessThan( depthKernel[ 0 ], shadowZ ) );\n\t\t\t\tshadowKernel[ 0 ] *= vec3( 0.25 );\n\n\t\t\t\tshadowKernel[ 1 ] = vec3( lessThan( depthKernel[ 1 ], shadowZ ) );\n\t\t\t\tshadowKernel[ 1 ] *= vec3( 0.25 );\n\n\t\t\t\tshadowKernel[ 2 ] = vec3( lessThan( depthKernel[ 2 ], shadowZ ) );\n\t\t\t\tshadowKernel[ 2 ] *= vec3( 0.25 );\n\n\t\t\t\tvec2 fractionalCoord = 1.0 - fract( shadowCoord.xy * shadowMapSize[ i ].xy );\n\n\t\t\t\tshadowKernel[ 0 ] = mix( shadowKernel[ 1 ], shadowKernel[ 0 ], fractionalCoord.x );\n\t\t\t\tshadowKernel[ 1 ] = mix( shadowKernel[ 2 ], shadowKernel[ 1 ], fractionalCoord.x );\n\n\t\t\t\tvec4 shadowValues;\n\t\t\t\tshadowValues.x = mix( shadowKernel[ 0 ][ 1 ], shadowKernel[ 0 ][ 0 ], fractionalCoord.y );\n\t\t\t\tshadowValues.y = mix( shadowKernel[ 0 ][ 2 ], shadowKernel[ 0 ][ 1 ], fractionalCoord.y );\n\t\t\t\tshadowValues.z = mix( shadowKernel[ 1 ][ 1 ], shadowKernel[ 1 ][ 0 ], fractionalCoord.y );\n\t\t\t\tshadowValues.w = mix( shadowKernel[ 1 ][ 2 ], shadowKernel[ 1 ][ 1 ], fractionalCoord.y );\n\n\t\t\t\tshadow = dot( shadowValues, vec4( 1.0 ) ) * shadowDarkness[ i ];\n\n\t#else \n\t\t\t\tshadowCoord.z += shadowBias[ i ];\n\n\t\t\t\tvec4 rgbaDepth = texture2D( shadowMap[ i ], shadowCoord.xy );\n\t\t\t\tfloat fDepth = unpackDepth( rgbaDepth );\n\n\t\t\t\tif ( fDepth < shadowCoord.z )\n\t\t\t\t\tshadow = shadowDarkness[ i ];\n\n\t#endif\n\n\t\t\t}\n\n#ifdef SHADOWMAP_DEBUG\n\n\t\t\tif ( inFrustum ) {\n\n\t\t\t\tif ( i == 0 ) {\n\n\t\t\t\t\toutgoingLight *= vec3( 1.0, 0.5, 0.0 );\n\n\t\t\t\t} else if ( i == 1 ) {\n\n\t\t\t\t\toutgoingLight *= vec3( 0.0, 1.0, 0.8 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\toutgoingLight *= vec3( 0.0, 0.5, 1.0 );\n\n\t\t\t\t}\n\n\t\t\t}\n\n#endif\n\n#if defined( POINT_LIGHT_SHADOWS )\n\n\t\t}\n\n#endif\n\n\t\tshadowMask = shadowMask * vec3( 1.0 - shadow );\n\n\t}\n\n#endif\n",THREE.ShaderChunk.shadowmap_pars_fragment="#ifdef USE_SHADOWMAP\n\n\tuniform sampler2D shadowMap[ MAX_SHADOWS ];\n\tuniform vec2 shadowMapSize[ MAX_SHADOWS ];\n\n\tuniform float shadowDarkness[ MAX_SHADOWS ];\n\tuniform float shadowBias[ MAX_SHADOWS ];\n\n\tvarying vec4 vShadowCoord[ MAX_SHADOWS ];\n\n\tfloat unpackDepth( const in vec4 rgba_depth ) {\n\n\t\tconst vec4 bit_shift = vec4( 1.0 / ( 256.0 * 256.0 * 256.0 ), 1.0 / ( 256.0 * 256.0 ), 1.0 / 256.0, 1.0 );\n\t\tfloat depth = dot( rgba_depth, bit_shift );\n\t\treturn depth;\n\n\t}\n\n\t#if defined(POINT_LIGHT_SHADOWS)\n\n\n\t\tvoid adjustShadowValue1K( const float testDepth, const vec4 textureData, const float bias, inout float shadowValue ) {\n\n\t\t\tconst vec4 bitSh = vec4( 1.0 / ( 256.0 * 256.0 * 256.0 ), 1.0 / ( 256.0 * 256.0 ), 1.0 / 256.0, 1.0 );\n\t\t\tif ( testDepth >= dot( textureData, bitSh ) * 1000.0 + bias )\n\t\t\t\tshadowValue += 1.0;\n\n\t\t}\n\n\n\t\tvec2 cubeToUV( vec3 v, float texelSizeY ) {\n\n\n\t\t\tvec3 absV = abs( v );\n\n\n\t\t\tfloat scaleToCube = 1.0 / max( absV.x, max( absV.y, absV.z ) );\n\t\t\tabsV *= scaleToCube;\n\n\n\t\t\tv *= scaleToCube * ( 1.0 - 2.0 * texelSizeY );\n\n\n\n\t\t\tvec2 planar = v.xy;\n\n\t\t\tfloat almostATexel = 1.5 * texelSizeY;\n\t\t\tfloat almostOne = 1.0 - almostATexel;\n\n\t\t\tif ( absV.z >= almostOne ) {\n\n\t\t\t\tif ( v.z > 0.0 )\n\t\t\t\t\tplanar.x = 4.0 - v.x;\n\n\t\t\t} else if ( absV.x >= almostOne ) {\n\n\t\t\t\tfloat signX = sign( v.x );\n\t\t\t\tplanar.x = v.z * signX + 2.0 * signX;\n\n\t\t\t} else if ( absV.y >= almostOne ) {\n\n\t\t\t\tfloat signY = sign( v.y );\n\t\t\t\tplanar.x = v.x + 2.0 * signY + 2.0;\n\t\t\t\tplanar.y = v.z * signY - 2.0;\n\n\t\t\t}\n\n\n\t\t\treturn vec2( 0.125, 0.25 ) * planar + vec2( 0.375, 0.75 );\n\n\t\t}\n\n\t#endif\n\n#endif\n",THREE.ShaderChunk.shadowmap_pars_vertex="#ifdef USE_SHADOWMAP\n\n\tuniform float shadowDarkness[ MAX_SHADOWS ];\n\tuniform mat4 shadowMatrix[ MAX_SHADOWS ];\n\tvarying vec4 vShadowCoord[ MAX_SHADOWS ];\n\n#endif",THREE.ShaderChunk.shadowmap_vertex="#ifdef USE_SHADOWMAP\n\n\tfor ( int i = 0; i < MAX_SHADOWS; i ++ ) {\n\n\t\t\tvShadowCoord[ i ] = shadowMatrix[ i ] * worldPosition;\n\n\t}\n\n#endif",THREE.ShaderChunk.skinbase_vertex="#ifdef USE_SKINNING\n\n\tmat4 boneMatX = getBoneMatrix( skinIndex.x );\n\tmat4 boneMatY = getBoneMatrix( skinIndex.y );\n\tmat4 boneMatZ = getBoneMatrix( skinIndex.z );\n\tmat4 boneMatW = getBoneMatrix( skinIndex.w );\n\n#endif",THREE.ShaderChunk.skinning_pars_vertex="#ifdef USE_SKINNING\n\n\tuniform mat4 bindMatrix;\n\tuniform mat4 bindMatrixInverse;\n\n\t#ifdef BONE_TEXTURE\n\n\t\tuniform sampler2D boneTexture;\n\t\tuniform int boneTextureWidth;\n\t\tuniform int boneTextureHeight;\n\n\t\tmat4 getBoneMatrix( const in float i ) {\n\n\t\t\tfloat j = i * 4.0;\n\t\t\tfloat x = mod( j, float( boneTextureWidth ) );\n\t\t\tfloat y = floor( j / float( boneTextureWidth ) );\n\n\t\t\tfloat dx = 1.0 / float( boneTextureWidth );\n\t\t\tfloat dy = 1.0 / float( boneTextureHeight );\n\n\t\t\ty = dy * ( y + 0.5 );\n\n\t\t\tvec4 v1 = texture2D( boneTexture, vec2( dx * ( x + 0.5 ), y ) );\n\t\t\tvec4 v2 = texture2D( boneTexture, vec2( dx * ( x + 1.5 ), y ) );\n\t\t\tvec4 v3 = texture2D( boneTexture, vec2( dx * ( x + 2.5 ), y ) );\n\t\t\tvec4 v4 = texture2D( boneTexture, vec2( dx * ( x + 3.5 ), y ) );\n\n\t\t\tmat4 bone = mat4( v1, v2, v3, v4 );\n\n\t\t\treturn bone;\n\n\t\t}\n\n\t#else\n\n\t\tuniform mat4 boneGlobalMatrices[ MAX_BONES ];\n\n\t\tmat4 getBoneMatrix( const in float i ) {\n\n\t\t\tmat4 bone = boneGlobalMatrices[ int(i) ];\n\t\t\treturn bone;\n\n\t\t}\n\n\t#endif\n\n#endif\n",THREE.ShaderChunk.skinning_vertex="#ifdef USE_SKINNING\n\n\tvec4 skinVertex = bindMatrix * vec4( transformed, 1.0 );\n\n\tvec4 skinned = vec4( 0.0 );\n\tskinned += boneMatX * skinVertex * skinWeight.x;\n\tskinned += boneMatY * skinVertex * skinWeight.y;\n\tskinned += boneMatZ * skinVertex * skinWeight.z;\n\tskinned += boneMatW * skinVertex * skinWeight.w;\n\tskinned  = bindMatrixInverse * skinned;\n\n#endif\n",THREE.ShaderChunk.skinnormal_vertex="#ifdef USE_SKINNING\n\n\tmat4 skinMatrix = mat4( 0.0 );\n\tskinMatrix += skinWeight.x * boneMatX;\n\tskinMatrix += skinWeight.y * boneMatY;\n\tskinMatrix += skinWeight.z * boneMatZ;\n\tskinMatrix += skinWeight.w * boneMatW;\n\tskinMatrix  = bindMatrixInverse * skinMatrix * bindMatrix;\n\n\tobjectNormal = vec4( skinMatrix * vec4( objectNormal, 0.0 ) ).xyz;\n\n#endif\n",THREE.ShaderChunk.specularmap_fragment="float specularStrength;\n\n#ifdef USE_SPECULARMAP\n\n\tvec4 texelSpecular = texture2D( specularMap, vUv );\n\tspecularStrength = texelSpecular.r;\n\n#else\n\n\tspecularStrength = 1.0;\n\n#endif",THREE.ShaderChunk.specularmap_pars_fragment="#ifdef USE_SPECULARMAP\n\n\tuniform sampler2D specularMap;\n\n#endif",THREE.ShaderChunk.uv2_pars_fragment="#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\n\n\tvarying vec2 vUv2;\n\n#endif",THREE.ShaderChunk.uv2_pars_vertex="#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\n\n\tattribute vec2 uv2;\n\tvarying vec2 vUv2;\n\n#endif",THREE.ShaderChunk.uv2_vertex="#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\n\n\tvUv2 = uv2;\n\n#endif",THREE.ShaderChunk.uv_pars_fragment="#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP ) || defined( USE_ALPHAMAP ) || defined( USE_EMISSIVEMAP )\n\n\tvarying vec2 vUv;\n\n#endif",THREE.ShaderChunk.uv_pars_vertex="#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP ) || defined( USE_ALPHAMAP ) || defined( USE_EMISSIVEMAP )\n\n\tvarying vec2 vUv;\n\tuniform vec4 offsetRepeat;\n\n#endif\n",THREE.ShaderChunk.uv_vertex="#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP ) || defined( USE_ALPHAMAP ) || defined( USE_EMISSIVEMAP )\n\n\tvUv = uv * offsetRepeat.zw + offsetRepeat.xy;\n\n#endif",THREE.ShaderChunk.worldpos_vertex="#if defined( USE_ENVMAP ) || defined( PHONG ) || defined( LAMBERT ) || defined ( USE_SHADOWMAP )\n\n\t#ifdef USE_SKINNING\n\n\t\tvec4 worldPosition = modelMatrix * skinned;\n\n\t#else\n\n\t\tvec4 worldPosition = modelMatrix * vec4( transformed, 1.0 );\n\n\t#endif\n\n#endif\n",THREE.UniformsUtils={merge:function(t){for(var e={},r=0;r<t.length;r++){var i=this.clone(t[r]);for(var n in i)e[n]=i[n]}return e},clone:function(t){var e={};for(var r in t)for(var i in e[r]={},t[r]){var n=t[r][i];n instanceof THREE.Color||n instanceof THREE.Vector2||n instanceof THREE.Vector3||n instanceof THREE.Vector4||n instanceof THREE.Matrix3||n instanceof THREE.Matrix4||n instanceof THREE.Texture?e[r][i]=n.clone():Array.isArray(n)?e[r][i]=n.slice():e[r][i]=n}return e}},THREE.UniformsLib={common:{diffuse:{type:"c",value:new THREE.Color(15658734)},opacity:{type:"f",value:1},map:{type:"t",value:null},offsetRepeat:{type:"v4",value:new THREE.Vector4(0,0,1,1)},specularMap:{type:"t",value:null},alphaMap:{type:"t",value:null},envMap:{type:"t",value:null},flipEnvMap:{type:"f",value:-1},reflectivity:{type:"f",value:1},refractionRatio:{type:"f",value:.98}},aomap:{aoMap:{type:"t",value:null},aoMapIntensity:{type:"f",value:1}},lightmap:{lightMap:{type:"t",value:null},lightMapIntensity:{type:"f",value:1}},emissivemap:{emissiveMap:{type:"t",value:null}},bumpmap:{bumpMap:{type:"t",value:null},bumpScale:{type:"f",value:1}},normalmap:{normalMap:{type:"t",value:null},normalScale:{type:"v2",value:new THREE.Vector2(1,1)}},displacementmap:{displacementMap:{type:"t",value:null},displacementScale:{type:"f",value:1},displacementBias:{type:"f",value:0}},fog:{fogDensity:{type:"f",value:25e-5},fogNear:{type:"f",value:1},fogFar:{type:"f",value:2e3},fogColor:{type:"c",value:new THREE.Color(16777215)}},lights:{ambientLightColor:{type:"fv",value:[]},directionalLightDirection:{type:"fv",value:[]},directionalLightColor:{type:"fv",value:[]},hemisphereLightDirection:{type:"fv",value:[]},hemisphereLightSkyColor:{type:"fv",value:[]},hemisphereLightGroundColor:{type:"fv",value:[]},pointLightColor:{type:"fv",value:[]},pointLightPosition:{type:"fv",value:[]},pointLightDistance:{type:"fv1",value:[]},pointLightDecay:{type:"fv1",value:[]},spotLightColor:{type:"fv",value:[]},spotLightPosition:{type:"fv",value:[]},spotLightDirection:{type:"fv",value:[]},spotLightDistance:{type:"fv1",value:[]},spotLightAngleCos:{type:"fv1",value:[]},spotLightExponent:{type:"fv1",value:[]},spotLightDecay:{type:"fv1",value:[]}},points:{psColor:{type:"c",value:new THREE.Color(15658734)},opacity:{type:"f",value:1},size:{type:"f",value:1},scale:{type:"f",value:1},map:{type:"t",value:null},offsetRepeat:{type:"v4",value:new THREE.Vector4(0,0,1,1)},fogDensity:{type:"f",value:25e-5},fogNear:{type:"f",value:1},fogFar:{type:"f",value:2e3},fogColor:{type:"c",value:new THREE.Color(16777215)}},shadowmap:{shadowMap:{type:"tv",value:[]},shadowMapSize:{type:"v2v",value:[]},shadowBias:{type:"fv1",value:[]},shadowDarkness:{type:"fv1",value:[]},shadowMatrix:{type:"m4v",value:[]}}},THREE.ShaderLib={basic:{uniforms:THREE.UniformsUtils.merge([THREE.UniformsLib.common,THREE.UniformsLib.aomap,THREE.UniformsLib.fog,THREE.UniformsLib.shadowmap]),vertexShader:[THREE.ShaderChunk.common,THREE.ShaderChunk.uv_pars_vertex,THREE.ShaderChunk.uv2_pars_vertex,THREE.ShaderChunk.envmap_pars_vertex,THREE.ShaderChunk.color_pars_vertex,THREE.ShaderChunk.morphtarget_pars_vertex,THREE.ShaderChunk.skinning_pars_vertex,THREE.ShaderChunk.shadowmap_pars_vertex,THREE.ShaderChunk.logdepthbuf_pars_vertex,"void main() {",THREE.ShaderChunk.uv_vertex,THREE.ShaderChunk.uv2_vertex,THREE.ShaderChunk.color_vertex,THREE.ShaderChunk.skinbase_vertex,"\t#ifdef USE_ENVMAP",THREE.ShaderChunk.beginnormal_vertex,THREE.ShaderChunk.morphnormal_vertex,THREE.ShaderChunk.skinnormal_vertex,THREE.ShaderChunk.defaultnormal_vertex,"\t#endif",THREE.ShaderChunk.begin_vertex,THREE.ShaderChunk.morphtarget_vertex,THREE.ShaderChunk.skinning_vertex,THREE.ShaderChunk.project_vertex,THREE.ShaderChunk.logdepthbuf_vertex,THREE.ShaderChunk.worldpos_vertex,THREE.ShaderChunk.envmap_vertex,THREE.ShaderChunk.shadowmap_vertex,"}"].join("\n"),fragmentShader:["uniform vec3 diffuse;","uniform float opacity;",THREE.ShaderChunk.common,THREE.ShaderChunk.color_pars_fragment,THREE.ShaderChunk.uv_pars_fragment,THREE.ShaderChunk.uv2_pars_fragment,THREE.ShaderChunk.map_pars_fragment,THREE.ShaderChunk.alphamap_pars_fragment,THREE.ShaderChunk.aomap_pars_fragment,THREE.ShaderChunk.envmap_pars_fragment,THREE.ShaderChunk.fog_pars_fragment,THREE.ShaderChunk.shadowmap_pars_fragment,THREE.ShaderChunk.specularmap_pars_fragment,THREE.ShaderChunk.logdepthbuf_pars_fragment,"void main() {","\tvec3 outgoingLight = vec3( 0.0 );","\tvec4 diffuseColor = vec4( diffuse, opacity );","\tvec3 totalAmbientLight = vec3( 1.0 );","\tvec3 shadowMask = vec3( 1.0 );",THREE.ShaderChunk.logdepthbuf_fragment,THREE.ShaderChunk.map_fragment,THREE.ShaderChunk.color_fragment,THREE.ShaderChunk.alphamap_fragment,THREE.ShaderChunk.alphatest_fragment,THREE.ShaderChunk.specularmap_fragment,THREE.ShaderChunk.aomap_fragment,THREE.ShaderChunk.shadowmap_fragment,"\toutgoingLight = diffuseColor.rgb * totalAmbientLight * shadowMask;",THREE.ShaderChunk.envmap_fragment,THREE.ShaderChunk.linear_to_gamma_fragment,THREE.ShaderChunk.fog_fragment,"\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );","}"].join("\n")},lambert:{uniforms:THREE.UniformsUtils.merge([THREE.UniformsLib.common,THREE.UniformsLib.fog,THREE.UniformsLib.lights,THREE.UniformsLib.shadowmap,{emissive:{type:"c",value:new THREE.Color(0)}}]),vertexShader:["#define LAMBERT","varying vec3 vLightFront;","#ifdef DOUBLE_SIDED","\tvarying vec3 vLightBack;","#endif",THREE.ShaderChunk.common,THREE.ShaderChunk.uv_pars_vertex,THREE.ShaderChunk.uv2_pars_vertex,THREE.ShaderChunk.envmap_pars_vertex,THREE.ShaderChunk.lights_lambert_pars_vertex,THREE.ShaderChunk.color_pars_vertex,THREE.ShaderChunk.morphtarget_pars_vertex,THREE.ShaderChunk.skinning_pars_vertex,THREE.ShaderChunk.shadowmap_pars_vertex,THREE.ShaderChunk.logdepthbuf_pars_vertex,"void main() {",THREE.ShaderChunk.uv_vertex,THREE.ShaderChunk.uv2_vertex,THREE.ShaderChunk.color_vertex,THREE.ShaderChunk.beginnormal_vertex,THREE.ShaderChunk.morphnormal_vertex,THREE.ShaderChunk.skinbase_vertex,THREE.ShaderChunk.skinnormal_vertex,THREE.ShaderChunk.defaultnormal_vertex,THREE.ShaderChunk.begin_vertex,THREE.ShaderChunk.morphtarget_vertex,THREE.ShaderChunk.skinning_vertex,THREE.ShaderChunk.project_vertex,THREE.ShaderChunk.logdepthbuf_vertex,THREE.ShaderChunk.worldpos_vertex,THREE.ShaderChunk.envmap_vertex,THREE.ShaderChunk.lights_lambert_vertex,THREE.ShaderChunk.shadowmap_vertex,"}"].join("\n"),fragmentShader:["uniform vec3 diffuse;","uniform vec3 emissive;","uniform float opacity;","uniform vec3 ambientLightColor;","varying vec3 vLightFront;","#ifdef DOUBLE_SIDED","\tvarying vec3 vLightBack;","#endif",THREE.ShaderChunk.common,THREE.ShaderChunk.color_pars_fragment,THREE.ShaderChunk.uv_pars_fragment,THREE.ShaderChunk.uv2_pars_fragment,THREE.ShaderChunk.map_pars_fragment,THREE.ShaderChunk.alphamap_pars_fragment,THREE.ShaderChunk.envmap_pars_fragment,THREE.ShaderChunk.fog_pars_fragment,THREE.ShaderChunk.shadowmap_pars_fragment,THREE.ShaderChunk.specularmap_pars_fragment,THREE.ShaderChunk.logdepthbuf_pars_fragment,"void main() {","\tvec3 outgoingLight = vec3( 0.0 );","\tvec4 diffuseColor = vec4( diffuse, opacity );","\tvec3 totalAmbientLight = ambientLightColor;","\tvec3 shadowMask = vec3( 1.0 );",THREE.ShaderChunk.logdepthbuf_fragment,THREE.ShaderChunk.map_fragment,THREE.ShaderChunk.color_fragment,THREE.ShaderChunk.alphamap_fragment,THREE.ShaderChunk.alphatest_fragment,THREE.ShaderChunk.specularmap_fragment,THREE.ShaderChunk.shadowmap_fragment,"\t#ifdef DOUBLE_SIDED","\t\tif ( gl_FrontFacing )","\t\t\toutgoingLight += diffuseColor.rgb * ( vLightFront * shadowMask + totalAmbientLight ) + emissive;","\t\telse","\t\t\toutgoingLight += diffuseColor.rgb * ( vLightBack * shadowMask + totalAmbientLight ) + emissive;","\t#else","\t\toutgoingLight += diffuseColor.rgb * ( vLightFront * shadowMask + totalAmbientLight ) + emissive;","\t#endif",THREE.ShaderChunk.envmap_fragment,THREE.ShaderChunk.linear_to_gamma_fragment,THREE.ShaderChunk.fog_fragment,"\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );","}"].join("\n")},phong:{uniforms:THREE.UniformsUtils.merge([THREE.UniformsLib.common,THREE.UniformsLib.aomap,THREE.UniformsLib.lightmap,THREE.UniformsLib.emissivemap,THREE.UniformsLib.bumpmap,THREE.UniformsLib.normalmap,THREE.UniformsLib.displacementmap,THREE.UniformsLib.fog,THREE.UniformsLib.lights,THREE.UniformsLib.shadowmap,{emissive:{type:"c",value:new THREE.Color(0)},specular:{type:"c",value:new THREE.Color(1118481)},shininess:{type:"f",value:30}}]),vertexShader:["#define PHONG","varying vec3 vViewPosition;","#ifndef FLAT_SHADED","\tvarying vec3 vNormal;","#endif",THREE.ShaderChunk.common,THREE.ShaderChunk.uv_pars_vertex,THREE.ShaderChunk.uv2_pars_vertex,THREE.ShaderChunk.displacementmap_pars_vertex,THREE.ShaderChunk.envmap_pars_vertex,THREE.ShaderChunk.lights_phong_pars_vertex,THREE.ShaderChunk.color_pars_vertex,THREE.ShaderChunk.morphtarget_pars_vertex,THREE.ShaderChunk.skinning_pars_vertex,THREE.ShaderChunk.shadowmap_pars_vertex,THREE.ShaderChunk.logdepthbuf_pars_vertex,"void main() {",THREE.ShaderChunk.uv_vertex,THREE.ShaderChunk.uv2_vertex,THREE.ShaderChunk.color_vertex,THREE.ShaderChunk.beginnormal_vertex,THREE.ShaderChunk.morphnormal_vertex,THREE.ShaderChunk.skinbase_vertex,THREE.ShaderChunk.skinnormal_vertex,THREE.ShaderChunk.defaultnormal_vertex,"#ifndef FLAT_SHADED","\tvNormal = normalize( transformedNormal );","#endif",THREE.ShaderChunk.begin_vertex,THREE.ShaderChunk.displacementmap_vertex,THREE.ShaderChunk.morphtarget_vertex,THREE.ShaderChunk.skinning_vertex,THREE.ShaderChunk.project_vertex,THREE.ShaderChunk.logdepthbuf_vertex,"\tvViewPosition = - mvPosition.xyz;",THREE.ShaderChunk.worldpos_vertex,THREE.ShaderChunk.envmap_vertex,THREE.ShaderChunk.lights_phong_vertex,THREE.ShaderChunk.shadowmap_vertex,"}"].join("\n"),fragmentShader:["#define PHONG","uniform vec3 diffuse;","uniform vec3 emissive;","uniform vec3 specular;","uniform float shininess;","uniform float opacity;",THREE.ShaderChunk.common,THREE.ShaderChunk.color_pars_fragment,THREE.ShaderChunk.uv_pars_fragment,THREE.ShaderChunk.uv2_pars_fragment,THREE.ShaderChunk.map_pars_fragment,THREE.ShaderChunk.alphamap_pars_fragment,THREE.ShaderChunk.aomap_pars_fragment,THREE.ShaderChunk.lightmap_pars_fragment,THREE.ShaderChunk.emissivemap_pars_fragment,THREE.ShaderChunk.envmap_pars_fragment,THREE.ShaderChunk.fog_pars_fragment,THREE.ShaderChunk.lights_phong_pars_fragment,THREE.ShaderChunk.shadowmap_pars_fragment,THREE.ShaderChunk.bumpmap_pars_fragment,THREE.ShaderChunk.normalmap_pars_fragment,THREE.ShaderChunk.specularmap_pars_fragment,THREE.ShaderChunk.logdepthbuf_pars_fragment,"void main() {","\tvec3 outgoingLight = vec3( 0.0 );","\tvec4 diffuseColor = vec4( diffuse, opacity );","\tvec3 totalAmbientLight = ambientLightColor;","\tvec3 totalEmissiveLight = emissive;","\tvec3 shadowMask = vec3( 1.0 );",THREE.ShaderChunk.logdepthbuf_fragment,THREE.ShaderChunk.map_fragment,THREE.ShaderChunk.color_fragment,THREE.ShaderChunk.alphamap_fragment,THREE.ShaderChunk.alphatest_fragment,THREE.ShaderChunk.specularmap_fragment,THREE.ShaderChunk.normal_phong_fragment,THREE.ShaderChunk.lightmap_fragment,THREE.ShaderChunk.hemilight_fragment,THREE.ShaderChunk.aomap_fragment,THREE.ShaderChunk.emissivemap_fragment,THREE.ShaderChunk.lights_phong_fragment,THREE.ShaderChunk.shadowmap_fragment,"totalDiffuseLight *= shadowMask;","totalSpecularLight *= shadowMask;","#ifdef METAL","\toutgoingLight += diffuseColor.rgb * ( totalDiffuseLight + totalAmbientLight ) * specular + totalSpecularLight + totalEmissiveLight;","#else","\toutgoingLight += diffuseColor.rgb * ( totalDiffuseLight + totalAmbientLight ) + totalSpecularLight + totalEmissiveLight;","#endif",THREE.ShaderChunk.envmap_fragment,THREE.ShaderChunk.linear_to_gamma_fragment,THREE.ShaderChunk.fog_fragment,"\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );","}"].join("\n")},points:{uniforms:THREE.UniformsUtils.merge([THREE.UniformsLib.points,THREE.UniformsLib.shadowmap]),vertexShader:["uniform float size;","uniform float scale;",THREE.ShaderChunk.common,THREE.ShaderChunk.color_pars_vertex,THREE.ShaderChunk.shadowmap_pars_vertex,THREE.ShaderChunk.logdepthbuf_pars_vertex,"void main() {",THREE.ShaderChunk.color_vertex,"\tvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );","\t#ifdef USE_SIZEATTENUATION","\t\tgl_PointSize = size * ( scale / length( mvPosition.xyz ) );","\t#else","\t\tgl_PointSize = size;","\t#endif","\tgl_Position = projectionMatrix * mvPosition;",THREE.ShaderChunk.logdepthbuf_vertex,THREE.ShaderChunk.worldpos_vertex,THREE.ShaderChunk.shadowmap_vertex,"}"].join("\n"),fragmentShader:["uniform vec3 psColor;","uniform float opacity;",THREE.ShaderChunk.common,THREE.ShaderChunk.color_pars_fragment,THREE.ShaderChunk.map_particle_pars_fragment,THREE.ShaderChunk.fog_pars_fragment,THREE.ShaderChunk.shadowmap_pars_fragment,THREE.ShaderChunk.logdepthbuf_pars_fragment,"void main() {","\tvec3 outgoingLight = vec3( 0.0 );","\tvec4 diffuseColor = vec4( psColor, opacity );","\tvec3 shadowMask = vec3( 1.0 );",THREE.ShaderChunk.logdepthbuf_fragment,THREE.ShaderChunk.map_particle_fragment,THREE.ShaderChunk.color_fragment,THREE.ShaderChunk.alphatest_fragment,THREE.ShaderChunk.shadowmap_fragment,"\toutgoingLight = diffuseColor.rgb * shadowMask;",THREE.ShaderChunk.fog_fragment,"\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );","}"].join("\n")},dashed:{uniforms:THREE.UniformsUtils.merge([THREE.UniformsLib.common,THREE.UniformsLib.fog,{scale:{type:"f",value:1},dashSize:{type:"f",value:1},totalSize:{type:"f",value:2}}]),vertexShader:["uniform float scale;","attribute float lineDistance;","varying float vLineDistance;",THREE.ShaderChunk.common,THREE.ShaderChunk.color_pars_vertex,THREE.ShaderChunk.logdepthbuf_pars_vertex,"void main() {",THREE.ShaderChunk.color_vertex,"\tvLineDistance = scale * lineDistance;","\tvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );","\tgl_Position = projectionMatrix * mvPosition;",THREE.ShaderChunk.logdepthbuf_vertex,"}"].join("\n"),fragmentShader:["uniform vec3 diffuse;","uniform float opacity;","uniform float dashSize;","uniform float totalSize;","varying float vLineDistance;",THREE.ShaderChunk.common,THREE.ShaderChunk.color_pars_fragment,THREE.ShaderChunk.fog_pars_fragment,THREE.ShaderChunk.logdepthbuf_pars_fragment,"void main() {","\tif ( mod( vLineDistance, totalSize ) > dashSize ) {","\t\tdiscard;","\t}","\tvec3 outgoingLight = vec3( 0.0 );","\tvec4 diffuseColor = vec4( diffuse, opacity );",THREE.ShaderChunk.logdepthbuf_fragment,THREE.ShaderChunk.color_fragment,"\toutgoingLight = diffuseColor.rgb;",THREE.ShaderChunk.fog_fragment,"\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );","}"].join("\n")},depth:{uniforms:{mNear:{type:"f",value:1},mFar:{type:"f",value:2e3},opacity:{type:"f",value:1}},vertexShader:[THREE.ShaderChunk.common,THREE.ShaderChunk.morphtarget_pars_vertex,THREE.ShaderChunk.logdepthbuf_pars_vertex,"void main() {",THREE.ShaderChunk.begin_vertex,THREE.ShaderChunk.morphtarget_vertex,THREE.ShaderChunk.project_vertex,THREE.ShaderChunk.logdepthbuf_vertex,"}"].join("\n"),fragmentShader:["uniform float mNear;","uniform float mFar;","uniform float opacity;",THREE.ShaderChunk.common,THREE.ShaderChunk.logdepthbuf_pars_fragment,"void main() {",THREE.ShaderChunk.logdepthbuf_fragment,"\t#ifdef USE_LOGDEPTHBUF_EXT","\t\tfloat depth = gl_FragDepthEXT / gl_FragCoord.w;","\t#else","\t\tfloat depth = gl_FragCoord.z / gl_FragCoord.w;","\t#endif","\tfloat color = 1.0 - smoothstep( mNear, mFar, depth );","\tgl_FragColor = vec4( vec3( color ), opacity );","}"].join("\n")},normal:{uniforms:{opacity:{type:"f",value:1}},vertexShader:["varying vec3 vNormal;",THREE.ShaderChunk.common,THREE.ShaderChunk.morphtarget_pars_vertex,THREE.ShaderChunk.logdepthbuf_pars_vertex,"void main() {","\tvNormal = normalize( normalMatrix * normal );",THREE.ShaderChunk.begin_vertex,THREE.ShaderChunk.morphtarget_vertex,THREE.ShaderChunk.project_vertex,THREE.ShaderChunk.logdepthbuf_vertex,"}"].join("\n"),fragmentShader:["uniform float opacity;","varying vec3 vNormal;",THREE.ShaderChunk.common,THREE.ShaderChunk.logdepthbuf_pars_fragment,"void main() {","\tgl_FragColor = vec4( 0.5 * normalize( vNormal ) + 0.5, opacity );",THREE.ShaderChunk.logdepthbuf_fragment,"}"].join("\n")},cube:{uniforms:{tCube:{type:"t",value:null},tFlip:{type:"f",value:-1}},vertexShader:["varying vec3 vWorldPosition;",THREE.ShaderChunk.common,THREE.ShaderChunk.logdepthbuf_pars_vertex,"void main() {","\tvWorldPosition = transformDirection( position, modelMatrix );","\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );",THREE.ShaderChunk.logdepthbuf_vertex,"}"].join("\n"),fragmentShader:["uniform samplerCube tCube;","uniform float tFlip;","varying vec3 vWorldPosition;",THREE.ShaderChunk.common,THREE.ShaderChunk.logdepthbuf_pars_fragment,"void main() {","\tgl_FragColor = textureCube( tCube, vec3( tFlip * vWorldPosition.x, vWorldPosition.yz ) );",THREE.ShaderChunk.logdepthbuf_fragment,"}"].join("\n")},equirect:{uniforms:{tEquirect:{type:"t",value:null},tFlip:{type:"f",value:-1}},vertexShader:["varying vec3 vWorldPosition;",THREE.ShaderChunk.common,THREE.ShaderChunk.logdepthbuf_pars_vertex,"void main() {","\tvWorldPosition = transformDirection( position, modelMatrix );","\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );",THREE.ShaderChunk.logdepthbuf_vertex,"}"].join("\n"),fragmentShader:["uniform sampler2D tEquirect;","uniform float tFlip;","varying vec3 vWorldPosition;",THREE.ShaderChunk.common,THREE.ShaderChunk.logdepthbuf_pars_fragment,"void main() {","vec3 direction = normalize( vWorldPosition );","vec2 sampleUV;","sampleUV.y = saturate( tFlip * direction.y * -0.5 + 0.5 );","sampleUV.x = atan( direction.z, direction.x ) * RECIPROCAL_PI2 + 0.5;","gl_FragColor = texture2D( tEquirect, sampleUV );",THREE.ShaderChunk.logdepthbuf_fragment,"}"].join("\n")},depthRGBA:{uniforms:{},vertexShader:[THREE.ShaderChunk.common,THREE.ShaderChunk.morphtarget_pars_vertex,THREE.ShaderChunk.skinning_pars_vertex,THREE.ShaderChunk.logdepthbuf_pars_vertex,"void main() {",THREE.ShaderChunk.skinbase_vertex,THREE.ShaderChunk.begin_vertex,THREE.ShaderChunk.morphtarget_vertex,THREE.ShaderChunk.skinning_vertex,THREE.ShaderChunk.project_vertex,THREE.ShaderChunk.logdepthbuf_vertex,"}"].join("\n"),fragmentShader:[THREE.ShaderChunk.common,THREE.ShaderChunk.logdepthbuf_pars_fragment,"vec4 pack_depth( const in float depth ) {","\tconst vec4 bit_shift = vec4( 256.0 * 256.0 * 256.0, 256.0 * 256.0, 256.0, 1.0 );","\tconst vec4 bit_mask = vec4( 0.0, 1.0 / 256.0, 1.0 / 256.0, 1.0 / 256.0 );","\tvec4 res = mod( depth * bit_shift * vec4( 255 ), vec4( 256 ) ) / vec4( 255 );","\tres -= res.xxyz * bit_mask;","\treturn res;","}","void main() {",THREE.ShaderChunk.logdepthbuf_fragment,"\t#ifdef USE_LOGDEPTHBUF_EXT","\t\tgl_FragData[ 0 ] = pack_depth( gl_FragDepthEXT );","\t#else","\t\tgl_FragData[ 0 ] = pack_depth( gl_FragCoord.z );","\t#endif","}"].join("\n")},distanceRGBA:{uniforms:{lightPos:{type:"v3",value:new THREE.Vector3(0,0,0)}},vertexShader:["varying vec4 vWorldPosition;",THREE.ShaderChunk.common,THREE.ShaderChunk.morphtarget_pars_vertex,THREE.ShaderChunk.skinning_pars_vertex,"void main() {",THREE.ShaderChunk.skinbase_vertex,THREE.ShaderChunk.begin_vertex,THREE.ShaderChunk.morphtarget_vertex,THREE.ShaderChunk.skinning_vertex,THREE.ShaderChunk.project_vertex,THREE.ShaderChunk.worldpos_vertex,"vWorldPosition = worldPosition;","}"].join("\n"),fragmentShader:["uniform vec3 lightPos;","varying vec4 vWorldPosition;",THREE.ShaderChunk.common,"vec4 pack1K ( float depth ) {","   depth /= 1000.0;","   const vec4 bitSh = vec4( 256.0 * 256.0 * 256.0, 256.0 * 256.0, 256.0, 1.0 );","\tconst vec4 bitMsk = vec4( 0.0, 1.0 / 256.0, 1.0 / 256.0, 1.0 / 256.0 );","\tvec4 res = fract( depth * bitSh );","\tres -= res.xxyz * bitMsk;","\treturn res; ","}","float unpack1K ( vec4 color ) {","\tconst vec4 bitSh = vec4( 1.0 / ( 256.0 * 256.0 * 256.0 ), 1.0 / ( 256.0 * 256.0 ), 1.0 / 256.0, 1.0 );","\treturn dot( color, bitSh ) * 1000.0;","}","void main () {","\tgl_FragColor = pack1K( length( vWorldPosition.xyz - lightPos.xyz ) );","}"].join("\n")}},THREE.WebGLRenderer=function(t){console.log("%cTHREE.REVISION","color: #ccff00;",THREE.REVISION);var e=void 0!==(t=t||{}).canvas?t.canvas:document.createElement("canvas"),r=void 0!==t.context?t.context:null,i=e.width,n=e.height,o=1,a=void 0!==t.alpha&&t.alpha,s=void 0===t.depth||t.depth,h=void 0===t.stencil||t.stencil,c=void 0!==t.antialias&&t.antialias,u=void 0===t.premultipliedAlpha||t.premultipliedAlpha,l=void 0!==t.preserveDrawingBuffer&&t.preserveDrawingBuffer,E=new THREE.Color(0),p=0,d=[],f=[],m=-1,T=[],g=-1,v=new Float32Array(8),y=[],R=[];this.domElement=e,this.context=null,this.autoClear=!0,this.autoClearColor=!0,this.autoClearDepth=!0,this.autoClearStencil=!0,this.sortObjects=!0,this.gammaFactor=2,this.gammaInput=!1,this.gammaOutput=!1,this.maxMorphTargets=8,this.maxMorphNormals=4,this.autoScaleCubemaps=!0;var H,x=this,b=null,w=null,M=-1,S="",_=null,A=0,C=0,L=0,P=e.width,D=e.height,k=0,V=0,F=new THREE.Frustum,U=new THREE.Matrix4,B=new THREE.Vector3,O=new THREE.Vector3,G=!0,N={ambient:[0,0,0],directional:{length:0,colors:[],positions:[]},point:{length:0,colors:[],positions:[],distances:[],decays:[]},spot:{length:0,colors:[],positions:[],distances:[],directions:[],anglesCos:[],exponents:[],decays:[]},hemi:{length:0,skyColors:[],groundColors:[],positions:[]}},I={geometries:0,textures:0},z={calls:0,vertices:0,faces:0,points:0};this.info={render:z,memory:I,programs:null};try{var W={alpha:a,depth:s,stencil:h,antialias:c,premultipliedAlpha:u,preserveDrawingBuffer:l};if(null===(H=r||e.getContext("webgl",W)||e.getContext("experimental-webgl",W)))throw null!==e.getContext("webgl")?"Error creating WebGL context with your selected attributes.":"Error creating WebGL context.";e.addEventListener("webglcontextlost",at,!1)}catch(t){console.error("THREE.WebGLRenderer: "+t)}var j=new THREE.WebGLExtensions(H);j.get("OES_texture_float"),j.get("OES_texture_float_linear"),j.get("OES_texture_half_float"),j.get("OES_texture_half_float_linear"),j.get("OES_standard_derivatives"),j.get("ANGLE_instanced_arrays"),j.get("OES_element_index_uint")&&(THREE.BufferGeometry.MaxIndex=4294967296);var X=new THREE.WebGLCapabilities(H,j,t),q=new THREE.WebGLState(H,j,Pt),Y=new THREE.WebGLProperties,K=new THREE.WebGLObjects(H,Y,this.info),Q=new THREE.WebGLPrograms(this,X);this.info.programs=Q.programs;var Z=new THREE.WebGLBufferRenderer(H,j,z),J=new THREE.WebGLIndexedBufferRenderer(H,j,z);function $(t,e,r,i){!0===u&&(t*=i,e*=i,r*=i),H.clearColor(t,e,r,i)}function tt(){q.init(),H.viewport(C,L,P,D),$(E.r,E.g,E.b,p)}function et(){b=null,_=null,S="",M=-1,G=!0,q.reset()}tt(),this.context=H,this.capabilities=X,this.extensions=j,this.state=q;var rt=new THREE.WebGLShadowMap(this,d,K);this.shadowMap=rt;var it,nt=new THREE.SpritePlugin(this,y),ot=new THREE.LensFlarePlugin(this,R);function at(t){t.preventDefault(),et(),tt(),Y.clear()}function st(t){var e=t.target;e.removeEventListener("dispose",st),function(t){var e=Y.get(t);if(t.image&&e.__image__webglTextureCube)H.deleteTexture(e.__image__webglTextureCube);else{if(void 0===e.__webglInit)return;H.deleteTexture(e.__webglTexture)}Y.delete(t)}(e),I.textures--}function ht(t){var e=t.target;e.removeEventListener("dispose",ht),function(t){var e=Y.get(t),r=Y.get(t.texture);if(!t||void 0===r.__webglTexture)return;if(H.deleteTexture(r.__webglTexture),t instanceof THREE.WebGLRenderTargetCube)for(var i=0;i<6;i++)H.deleteFramebuffer(e.__webglFramebuffer[i]),H.deleteRenderbuffer(e.__webglRenderbuffer[i]);else H.deleteFramebuffer(e.__webglFramebuffer),H.deleteRenderbuffer(e.__webglRenderbuffer);Y.delete(t.texture),Y.delete(t)}(e),I.textures--}function ct(t){var e=t.target;e.removeEventListener("dispose",ct),function(t){ut(t),Y.delete(t)}(e)}function ut(t){var e=Y.get(t).program;t.program=void 0,void 0!==e&&Q.releaseProgram(e)}function lt(t,e){return e[0]-t[0]}function Et(t,e){return t.object.renderOrder!==e.object.renderOrder?t.object.renderOrder-e.object.renderOrder:t.material.id!==e.material.id?t.material.id-e.material.id:t.z!==e.z?t.z-e.z:t.id-e.id}function pt(t,e){return t.object.renderOrder!==e.object.renderOrder?t.object.renderOrder-e.object.renderOrder:t.z!==e.z?e.z-t.z:t.id-e.id}function dt(t,e,r,i,n){var o,a;r.transparent?(o=T,a=++g):(o=f,a=++m);var s=o[a];void 0!==s?(s.id=t.id,s.object=t,s.geometry=e,s.material=r,s.z=B.z,s.group=n):(s={id:t.id,object:t,geometry:e,material:r,z:B.z,group:n},o.push(s))}function ft(t,e){if(!1!==t.visible){if(0!=(t.channels.mask&e.channels.mask))if(t instanceof THREE.Light)d.push(t);else if(t instanceof THREE.Sprite)y.push(t);else if(t instanceof THREE.LensFlare)R.push(t);else if(t instanceof THREE.ImmediateRenderObject)!0===x.sortObjects&&(B.setFromMatrixPosition(t.matrixWorld),B.applyProjection(U)),dt(t,null,t.material,B.z,null);else if((t instanceof THREE.Mesh||t instanceof THREE.Line||t instanceof THREE.Points)&&(t instanceof THREE.SkinnedMesh&&t.skeleton.update(),!1===t.frustumCulled||!0===F.intersectsObject(t))){var r=t.material;if(!0===r.visible){!0===x.sortObjects&&(B.setFromMatrixPosition(t.matrixWorld),B.applyProjection(U));var i=K.update(t);if(r instanceof THREE.MeshFaceMaterial)for(var n=i.groups,o=r.materials,a=0,s=n.length;a<s;a++){var h=n[a],c=o[h.materialIndex];!0===c.visible&&dt(t,i,c,B.z,h)}else dt(t,i,r,B.z,null)}}var u=t.children;for(a=0,s=u.length;a<s;a++)ft(u[a],e)}}function mt(t,e,r,i,n){for(var o=0,a=t.length;o<a;o++){var s=t[o],h=s.object,c=s.geometry,u=void 0===n?s.material:n,l=s.group;if(h.modelViewMatrix.multiplyMatrices(e.matrixWorldInverse,h.matrixWorld),h.normalMatrix.getNormalMatrix(h.modelViewMatrix),h instanceof THREE.ImmediateRenderObject){Tt(u);var E=gt(e,r,i,u,h);S="",h.render((function(t){x.renderBufferImmediate(t,E,u)}))}else x.renderBufferDirect(e,r,i,c,u,h,l)}}function Tt(t){!function(t){t.side!==THREE.DoubleSide?q.enable(H.CULL_FACE):q.disable(H.CULL_FACE),q.setFlipSided(t.side===THREE.BackSide)}(t),!0===t.transparent?q.setBlending(t.blending,t.blendEquation,t.blendSrc,t.blendDst,t.blendEquationAlpha,t.blendSrcAlpha,t.blendDstAlpha):q.setBlending(THREE.NoBlending),q.setDepthFunc(t.depthFunc),q.setDepthTest(t.depthTest),q.setDepthWrite(t.depthWrite),q.setColorWrite(t.colorWrite),q.setPolygonOffset(t.polygonOffset,t.polygonOffsetFactor,t.polygonOffsetUnits)}function gt(t,r,i,n,o){A=0;var a=Y.get(n);!n.needsUpdate&&a.program||(!function(t,e,r,i){var n=Y.get(t),o=Q.getParameters(t,e,r,i),a=Q.getProgramCode(t,o),s=n.program,h=!0;if(void 0===s)t.addEventListener("dispose",ct);else if(s.code!==a)ut(t);else{if(void 0!==o.shaderID)return;h=!1}if(h){if(o.shaderID){var c=THREE.ShaderLib[o.shaderID];n.__webglShader={name:t.type,uniforms:THREE.UniformsUtils.clone(c.uniforms),vertexShader:c.vertexShader,fragmentShader:c.fragmentShader}}else n.__webglShader={name:t.type,uniforms:t.uniforms,vertexShader:t.vertexShader,fragmentShader:t.fragmentShader};t.__webglShader=n.__webglShader,s=Q.acquireProgram(t,o,a),n.program=s,t.program=s}var u=s.getAttributes();if(t.morphTargets){t.numSupportedMorphTargets=0;for(var l=0;l<x.maxMorphTargets;l++)u["morphTarget"+l]>=0&&t.numSupportedMorphTargets++}if(t.morphNormals)for(t.numSupportedMorphNormals=0,l=0;l<x.maxMorphNormals;l++)u["morphNormal"+l]>=0&&t.numSupportedMorphNormals++;n.uniformsList=[];var E=n.program.getUniforms();for(var p in n.__webglShader.uniforms){var d=E[p];d&&n.uniformsList.push([n.__webglShader.uniforms[p],d])}}(n,r,i,o),n.needsUpdate=!1);var s=!1,h=!1,c=!1,u=a.program,l=u.getUniforms(),E=a.__webglShader.uniforms;if(u.id!==b&&(H.useProgram(u.program),b=u.id,s=!0,h=!0,c=!0),n.id!==M&&(-1===M&&(c=!0),M=n.id,h=!0),(s||t!==_)&&(H.uniformMatrix4fv(l.projectionMatrix,!1,t.projectionMatrix.elements),X.logarithmicDepthBuffer&&H.uniform1f(l.logDepthBufFC,2/(Math.log(t.far+1)/Math.LN2)),t!==_&&(_=t),(n instanceof THREE.ShaderMaterial||n instanceof THREE.MeshPhongMaterial||n.envMap)&&void 0!==l.cameraPosition&&(B.setFromMatrixPosition(t.matrixWorld),H.uniform3f(l.cameraPosition,B.x,B.y,B.z)),(n instanceof THREE.MeshPhongMaterial||n instanceof THREE.MeshLambertMaterial||n instanceof THREE.MeshBasicMaterial||n instanceof THREE.ShaderMaterial||n.skinning)&&void 0!==l.viewMatrix&&H.uniformMatrix4fv(l.viewMatrix,!1,t.matrixWorldInverse.elements)),n.skinning)if(o.bindMatrix&&void 0!==l.bindMatrix&&H.uniformMatrix4fv(l.bindMatrix,!1,o.bindMatrix.elements),o.bindMatrixInverse&&void 0!==l.bindMatrixInverse&&H.uniformMatrix4fv(l.bindMatrixInverse,!1,o.bindMatrixInverse.elements),X.floatVertexTextures&&o.skeleton&&o.skeleton.useVertexTexture){if(void 0!==l.boneTexture){var p=Rt();H.uniform1i(l.boneTexture,p),x.setTexture(o.skeleton.boneTexture,p)}void 0!==l.boneTextureWidth&&H.uniform1i(l.boneTextureWidth,o.skeleton.boneTextureWidth),void 0!==l.boneTextureHeight&&H.uniform1i(l.boneTextureHeight,o.skeleton.boneTextureHeight)}else o.skeleton&&o.skeleton.boneMatrices&&void 0!==l.boneGlobalMatrices&&H.uniformMatrix4fv(l.boneGlobalMatrices,!1,o.skeleton.boneMatrices);return h&&(i&&n.fog&&function(t,e){t.fogColor.value=e.color,e instanceof THREE.Fog?(t.fogNear.value=e.near,t.fogFar.value=e.far):e instanceof THREE.FogExp2&&(t.fogDensity.value=e.density)}(E,i),(n instanceof THREE.MeshPhongMaterial||n instanceof THREE.MeshLambertMaterial||n.lights)&&(G&&(c=!0,function(t,e){var r,i,n,o,a,s,h,c,u=0,l=0,E=0,p=N,d=e.matrixWorldInverse,f=p.directional.colors,m=p.directional.positions,T=p.point.colors,g=p.point.positions,v=p.point.distances,y=p.point.decays,R=p.spot.colors,H=p.spot.positions,x=p.spot.distances,b=p.spot.directions,w=p.spot.anglesCos,M=p.spot.exponents,S=p.spot.decays,_=p.hemi.skyColors,A=p.hemi.groundColors,C=p.hemi.positions,L=0,P=0,D=0,k=0,V=0,F=0,U=0,G=0,I=0,z=0,W=0,j=0;for(r=0,i=t.length;r<i;r++)if(o=(n=t[r]).color,h=n.intensity,c=n.distance,n instanceof THREE.AmbientLight){if(!n.visible)continue;u+=o.r,l+=o.g,E+=o.b}else if(n instanceof THREE.DirectionalLight){if(V+=1,!n.visible)continue;O.setFromMatrixPosition(n.matrixWorld),B.setFromMatrixPosition(n.target.matrixWorld),O.sub(B),O.transformDirection(d),m[(I=3*L)+0]=O.x,m[I+1]=O.y,m[I+2]=O.z,Ht(f,I,o,h),L+=1}else if(n instanceof THREE.PointLight){if(F+=1,!n.visible)continue;Ht(T,z=3*P,o,h),B.setFromMatrixPosition(n.matrixWorld),B.applyMatrix4(d),g[z+0]=B.x,g[z+1]=B.y,g[z+2]=B.z,v[P]=c,y[P]=0===n.distance?0:n.decay,P+=1}else if(n instanceof THREE.SpotLight){if(U+=1,!n.visible)continue;Ht(R,W=3*D,o,h),O.setFromMatrixPosition(n.matrixWorld),B.copy(O).applyMatrix4(d),H[W+0]=B.x,H[W+1]=B.y,H[W+2]=B.z,x[D]=c,B.setFromMatrixPosition(n.target.matrixWorld),O.sub(B),O.transformDirection(d),b[W+0]=O.x,b[W+1]=O.y,b[W+2]=O.z,w[D]=Math.cos(n.angle),M[D]=n.exponent,S[D]=0===n.distance?0:n.decay,D+=1}else if(n instanceof THREE.HemisphereLight){if(G+=1,!n.visible)continue;O.setFromMatrixPosition(n.matrixWorld),O.transformDirection(d),C[(j=3*k)+0]=O.x,C[j+1]=O.y,C[j+2]=O.z,a=n.color,s=n.groundColor,Ht(_,j,a,h),Ht(A,j,s,h),k+=1}for(r=3*L,i=Math.max(f.length,3*V);r<i;r++)f[r]=0;for(r=3*P,i=Math.max(T.length,3*F);r<i;r++)T[r]=0;for(r=3*D,i=Math.max(R.length,3*U);r<i;r++)R[r]=0;for(r=3*k,i=Math.max(_.length,3*G);r<i;r++)_[r]=0;for(r=3*k,i=Math.max(A.length,3*G);r<i;r++)A[r]=0;p.directional.length=L,p.point.length=P,p.spot.length=D,p.hemi.length=k,p.ambient[0]=u,p.ambient[1]=l,p.ambient[2]=E}(r,t),G=!1),c?(!function(t,e){t.ambientLightColor.value=e.ambient,t.directionalLightColor.value=e.directional.colors,t.directionalLightDirection.value=e.directional.positions,t.pointLightColor.value=e.point.colors,t.pointLightPosition.value=e.point.positions,t.pointLightDistance.value=e.point.distances,t.pointLightDecay.value=e.point.decays,t.spotLightColor.value=e.spot.colors,t.spotLightPosition.value=e.spot.positions,t.spotLightDistance.value=e.spot.distances,t.spotLightDirection.value=e.spot.directions,t.spotLightAngleCos.value=e.spot.anglesCos,t.spotLightExponent.value=e.spot.exponents,t.spotLightDecay.value=e.spot.decays,t.hemisphereLightSkyColor.value=e.hemi.skyColors,t.hemisphereLightGroundColor.value=e.hemi.groundColors,t.hemisphereLightDirection.value=e.hemi.positions}(E,N),yt(E,!0)):yt(E,!1)),(n instanceof THREE.MeshBasicMaterial||n instanceof THREE.MeshLambertMaterial||n instanceof THREE.MeshPhongMaterial)&&function(t,e){t.opacity.value=e.opacity,t.diffuse.value=e.color,e.emissive&&(t.emissive.value=e.emissive);t.map.value=e.map,t.specularMap.value=e.specularMap,t.alphaMap.value=e.alphaMap,e.aoMap&&(t.aoMap.value=e.aoMap,t.aoMapIntensity.value=e.aoMapIntensity);var r;e.map?r=e.map:e.specularMap?r=e.specularMap:e.displacementMap?r=e.displacementMap:e.normalMap?r=e.normalMap:e.bumpMap?r=e.bumpMap:e.alphaMap?r=e.alphaMap:e.emissiveMap&&(r=e.emissiveMap);if(void 0!==r){r instanceof THREE.WebGLRenderTarget&&(r=r.texture);var i=r.offset,n=r.repeat;t.offsetRepeat.value.set(i.x,i.y,n.x,n.y)}t.envMap.value=e.envMap,t.flipEnvMap.value=e.envMap instanceof THREE.WebGLRenderTargetCube?1:-1,t.reflectivity.value=e.reflectivity,t.refractionRatio.value=e.refractionRatio}(E,n),n instanceof THREE.LineBasicMaterial?vt(E,n):n instanceof THREE.LineDashedMaterial?(vt(E,n),function(t,e){t.dashSize.value=e.dashSize,t.totalSize.value=e.dashSize+e.gapSize,t.scale.value=e.scale}(E,n)):n instanceof THREE.PointsMaterial?function(t,r){if(t.psColor.value=r.color,t.opacity.value=r.opacity,t.size.value=r.size,t.scale.value=e.height/2,t.map.value=r.map,null!==r.map){var i=r.map.offset,n=r.map.repeat;t.offsetRepeat.value.set(i.x,i.y,n.x,n.y)}}(E,n):n instanceof THREE.MeshPhongMaterial?function(t,e){t.specular.value=e.specular,t.shininess.value=Math.max(e.shininess,1e-4),e.lightMap&&(t.lightMap.value=e.lightMap,t.lightMapIntensity.value=e.lightMapIntensity);e.emissiveMap&&(t.emissiveMap.value=e.emissiveMap);e.bumpMap&&(t.bumpMap.value=e.bumpMap,t.bumpScale.value=e.bumpScale);e.normalMap&&(t.normalMap.value=e.normalMap,t.normalScale.value.copy(e.normalScale));e.displacementMap&&(t.displacementMap.value=e.displacementMap,t.displacementScale.value=e.displacementScale,t.displacementBias.value=e.displacementBias)}(E,n):n instanceof THREE.MeshDepthMaterial?(E.mNear.value=t.near,E.mFar.value=t.far,E.opacity.value=n.opacity):n instanceof THREE.MeshNormalMaterial&&(E.opacity.value=n.opacity),o.receiveShadow&&!n._shadowPass&&function(t,e,r){if(t.shadowMatrix)for(var i=0,n=0,o=e.length;n<o;n++){var a=e[n];if(!0===a.castShadow&&(a instanceof THREE.PointLight||a instanceof THREE.SpotLight||a instanceof THREE.DirectionalLight)){var s=a.shadow;a instanceof THREE.PointLight?(B.setFromMatrixPosition(a.matrixWorld).negate(),s.matrix.identity().setPosition(B),t.shadowDarkness.value[i]=-s.darkness):t.shadowDarkness.value[i]=s.darkness,t.shadowMatrix.value[i]=s.matrix,t.shadowMap.value[i]=s.map,t.shadowMapSize.value[i]=s.mapSize,t.shadowBias.value[i]=s.bias,i++}}}(E,r),function(t){for(var e,r,i=0,n=t.length;i<n;i++){var o=t[i][0];if(!1!==o.needsUpdate){var a=o.type,s=o.value,h=t[i][1];switch(a){case"1i":case"i":H.uniform1i(h,s);break;case"1f":case"f":H.uniform1f(h,s);break;case"2f":H.uniform2f(h,s[0],s[1]);break;case"3f":H.uniform3f(h,s[0],s[1],s[2]);break;case"4f":H.uniform4f(h,s[0],s[1],s[2],s[3]);break;case"1iv":case"iv1":H.uniform1iv(h,s);break;case"3iv":case"iv":H.uniform3iv(h,s);break;case"1fv":case"fv1":H.uniform1fv(h,s);break;case"2fv":H.uniform2fv(h,s);break;case"3fv":case"fv":H.uniform3fv(h,s);break;case"4fv":H.uniform4fv(h,s);break;case"Matrix3fv":H.uniformMatrix3fv(h,!1,s);break;case"Matrix4fv":H.uniformMatrix4fv(h,!1,s);break;case"v2":H.uniform2f(h,s.x,s.y);break;case"v3":H.uniform3f(h,s.x,s.y,s.z);break;case"v4":H.uniform4f(h,s.x,s.y,s.z,s.w);break;case"c":H.uniform3f(h,s.r,s.g,s.b);break;case"v2v":void 0===o._array&&(o._array=new Float32Array(2*s.length));for(var c=0,u=0,l=s.length;c<l;c++,u+=2)o._array[u+0]=s[c].x,o._array[u+1]=s[c].y;H.uniform2fv(h,o._array);break;case"v3v":void 0===o._array&&(o._array=new Float32Array(3*s.length));c=0;var E=0;for(l=s.length;c<l;c++,E+=3)o._array[E+0]=s[c].x,o._array[E+1]=s[c].y,o._array[E+2]=s[c].z;H.uniform3fv(h,o._array);break;case"v4v":void 0===o._array&&(o._array=new Float32Array(4*s.length));c=0;var p=0;for(l=s.length;c<l;c++,p+=4)o._array[p+0]=s[c].x,o._array[p+1]=s[c].y,o._array[p+2]=s[c].z,o._array[p+3]=s[c].w;H.uniform4fv(h,o._array);break;case"m3":H.uniformMatrix3fv(h,!1,s.elements);break;case"m3v":void 0===o._array&&(o._array=new Float32Array(9*s.length));for(c=0,l=s.length;c<l;c++)s[c].flattenToArrayOffset(o._array,9*c);H.uniformMatrix3fv(h,!1,o._array);break;case"m4":H.uniformMatrix4fv(h,!1,s.elements);break;case"m4v":void 0===o._array&&(o._array=new Float32Array(16*s.length));for(c=0,l=s.length;c<l;c++)s[c].flattenToArrayOffset(o._array,16*c);H.uniformMatrix4fv(h,!1,o._array);break;case"t":if(e=s,r=Rt(),H.uniform1i(h,r),!e)continue;e instanceof THREE.CubeTexture||Array.isArray(e.image)&&6===e.image.length?St(e,r):e instanceof THREE.WebGLRenderTargetCube?_t(e.texture,r):e instanceof THREE.WebGLRenderTarget?x.setTexture(e.texture,r):x.setTexture(e,r);break;case"tv":void 0===o._array&&(o._array=[]);for(c=0,l=o.value.length;c<l;c++)o._array[c]=Rt();H.uniform1iv(h,o._array);for(c=0,l=o.value.length;c<l;c++)e=o.value[c],r=o._array[c],e&&(e instanceof THREE.CubeTexture||e.image instanceof Array&&6===e.image.length?St(e,r):e instanceof THREE.WebGLRenderTarget?x.setTexture(e.texture,r):e instanceof THREE.WebGLRenderTargetCube?_t(e.texture,r):x.setTexture(e,r));break;default:console.warn("THREE.WebGLRenderer: Unknown uniform type: "+a)}}}}(a.uniformsList)),function(t,e){H.uniformMatrix4fv(t.modelViewMatrix,!1,e.modelViewMatrix.elements),t.normalMatrix&&H.uniformMatrix3fv(t.normalMatrix,!1,e.normalMatrix.elements)}(l,o),void 0!==l.modelMatrix&&H.uniformMatrix4fv(l.modelMatrix,!1,o.matrixWorld.elements),u}function vt(t,e){t.diffuse.value=e.color,t.opacity.value=e.opacity}function yt(t,e){t.ambientLightColor.needsUpdate=e,t.directionalLightColor.needsUpdate=e,t.directionalLightDirection.needsUpdate=e,t.pointLightColor.needsUpdate=e,t.pointLightPosition.needsUpdate=e,t.pointLightDistance.needsUpdate=e,t.pointLightDecay.needsUpdate=e,t.spotLightColor.needsUpdate=e,t.spotLightPosition.needsUpdate=e,t.spotLightDistance.needsUpdate=e,t.spotLightDirection.needsUpdate=e,t.spotLightAngleCos.needsUpdate=e,t.spotLightExponent.needsUpdate=e,t.spotLightDecay.needsUpdate=e,t.hemisphereLightSkyColor.needsUpdate=e,t.hemisphereLightGroundColor.needsUpdate=e,t.hemisphereLightDirection.needsUpdate=e}function Rt(){var t=A;return t>=X.maxTextures&&console.warn("WebGLRenderer: trying to use "+t+" texture units while this GPU supports only "+X.maxTextures),A+=1,t}function Ht(t,e,r,i){t[e+0]=r.r*i,t[e+1]=r.g*i,t[e+2]=r.b*i}function xt(t,e,r){var i;if(r?(H.texParameteri(t,H.TEXTURE_WRAP_S,Pt(e.wrapS)),H.texParameteri(t,H.TEXTURE_WRAP_T,Pt(e.wrapT)),H.texParameteri(t,H.TEXTURE_MAG_FILTER,Pt(e.magFilter)),H.texParameteri(t,H.TEXTURE_MIN_FILTER,Pt(e.minFilter))):(H.texParameteri(t,H.TEXTURE_WRAP_S,H.CLAMP_TO_EDGE),H.texParameteri(t,H.TEXTURE_WRAP_T,H.CLAMP_TO_EDGE),e.wrapS===THREE.ClampToEdgeWrapping&&e.wrapT===THREE.ClampToEdgeWrapping||console.warn("THREE.WebGLRenderer: Texture is not power of two. Texture.wrapS and Texture.wrapT should be set to THREE.ClampToEdgeWrapping.",e),H.texParameteri(t,H.TEXTURE_MAG_FILTER,Lt(e.magFilter)),H.texParameteri(t,H.TEXTURE_MIN_FILTER,Lt(e.minFilter)),e.minFilter!==THREE.NearestFilter&&e.minFilter!==THREE.LinearFilter&&console.warn("THREE.WebGLRenderer: Texture is not power of two. Texture.minFilter should be set to THREE.NearestFilter or THREE.LinearFilter.",e)),i=j.get("EXT_texture_filter_anisotropic")){if(e.type===THREE.FloatType&&null===j.get("OES_texture_float_linear"))return;if(e.type===THREE.HalfFloatType&&null===j.get("OES_texture_half_float_linear"))return;(e.anisotropy>1||Y.get(e).__currentAnisotropy)&&(H.texParameterf(t,i.TEXTURE_MAX_ANISOTROPY_EXT,Math.min(e.anisotropy,x.getMaxAnisotropy())),Y.get(e).__currentAnisotropy=e.anisotropy)}}function bt(t,e,r){void 0===t.__webglInit&&(t.__webglInit=!0,e.addEventListener("dispose",st),t.__webglTexture=H.createTexture(),I.textures++),q.activeTexture(H.TEXTURE0+r),q.bindTexture(H.TEXTURE_2D,t.__webglTexture),H.pixelStorei(H.UNPACK_FLIP_Y_WEBGL,e.flipY),H.pixelStorei(H.UNPACK_PREMULTIPLY_ALPHA_WEBGL,e.premultiplyAlpha),H.pixelStorei(H.UNPACK_ALIGNMENT,e.unpackAlignment),e.image=wt(e.image,X.maxTextureSize),function(t){return t.wrapS!==THREE.ClampToEdgeWrapping||t.wrapT!==THREE.ClampToEdgeWrapping||t.minFilter!==THREE.NearestFilter&&t.minFilter!==THREE.LinearFilter}(e)&&!1===Mt(e.image)&&(e.image=function(t){if(t instanceof HTMLImageElement||t instanceof HTMLCanvasElement){var e=document.createElement("canvas");return e.width=THREE.Math.nearestPowerOfTwo(t.width),e.height=THREE.Math.nearestPowerOfTwo(t.height),e.getContext("2d").drawImage(t,0,0,e.width,e.height),console.warn("THREE.WebGLRenderer: image is not power of two ("+t.width+"x"+t.height+"). Resized to "+e.width+"x"+e.height,t),e}return t}(e.image));var i=e.image,n=Mt(i),o=Pt(e.format),a=Pt(e.type);xt(H.TEXTURE_2D,e,n);var s,h=e.mipmaps;if(e instanceof THREE.DataTexture)if(h.length>0&&n){for(var c=0,u=h.length;c<u;c++)s=h[c],q.texImage2D(H.TEXTURE_2D,c,o,s.width,s.height,0,o,a,s.data);e.generateMipmaps=!1}else q.texImage2D(H.TEXTURE_2D,0,o,i.width,i.height,0,o,a,i.data);else if(e instanceof THREE.CompressedTexture)for(c=0,u=h.length;c<u;c++)s=h[c],e.format!==THREE.RGBAFormat&&e.format!==THREE.RGBFormat?q.getCompressedTextureFormats().indexOf(o)>-1?q.compressedTexImage2D(H.TEXTURE_2D,c,o,s.width,s.height,0,s.data):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()"):q.texImage2D(H.TEXTURE_2D,c,o,s.width,s.height,0,o,a,s.data);else if(h.length>0&&n){for(c=0,u=h.length;c<u;c++)s=h[c],q.texImage2D(H.TEXTURE_2D,c,o,o,a,s);e.generateMipmaps=!1}else q.texImage2D(H.TEXTURE_2D,0,o,o,a,e.image);e.generateMipmaps&&n&&H.generateMipmap(H.TEXTURE_2D),t.__version=e.version,e.onUpdate&&e.onUpdate(e)}function wt(t,e){if(t.width>e||t.height>e){var r=e/Math.max(t.width,t.height),i=document.createElement("canvas");return i.width=Math.floor(t.width*r),i.height=Math.floor(t.height*r),i.getContext("2d").drawImage(t,0,0,t.width,t.height,0,0,i.width,i.height),console.warn("THREE.WebGLRenderer: image is too big ("+t.width+"x"+t.height+"). Resized to "+i.width+"x"+i.height,t),i}return t}function Mt(t){return THREE.Math.isPowerOfTwo(t.width)&&THREE.Math.isPowerOfTwo(t.height)}function St(t,e){var r=Y.get(t);if(6===t.image.length)if(t.version>0&&r.__version!==t.version){r.__image__webglTextureCube||(t.addEventListener("dispose",st),r.__image__webglTextureCube=H.createTexture(),I.textures++),q.activeTexture(H.TEXTURE0+e),q.bindTexture(H.TEXTURE_CUBE_MAP,r.__image__webglTextureCube),H.pixelStorei(H.UNPACK_FLIP_Y_WEBGL,t.flipY);for(var i=t instanceof THREE.CompressedTexture,n=t.image[0]instanceof THREE.DataTexture,o=[],a=0;a<6;a++)!x.autoScaleCubemaps||i||n?o[a]=n?t.image[a].image:t.image[a]:o[a]=wt(t.image[a],X.maxCubemapSize);var s=Mt(o[0]),h=Pt(t.format),c=Pt(t.type);xt(H.TEXTURE_CUBE_MAP,t,s);for(a=0;a<6;a++)if(i)for(var u,l=o[a].mipmaps,E=0,p=l.length;E<p;E++)u=l[E],t.format!==THREE.RGBAFormat&&t.format!==THREE.RGBFormat?q.getCompressedTextureFormats().indexOf(h)>-1?q.compressedTexImage2D(H.TEXTURE_CUBE_MAP_POSITIVE_X+a,E,h,u.width,u.height,0,u.data):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .setCubeTexture()"):q.texImage2D(H.TEXTURE_CUBE_MAP_POSITIVE_X+a,E,h,u.width,u.height,0,h,c,u.data);else n?q.texImage2D(H.TEXTURE_CUBE_MAP_POSITIVE_X+a,0,h,o[a].width,o[a].height,0,h,c,o[a].data):q.texImage2D(H.TEXTURE_CUBE_MAP_POSITIVE_X+a,0,h,h,c,o[a]);t.generateMipmaps&&s&&H.generateMipmap(H.TEXTURE_CUBE_MAP),r.__version=t.version,t.onUpdate&&t.onUpdate(t)}else q.activeTexture(H.TEXTURE0+e),q.bindTexture(H.TEXTURE_CUBE_MAP,r.__image__webglTextureCube)}function _t(t,e){q.activeTexture(H.TEXTURE0+e),q.bindTexture(H.TEXTURE_CUBE_MAP,Y.get(t).__webglTexture)}function At(t,e,r){H.bindFramebuffer(H.FRAMEBUFFER,t),H.framebufferTexture2D(H.FRAMEBUFFER,H.COLOR_ATTACHMENT0,r,Y.get(e.texture).__webglTexture,0)}function Ct(t,e){H.bindRenderbuffer(H.RENDERBUFFER,t),e.depthBuffer&&!e.stencilBuffer?(H.renderbufferStorage(H.RENDERBUFFER,H.DEPTH_COMPONENT16,e.width,e.height),H.framebufferRenderbuffer(H.FRAMEBUFFER,H.DEPTH_ATTACHMENT,H.RENDERBUFFER,t)):e.depthBuffer&&e.stencilBuffer?(H.renderbufferStorage(H.RENDERBUFFER,H.DEPTH_STENCIL,e.width,e.height),H.framebufferRenderbuffer(H.FRAMEBUFFER,H.DEPTH_STENCIL_ATTACHMENT,H.RENDERBUFFER,t)):H.renderbufferStorage(H.RENDERBUFFER,H.RGBA4,e.width,e.height)}function Lt(t){return t===THREE.NearestFilter||t===THREE.NearestMipMapNearestFilter||t===THREE.NearestMipMapLinearFilter?H.NEAREST:H.LINEAR}function Pt(t){var e;if(t===THREE.RepeatWrapping)return H.REPEAT;if(t===THREE.ClampToEdgeWrapping)return H.CLAMP_TO_EDGE;if(t===THREE.MirroredRepeatWrapping)return H.MIRRORED_REPEAT;if(t===THREE.NearestFilter)return H.NEAREST;if(t===THREE.NearestMipMapNearestFilter)return H.NEAREST_MIPMAP_NEAREST;if(t===THREE.NearestMipMapLinearFilter)return H.NEAREST_MIPMAP_LINEAR;if(t===THREE.LinearFilter)return H.LINEAR;if(t===THREE.LinearMipMapNearestFilter)return H.LINEAR_MIPMAP_NEAREST;if(t===THREE.LinearMipMapLinearFilter)return H.LINEAR_MIPMAP_LINEAR;if(t===THREE.UnsignedByteType)return H.UNSIGNED_BYTE;if(t===THREE.UnsignedShort4444Type)return H.UNSIGNED_SHORT_4_4_4_4;if(t===THREE.UnsignedShort5551Type)return H.UNSIGNED_SHORT_5_5_5_1;if(t===THREE.UnsignedShort565Type)return H.UNSIGNED_SHORT_5_6_5;if(t===THREE.ByteType)return H.BYTE;if(t===THREE.ShortType)return H.SHORT;if(t===THREE.UnsignedShortType)return H.UNSIGNED_SHORT;if(t===THREE.IntType)return H.INT;if(t===THREE.UnsignedIntType)return H.UNSIGNED_INT;if(t===THREE.FloatType)return H.FLOAT;if(null!==(e=j.get("OES_texture_half_float"))&&t===THREE.HalfFloatType)return e.HALF_FLOAT_OES;if(t===THREE.AlphaFormat)return H.ALPHA;if(t===THREE.RGBFormat)return H.RGB;if(t===THREE.RGBAFormat)return H.RGBA;if(t===THREE.LuminanceFormat)return H.LUMINANCE;if(t===THREE.LuminanceAlphaFormat)return H.LUMINANCE_ALPHA;if(t===THREE.AddEquation)return H.FUNC_ADD;if(t===THREE.SubtractEquation)return H.FUNC_SUBTRACT;if(t===THREE.ReverseSubtractEquation)return H.FUNC_REVERSE_SUBTRACT;if(t===THREE.ZeroFactor)return H.ZERO;if(t===THREE.OneFactor)return H.ONE;if(t===THREE.SrcColorFactor)return H.SRC_COLOR;if(t===THREE.OneMinusSrcColorFactor)return H.ONE_MINUS_SRC_COLOR;if(t===THREE.SrcAlphaFactor)return H.SRC_ALPHA;if(t===THREE.OneMinusSrcAlphaFactor)return H.ONE_MINUS_SRC_ALPHA;if(t===THREE.DstAlphaFactor)return H.DST_ALPHA;if(t===THREE.OneMinusDstAlphaFactor)return H.ONE_MINUS_DST_ALPHA;if(t===THREE.DstColorFactor)return H.DST_COLOR;if(t===THREE.OneMinusDstColorFactor)return H.ONE_MINUS_DST_COLOR;if(t===THREE.SrcAlphaSaturateFactor)return H.SRC_ALPHA_SATURATE;if(null!==(e=j.get("WEBGL_compressed_texture_s3tc"))){if(t===THREE.RGB_S3TC_DXT1_Format)return e.COMPRESSED_RGB_S3TC_DXT1_EXT;if(t===THREE.RGBA_S3TC_DXT1_Format)return e.COMPRESSED_RGBA_S3TC_DXT1_EXT;if(t===THREE.RGBA_S3TC_DXT3_Format)return e.COMPRESSED_RGBA_S3TC_DXT3_EXT;if(t===THREE.RGBA_S3TC_DXT5_Format)return e.COMPRESSED_RGBA_S3TC_DXT5_EXT}if(null!==(e=j.get("WEBGL_compressed_texture_pvrtc"))){if(t===THREE.RGB_PVRTC_4BPPV1_Format)return e.COMPRESSED_RGB_PVRTC_4BPPV1_IMG;if(t===THREE.RGB_PVRTC_2BPPV1_Format)return e.COMPRESSED_RGB_PVRTC_2BPPV1_IMG;if(t===THREE.RGBA_PVRTC_4BPPV1_Format)return e.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG;if(t===THREE.RGBA_PVRTC_2BPPV1_Format)return e.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG}if(null!==(e=j.get("EXT_blend_minmax"))){if(t===THREE.MinEquation)return e.MIN_EXT;if(t===THREE.MaxEquation)return e.MAX_EXT}return 0}this.getContext=function(){return H},this.getContextAttributes=function(){return H.getContextAttributes()},this.forceContextLoss=function(){j.get("WEBGL_lose_context").loseContext()},this.getMaxAnisotropy=function(){if(void 0!==it)return it;var t=j.get("EXT_texture_filter_anisotropic");return it=null!==t?H.getParameter(t.MAX_TEXTURE_MAX_ANISOTROPY_EXT):0},this.getPrecision=function(){return X.precision},this.getPixelRatio=function(){return o},this.setPixelRatio=function(t){void 0!==t&&(o=t)},this.getSize=function(){return{width:i,height:n}},this.setSize=function(t,r,a){i=t,n=r,e.width=t*o,e.height=r*o,!1!==a&&(e.style.width=t+"px",e.style.height=r+"px"),this.setViewport(0,0,t,r)},this.setViewport=function(t,e,r,i){C=t*o,L=e*o,P=r*o,D=i*o,H.viewport(C,L,P,D)},this.getViewport=function(t){t.x=C/o,t.y=L/o,t.z=P/o,t.w=D/o},this.setScissor=function(t,e,r,i){H.scissor(t*o,e*o,r*o,i*o)},this.enableScissorTest=function(t){q.setScissorTest(t)},this.getClearColor=function(){return E},this.setClearColor=function(t,e){E.set(t),p=void 0!==e?e:1,$(E.r,E.g,E.b,p)},this.getClearAlpha=function(){return p},this.setClearAlpha=function(t){p=t,$(E.r,E.g,E.b,p)},this.clear=function(t,e,r){var i=0;(void 0===t||t)&&(i|=H.COLOR_BUFFER_BIT),(void 0===e||e)&&(i|=H.DEPTH_BUFFER_BIT),(void 0===r||r)&&(i|=H.STENCIL_BUFFER_BIT),H.clear(i)},this.clearColor=function(){H.clear(H.COLOR_BUFFER_BIT)},this.clearDepth=function(){H.clear(H.DEPTH_BUFFER_BIT)},this.clearStencil=function(){H.clear(H.STENCIL_BUFFER_BIT)},this.clearTarget=function(t,e,r,i){this.setRenderTarget(t),this.clear(e,r,i)},this.resetGLState=et,this.dispose=function(){e.removeEventListener("webglcontextlost",at,!1)},this.renderBufferImmediate=function(t,e,r){q.initAttributes();var i=Y.get(t);t.hasPositions&&!i.position&&(i.position=H.createBuffer()),t.hasNormals&&!i.normal&&(i.normal=H.createBuffer()),t.hasUvs&&!i.uv&&(i.uv=H.createBuffer()),t.hasColors&&!i.color&&(i.color=H.createBuffer());var n=e.getAttributes();if(t.hasPositions&&(H.bindBuffer(H.ARRAY_BUFFER,i.position),H.bufferData(H.ARRAY_BUFFER,t.positionArray,H.DYNAMIC_DRAW),q.enableAttribute(n.position),H.vertexAttribPointer(n.position,3,H.FLOAT,!1,0,0)),t.hasNormals){if(H.bindBuffer(H.ARRAY_BUFFER,i.normal),"MeshPhongMaterial"!==r.type&&r.shading===THREE.FlatShading)for(var o=0,a=3*t.count;o<a;o+=9){var s=t.normalArray,h=(s[o+0]+s[o+3]+s[o+6])/3,c=(s[o+1]+s[o+4]+s[o+7])/3,u=(s[o+2]+s[o+5]+s[o+8])/3;s[o+0]=h,s[o+1]=c,s[o+2]=u,s[o+3]=h,s[o+4]=c,s[o+5]=u,s[o+6]=h,s[o+7]=c,s[o+8]=u}H.bufferData(H.ARRAY_BUFFER,t.normalArray,H.DYNAMIC_DRAW),q.enableAttribute(n.normal),H.vertexAttribPointer(n.normal,3,H.FLOAT,!1,0,0)}t.hasUvs&&r.map&&(H.bindBuffer(H.ARRAY_BUFFER,i.uv),H.bufferData(H.ARRAY_BUFFER,t.uvArray,H.DYNAMIC_DRAW),q.enableAttribute(n.uv),H.vertexAttribPointer(n.uv,2,H.FLOAT,!1,0,0)),t.hasColors&&r.vertexColors!==THREE.NoColors&&(H.bindBuffer(H.ARRAY_BUFFER,i.color),H.bufferData(H.ARRAY_BUFFER,t.colorArray,H.DYNAMIC_DRAW),q.enableAttribute(n.color),H.vertexAttribPointer(n.color,3,H.FLOAT,!1,0,0)),q.disableUnusedAttributes(),H.drawArrays(H.TRIANGLES,0,t.count),t.count=0},this.renderBufferDirect=function(t,e,r,i,n,a,s){Tt(n);var h=gt(t,e,r,n,a),c=!1,u=i.id+"_"+h.id+"_"+n.wireframe;u!==S&&(S=u,c=!0);var l=a.morphTargetInfluences;if(void 0!==l){for(var E=[],p=0,d=l.length;p<d;p++){var f=l[p];E.push([f,p])}E.sort(lt),E.length>8&&(E.length=8);var m=i.morphAttributes;for(p=0,d=E.length;p<d;p++){f=E[p];if(v[p]=f[0],0!==f[0]){var T=f[1];!0===n.morphTargets&&m.position&&i.addAttribute("morphTarget"+p,m.position[T]),!0===n.morphNormals&&m.normal&&i.addAttribute("morphNormal"+p,m.normal[T])}else!0===n.morphTargets&&i.removeAttribute("morphTarget"+p),!0===n.morphNormals&&i.removeAttribute("morphNormal"+p)}var g=h.getUniforms();null!==g.morphTargetInfluences&&H.uniform1fv(g.morphTargetInfluences,v),c=!0}T=i.index;var y,R=i.attributes.position;!0===n.wireframe&&(T=K.getWireframeAttribute(i)),null!==T?(y=J).setIndex(T):y=Z,c&&(!function(t,e,r,i){var n;if(r instanceof THREE.InstancedBufferGeometry&&null===(n=j.get("ANGLE_instanced_arrays")))return void console.error("THREE.WebGLRenderer.setupVertexAttributes: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.");void 0===i&&(i=0);q.initAttributes();var o=r.attributes,a=e.getAttributes(),s=t.defaultAttributeValues;for(var h in a){var c=a[h];if(c>=0){var u=o[h];if(void 0!==u){var l=u.itemSize,E=K.getAttributeBuffer(u);if(u instanceof THREE.InterleavedBufferAttribute){var p=u.data,d=p.stride,f=u.offset;p instanceof THREE.InstancedInterleavedBuffer?(q.enableAttributeAndDivisor(c,p.meshPerAttribute,n),void 0===r.maxInstancedCount&&(r.maxInstancedCount=p.meshPerAttribute*p.count)):q.enableAttribute(c),H.bindBuffer(H.ARRAY_BUFFER,E),H.vertexAttribPointer(c,l,H.FLOAT,!1,d*p.array.BYTES_PER_ELEMENT,(i*d+f)*p.array.BYTES_PER_ELEMENT)}else u instanceof THREE.InstancedBufferAttribute?(q.enableAttributeAndDivisor(c,u.meshPerAttribute,n),void 0===r.maxInstancedCount&&(r.maxInstancedCount=u.meshPerAttribute*u.count)):q.enableAttribute(c),H.bindBuffer(H.ARRAY_BUFFER,E),H.vertexAttribPointer(c,l,H.FLOAT,!1,0,i*l*4)}else if(void 0!==s){var m=s[h];if(void 0!==m)switch(m.length){case 2:H.vertexAttrib2fv(c,m);break;case 3:H.vertexAttrib3fv(c,m);break;case 4:H.vertexAttrib4fv(c,m);break;default:H.vertexAttrib1fv(c,m)}}}}q.disableUnusedAttributes()}(n,h,i),null!==T&&H.bindBuffer(H.ELEMENT_ARRAY_BUFFER,K.getAttributeBuffer(T)));var x=1/0;null!==T?x=T.count:void 0!==R&&(x=R.count);var b=i.drawRange.start,w=i.drawRange.count,M=null!==s?s.start:0,_=null!==s?s.count:1/0,A=Math.max(0,b,M),C=Math.min(0+x,b+w,M+_)-1,L=Math.max(0,C-A+1);if(a instanceof THREE.Mesh)!0===n.wireframe?(q.setLineWidth(n.wireframeLinewidth*o),y.setMode(H.LINES)):y.setMode(H.TRIANGLES),i instanceof THREE.InstancedBufferGeometry&&i.maxInstancedCount>0?y.renderInstances(i):y.render(A,L);else if(a instanceof THREE.Line){var P=n.linewidth;void 0===P&&(P=1),q.setLineWidth(P*o),a instanceof THREE.LineSegments?y.setMode(H.LINES):y.setMode(H.LINE_STRIP),y.render(A,L)}else a instanceof THREE.Points&&(y.setMode(H.POINTS),y.render(A,L))},this.render=function(t,e,r,i){if(e instanceof THREE.Camera!=!1){var n=t.fog;if(S="",M=-1,_=null,G=!0,!0===t.autoUpdate&&t.updateMatrixWorld(),null===e.parent&&e.updateMatrixWorld(),e.matrixWorldInverse.getInverse(e.matrixWorld),U.multiplyMatrices(e.projectionMatrix,e.matrixWorldInverse),F.setFromMatrix(U),d.length=0,m=-1,g=-1,y.length=0,R.length=0,ft(t,e),f.length=m+1,T.length=g+1,!0===x.sortObjects&&(f.sort(Et),T.sort(pt)),rt.render(t),z.calls=0,z.vertices=0,z.faces=0,z.points=0,this.setRenderTarget(r),(this.autoClear||i)&&this.clear(this.autoClearColor,this.autoClearDepth,this.autoClearStencil),t.overrideMaterial){var o=t.overrideMaterial;mt(f,e,d,n,o),mt(T,e,d,n,o)}else q.setBlending(THREE.NoBlending),mt(f,e,d,n),mt(T,e,d,n);if(nt.render(t,e),ot.render(t,e,k,V),r){var a=r.texture,s=Mt(r);a.generateMipmaps&&s&&a.minFilter!==THREE.NearestFilter&&a.minFilter!==THREE.LinearFilter&&function(t){var e=t instanceof THREE.WebGLRenderTargetCube?H.TEXTURE_CUBE_MAP:H.TEXTURE_2D,r=Y.get(t.texture).__webglTexture;q.bindTexture(e,r),H.generateMipmap(e),q.bindTexture(e,null)}(r)}q.setDepthTest(!0),q.setDepthWrite(!0),q.setColorWrite(!0)}else console.error("THREE.WebGLRenderer.render: camera is not an instance of THREE.Camera.")},this.setFaceCulling=function(t,e){t===THREE.CullFaceNone?q.disable(H.CULL_FACE):(e===THREE.FrontFaceDirectionCW?H.frontFace(H.CW):H.frontFace(H.CCW),t===THREE.CullFaceBack?H.cullFace(H.BACK):t===THREE.CullFaceFront?H.cullFace(H.FRONT):H.cullFace(H.FRONT_AND_BACK),q.enable(H.CULL_FACE))},this.setTexture=function(t,e){var r=Y.get(t);if(t.version>0&&r.__version!==t.version){var i=t.image;return void 0===i?void console.warn("THREE.WebGLRenderer: Texture marked for update but image is undefined",t):!1===i.complete?void console.warn("THREE.WebGLRenderer: Texture marked for update but image is incomplete",t):void bt(r,t,e)}q.activeTexture(H.TEXTURE0+e),q.bindTexture(H.TEXTURE_2D,r.__webglTexture)},this.setRenderTarget=function(t){var e,r,i,n,o,a=t instanceof THREE.WebGLRenderTargetCube;if(t&&void 0===Y.get(t).__webglFramebuffer){var s=Y.get(t),h=Y.get(t.texture);void 0===t.depthBuffer&&(t.depthBuffer=!0),void 0===t.stencilBuffer&&(t.stencilBuffer=!0),t.addEventListener("dispose",ht),h.__webglTexture=H.createTexture(),I.textures++;var c=Mt(t),u=Pt(t.texture.format),l=Pt(t.texture.type);if(a){s.__webglFramebuffer=[],s.__webglRenderbuffer=[],q.bindTexture(H.TEXTURE_CUBE_MAP,h.__webglTexture),xt(H.TEXTURE_CUBE_MAP,t.texture,c);for(var E=0;E<6;E++)s.__webglFramebuffer[E]=H.createFramebuffer(),s.__webglRenderbuffer[E]=H.createRenderbuffer(),q.texImage2D(H.TEXTURE_CUBE_MAP_POSITIVE_X+E,0,u,t.width,t.height,0,u,l,null),At(s.__webglFramebuffer[E],t,H.TEXTURE_CUBE_MAP_POSITIVE_X+E),Ct(s.__webglRenderbuffer[E],t);t.texture.generateMipmaps&&c&&H.generateMipmap(H.TEXTURE_CUBE_MAP)}else s.__webglFramebuffer=H.createFramebuffer(),t.shareDepthFrom?s.__webglRenderbuffer=t.shareDepthFrom.__webglRenderbuffer:s.__webglRenderbuffer=H.createRenderbuffer(),q.bindTexture(H.TEXTURE_2D,h.__webglTexture),xt(H.TEXTURE_2D,t.texture,c),q.texImage2D(H.TEXTURE_2D,0,u,t.width,t.height,0,u,l,null),At(s.__webglFramebuffer,t,H.TEXTURE_2D),t.shareDepthFrom?t.depthBuffer&&!t.stencilBuffer?H.framebufferRenderbuffer(H.FRAMEBUFFER,H.DEPTH_ATTACHMENT,H.RENDERBUFFER,s.__webglRenderbuffer):t.depthBuffer&&t.stencilBuffer&&H.framebufferRenderbuffer(H.FRAMEBUFFER,H.DEPTH_STENCIL_ATTACHMENT,H.RENDERBUFFER,s.__webglRenderbuffer):Ct(s.__webglRenderbuffer,t),t.texture.generateMipmaps&&c&&H.generateMipmap(H.TEXTURE_2D);a?q.bindTexture(H.TEXTURE_CUBE_MAP,null):q.bindTexture(H.TEXTURE_2D,null),H.bindRenderbuffer(H.RENDERBUFFER,null),H.bindFramebuffer(H.FRAMEBUFFER,null)}if(t){s=Y.get(t);e=a?s.__webglFramebuffer[t.activeCubeFace]:s.__webglFramebuffer,r=t.width,i=t.height,n=0,o=0}else e=null,r=P,i=D,n=C,o=L;if(e!==w&&(H.bindFramebuffer(H.FRAMEBUFFER,e),H.viewport(n,o,r,i),w=e),a){h=Y.get(t.texture);H.framebufferTexture2D(H.FRAMEBUFFER,H.COLOR_ATTACHMENT0,H.TEXTURE_CUBE_MAP_POSITIVE_X+t.activeCubeFace,h.__webglTexture,0)}k=r,V=i},this.readRenderTargetPixels=function(t,e,r,i,n,o){if(t instanceof THREE.WebGLRenderTarget!=!1){var a=Y.get(t).__webglFramebuffer;if(a){var s=!1;a!==w&&(H.bindFramebuffer(H.FRAMEBUFFER,a),s=!0);try{var h=t.texture;if(h.format!==THREE.RGBAFormat&&Pt(h.format)!==H.getParameter(H.IMPLEMENTATION_COLOR_READ_FORMAT))return void console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in RGBA or implementation defined format.");if(!(h.type===THREE.UnsignedByteType||Pt(h.type)===H.getParameter(H.IMPLEMENTATION_COLOR_READ_TYPE)||h.type===THREE.FloatType&&j.get("WEBGL_color_buffer_float")||h.type===THREE.HalfFloatType&&j.get("EXT_color_buffer_half_float")))return void console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in UnsignedByteType or implementation defined type.");H.checkFramebufferStatus(H.FRAMEBUFFER)===H.FRAMEBUFFER_COMPLETE?H.readPixels(e,r,i,n,Pt(h.format),Pt(h.type),o):console.error("THREE.WebGLRenderer.readRenderTargetPixels: readPixels from renderTarget failed. Framebuffer not complete.")}finally{s&&H.bindFramebuffer(H.FRAMEBUFFER,w)}}}else console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not THREE.WebGLRenderTarget.")},this.supportsFloatTextures=function(){return console.warn("THREE.WebGLRenderer: .supportsFloatTextures() is now .extensions.get( 'OES_texture_float' )."),j.get("OES_texture_float")},this.supportsHalfFloatTextures=function(){return console.warn("THREE.WebGLRenderer: .supportsHalfFloatTextures() is now .extensions.get( 'OES_texture_half_float' )."),j.get("OES_texture_half_float")},this.supportsStandardDerivatives=function(){return console.warn("THREE.WebGLRenderer: .supportsStandardDerivatives() is now .extensions.get( 'OES_standard_derivatives' )."),j.get("OES_standard_derivatives")},this.supportsCompressedTextureS3TC=function(){return console.warn("THREE.WebGLRenderer: .supportsCompressedTextureS3TC() is now .extensions.get( 'WEBGL_compressed_texture_s3tc' )."),j.get("WEBGL_compressed_texture_s3tc")},this.supportsCompressedTexturePVRTC=function(){return console.warn("THREE.WebGLRenderer: .supportsCompressedTexturePVRTC() is now .extensions.get( 'WEBGL_compressed_texture_pvrtc' )."),j.get("WEBGL_compressed_texture_pvrtc")},this.supportsBlendMinMax=function(){return console.warn("THREE.WebGLRenderer: .supportsBlendMinMax() is now .extensions.get( 'EXT_blend_minmax' )."),j.get("EXT_blend_minmax")},this.supportsVertexTextures=function(){return X.vertexTextures},this.supportsInstancedArrays=function(){return console.warn("THREE.WebGLRenderer: .supportsInstancedArrays() is now .extensions.get( 'ANGLE_instanced_arrays' )."),j.get("ANGLE_instanced_arrays")},this.initMaterial=function(){console.warn("THREE.WebGLRenderer: .initMaterial() has been removed.")},this.addPrePlugin=function(){console.warn("THREE.WebGLRenderer: .addPrePlugin() has been removed.")},this.addPostPlugin=function(){console.warn("THREE.WebGLRenderer: .addPostPlugin() has been removed.")},this.updateShadowMap=function(){console.warn("THREE.WebGLRenderer: .updateShadowMap() has been removed.")},Object.defineProperties(this,{shadowMapEnabled:{get:function(){return rt.enabled},set:function(t){console.warn("THREE.WebGLRenderer: .shadowMapEnabled is now .shadowMap.enabled."),rt.enabled=t}},shadowMapType:{get:function(){return rt.type},set:function(t){console.warn("THREE.WebGLRenderer: .shadowMapType is now .shadowMap.type."),rt.type=t}},shadowMapCullFace:{get:function(){return rt.cullFace},set:function(t){console.warn("THREE.WebGLRenderer: .shadowMapCullFace is now .shadowMap.cullFace."),rt.cullFace=t}},shadowMapDebug:{get:function(){return rt.debug},set:function(t){console.warn("THREE.WebGLRenderer: .shadowMapDebug is now .shadowMap.debug."),rt.debug=t}}})},THREE.WebGLRenderTarget=function(t,e,r){this.uuid=THREE.Math.generateUUID(),this.width=t,this.height=e,void 0===(r=r||{}).minFilter&&(r.minFilter=THREE.LinearFilter),this.texture=new THREE.Texture(void 0,void 0,r.wrapS,r.wrapT,r.magFilter,r.minFilter,r.format,r.type,r.anisotropy),this.depthBuffer=void 0===r.depthBuffer||r.depthBuffer,this.stencilBuffer=void 0===r.stencilBuffer||r.stencilBuffer,this.shareDepthFrom=void 0!==r.shareDepthFrom?r.shareDepthFrom:null},THREE.WebGLRenderTarget.prototype={constructor:THREE.WebGLRenderTarget,get wrapS(){return console.warn("THREE.WebGLRenderTarget: .wrapS is now .texture.wrapS."),this.texture.wrapS},set wrapS(t){console.warn("THREE.WebGLRenderTarget: .wrapS is now .texture.wrapS."),this.texture.wrapS=t},get wrapT(){return console.warn("THREE.WebGLRenderTarget: .wrapT is now .texture.wrapT."),this.texture.wrapT},set wrapT(t){console.warn("THREE.WebGLRenderTarget: .wrapT is now .texture.wrapT."),this.texture.wrapT=t},get magFilter(){return console.warn("THREE.WebGLRenderTarget: .magFilter is now .texture.magFilter."),this.texture.magFilter},set magFilter(t){console.warn("THREE.WebGLRenderTarget: .magFilter is now .texture.magFilter."),this.texture.magFilter=t},get minFilter(){return console.warn("THREE.WebGLRenderTarget: .minFilter is now .texture.minFilter."),this.texture.minFilter},set minFilter(t){console.warn("THREE.WebGLRenderTarget: .minFilter is now .texture.minFilter."),this.texture.minFilter=t},get anisotropy(){return console.warn("THREE.WebGLRenderTarget: .anisotropy is now .texture.anisotropy."),this.texture.anisotropy},set anisotropy(t){console.warn("THREE.WebGLRenderTarget: .anisotropy is now .texture.anisotropy."),this.texture.anisotropy=t},get offset(){return console.warn("THREE.WebGLRenderTarget: .offset is now .texture.offset."),this.texture.offset},set offset(t){console.warn("THREE.WebGLRenderTarget: .offset is now .texture.offset."),this.texture.offset=t},get repeat(){return console.warn("THREE.WebGLRenderTarget: .repeat is now .texture.repeat."),this.texture.repeat},set repeat(t){console.warn("THREE.WebGLRenderTarget: .repeat is now .texture.repeat."),this.texture.repeat=t},get format(){return console.warn("THREE.WebGLRenderTarget: .format is now .texture.format."),this.texture.format},set format(t){console.warn("THREE.WebGLRenderTarget: .format is now .texture.format."),this.texture.format=t},get type(){return console.warn("THREE.WebGLRenderTarget: .type is now .texture.type."),this.texture.type},set type(t){console.warn("THREE.WebGLRenderTarget: .type is now .texture.type."),this.texture.type=t},get generateMipmaps(){return console.warn("THREE.WebGLRenderTarget: .generateMipmaps is now .texture.generateMipmaps."),this.texture.generateMipmaps},set generateMipmaps(t){console.warn("THREE.WebGLRenderTarget: .generateMipmaps is now .texture.generateMipmaps."),this.texture.generateMipmaps=t},setSize:function(t,e){this.width===t&&this.height===e||(this.width=t,this.height=e,this.dispose())},clone:function(){return(new this.constructor).copy(this)},copy:function(t){return this.width=t.width,this.height=t.height,this.texture=t.texture.clone(),this.depthBuffer=t.depthBuffer,this.stencilBuffer=t.stencilBuffer,this.shareDepthFrom=t.shareDepthFrom,this},dispose:function(){this.dispatchEvent({type:"dispose"})}},THREE.EventDispatcher.prototype.apply(THREE.WebGLRenderTarget.prototype),THREE.WebGLRenderTargetCube=function(t,e,r){THREE.WebGLRenderTarget.call(this,t,e,r),this.activeCubeFace=0},THREE.WebGLRenderTargetCube.prototype=Object.create(THREE.WebGLRenderTarget.prototype),THREE.WebGLRenderTargetCube.prototype.constructor=THREE.WebGLRenderTargetCube,THREE.WebGLBufferRenderer=function(t,e,r){var i;this.setMode=function(t){i=t},this.render=function(e,n){t.drawArrays(i,e,n),r.calls++,r.vertices+=n,i===t.TRIANGLES&&(r.faces+=n/3)},this.renderInstances=function(t){var r=e.get("ANGLE_instanced_arrays");if(null!==r){var n=t.attributes.position;n instanceof THREE.InterleavedBufferAttribute?r.drawArraysInstancedANGLE(i,0,n.data.count,t.maxInstancedCount):r.drawArraysInstancedANGLE(i,0,n.count,t.maxInstancedCount)}else console.error("THREE.WebGLBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.")}},THREE.WebGLIndexedBufferRenderer=function(t,e,r){var i,n,o;this.setMode=function(t){i=t},this.setIndex=function(r){r.array instanceof Uint32Array&&e.get("OES_element_index_uint")?(n=t.UNSIGNED_INT,o=4):(n=t.UNSIGNED_SHORT,o=2)},this.render=function(e,a){t.drawElements(i,a,n,e*o),r.calls++,r.vertices+=a,i===t.TRIANGLES&&(r.faces+=a/3)},this.renderInstances=function(t){var r=e.get("ANGLE_instanced_arrays");if(null!==r){var o=t.index;r.drawElementsInstancedANGLE(i,o.array.length,n,0,t.maxInstancedCount)}else console.error("THREE.WebGLBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.")}},THREE.WebGLExtensions=function(t){var e={};this.get=function(r){if(void 0!==e[r])return e[r];var i;switch(r){case"EXT_texture_filter_anisotropic":i=t.getExtension("EXT_texture_filter_anisotropic")||t.getExtension("MOZ_EXT_texture_filter_anisotropic")||t.getExtension("WEBKIT_EXT_texture_filter_anisotropic");break;case"WEBGL_compressed_texture_s3tc":i=t.getExtension("WEBGL_compressed_texture_s3tc")||t.getExtension("MOZ_WEBGL_compressed_texture_s3tc")||t.getExtension("WEBKIT_WEBGL_compressed_texture_s3tc");break;case"WEBGL_compressed_texture_pvrtc":i=t.getExtension("WEBGL_compressed_texture_pvrtc")||t.getExtension("WEBKIT_WEBGL_compressed_texture_pvrtc");break;default:i=t.getExtension(r)}return null===i&&console.warn("THREE.WebGLRenderer: "+r+" extension not supported."),e[r]=i,i}},THREE.WebGLCapabilities=function(t,e,r){function i(e){if("highp"===e){if(t.getShaderPrecisionFormat(t.VERTEX_SHADER,t.HIGH_FLOAT).precision>0&&t.getShaderPrecisionFormat(t.FRAGMENT_SHADER,t.HIGH_FLOAT).precision>0)return"highp";e="mediump"}return"mediump"===e&&t.getShaderPrecisionFormat(t.VERTEX_SHADER,t.MEDIUM_FLOAT).precision>0&&t.getShaderPrecisionFormat(t.FRAGMENT_SHADER,t.MEDIUM_FLOAT).precision>0?"mediump":"lowp"}this.getMaxPrecision=i,this.precision=void 0!==r.precision?r.precision:"highp",this.logarithmicDepthBuffer=void 0!==r.logarithmicDepthBuffer&&r.logarithmicDepthBuffer,this.maxTextures=t.getParameter(t.MAX_TEXTURE_IMAGE_UNITS),this.maxVertexTextures=t.getParameter(t.MAX_VERTEX_TEXTURE_IMAGE_UNITS),this.maxTextureSize=t.getParameter(t.MAX_TEXTURE_SIZE),this.maxCubemapSize=t.getParameter(t.MAX_CUBE_MAP_TEXTURE_SIZE),this.maxAttributes=t.getParameter(t.MAX_VERTEX_ATTRIBS),this.maxVertexUniforms=t.getParameter(t.MAX_VERTEX_UNIFORM_VECTORS),this.maxVaryings=t.getParameter(t.MAX_VARYING_VECTORS),this.maxFragmentUniforms=t.getParameter(t.MAX_FRAGMENT_UNIFORM_VECTORS),this.vertexTextures=this.maxVertexTextures>0,this.floatFragmentTextures=!!e.get("OES_texture_float"),this.floatVertexTextures=this.vertexTextures&&this.floatFragmentTextures;var n=i(this.precision);n!==this.precision&&(console.warn("THREE.WebGLRenderer:",this.precision,"not supported, using",n,"instead."),this.precision=n),this.logarithmicDepthBuffer&&(this.logarithmicDepthBuffer=!!e.get("EXT_frag_depth"))},THREE.WebGLGeometries=function(t,e,r){var i={};function n(t){var a=t.target;!function(t){for(var e in t)o(t[e])}(i[a.id].attributes),a.removeEventListener("dispose",n),delete i[a.id];var s=e.get(a);s.wireframe&&o(s.wireframe),r.memory.geometries--}function o(r){var i=function(t){return t instanceof THREE.InterleavedBufferAttribute?e.get(t.data).__webglBuffer:e.get(t).__webglBuffer}(r);void 0!==i&&(t.deleteBuffer(i),function(t){t instanceof THREE.InterleavedBufferAttribute?e.delete(t.data):e.delete(t)}(r))}this.get=function(t){var e,o=t.geometry;return void 0!==i[o.id]?i[o.id]:(o.addEventListener("dispose",n),o instanceof THREE.BufferGeometry?e=o:o instanceof THREE.Geometry&&(void 0===o._bufferGeometry&&(o._bufferGeometry=(new THREE.BufferGeometry).setFromObject(t)),e=o._bufferGeometry),i[o.id]=e,r.memory.geometries++,e)}},THREE.WebGLObjects=function(t,e,r){var i=new THREE.WebGLGeometries(t,e,r);function n(r,i){var n=r instanceof THREE.InterleavedBufferAttribute?r.data:r,o=e.get(n);void 0===o.__webglBuffer?function(e,r,i){e.__webglBuffer=t.createBuffer(),t.bindBuffer(i,e.__webglBuffer);var n=r.dynamic?t.DYNAMIC_DRAW:t.STATIC_DRAW;t.bufferData(i,r.array,n),e.version=r.version}(o,n,i):o.version!==n.version&&function(e,r,i){t.bindBuffer(i,e.__webglBuffer),!1===r.dynamic||-1===r.updateRange.count?t.bufferSubData(i,0,r.array):0===r.updateRange.count?console.error("THREE.WebGLObjects.updateBuffer: dynamic THREE.BufferAttribute marked as needsUpdate but updateRange.count is 0, ensure you are using set methods or updating manually."):(t.bufferSubData(i,r.updateRange.offset*r.array.BYTES_PER_ELEMENT,r.array.subarray(r.updateRange.offset,r.updateRange.offset+r.updateRange.count)),r.updateRange.count=0);e.version=r.version}(o,n,i)}function o(t,e,r){if(e>r){var i=e;e=r,r=i}var n=t[e];return void 0===n?(t[e]=[r],!0):-1===n.indexOf(r)&&(n.push(r),!0)}this.getAttributeBuffer=function(t){return t instanceof THREE.InterleavedBufferAttribute?e.get(t.data).__webglBuffer:e.get(t).__webglBuffer},this.getWireframeAttribute=function(r){var i=e.get(r);if(void 0!==i.wireframe)return i.wireframe;var a,s=[],h=r.index,c=r.attributes,u=c.position;if(null!==h)for(var l={},E=0,p=(a=h.array).length;E<p;E+=3){var d=a[E+0],f=a[E+1],m=a[E+2];o(l,d,f)&&s.push(d,f),o(l,f,m)&&s.push(f,m),o(l,m,d)&&s.push(m,d)}else for(E=0,p=(a=c.position.array).length/3-1;E<p;E+=3){d=E+0,f=E+1,m=E+2;s.push(d,f,f,m,m,d)}var T=u.count>65535?Uint32Array:Uint16Array,g=new THREE.BufferAttribute(new T(s),1);return n(g,t.ELEMENT_ARRAY_BUFFER),i.wireframe=g,g},this.update=function(e){var r=i.get(e);e.geometry instanceof THREE.Geometry&&r.updateFromObject(e);var o=r.index,a=r.attributes;for(var s in null!==o&&n(o,t.ELEMENT_ARRAY_BUFFER),a)n(a[s],t.ARRAY_BUFFER);var h=r.morphAttributes;for(var s in h)for(var c=h[s],u=0,l=c.length;u<l;u++)n(c[u],t.ARRAY_BUFFER);return r}},THREE.WebGLProgram=function(){var t=0;function e(t){return""!==t}return function(r,i,n,o){var a=r.context,s=n.defines,h=n.__webglShader.vertexShader,c=n.__webglShader.fragmentShader,u="SHADOWMAP_TYPE_BASIC";o.shadowMapType===THREE.PCFShadowMap?u="SHADOWMAP_TYPE_PCF":o.shadowMapType===THREE.PCFSoftShadowMap&&(u="SHADOWMAP_TYPE_PCF_SOFT");var l="ENVMAP_TYPE_CUBE",E="ENVMAP_MODE_REFLECTION",p="ENVMAP_BLENDING_MULTIPLY";if(o.envMap){switch(n.envMap.mapping){case THREE.CubeReflectionMapping:case THREE.CubeRefractionMapping:l="ENVMAP_TYPE_CUBE";break;case THREE.EquirectangularReflectionMapping:case THREE.EquirectangularRefractionMapping:l="ENVMAP_TYPE_EQUIREC";break;case THREE.SphericalReflectionMapping:l="ENVMAP_TYPE_SPHERE"}switch(n.envMap.mapping){case THREE.CubeRefractionMapping:case THREE.EquirectangularRefractionMapping:E="ENVMAP_MODE_REFRACTION"}switch(n.combine){case THREE.MultiplyOperation:p="ENVMAP_BLENDING_MULTIPLY";break;case THREE.MixOperation:p="ENVMAP_BLENDING_MIX";break;case THREE.AddOperation:p="ENVMAP_BLENDING_ADD"}}var d,f,m=r.gammaFactor>0?r.gammaFactor:1,T=function(t){var e=[];for(var r in t){var i=t[r];!1!==i&&e.push("#define "+r+" "+i)}return e.join("\n")}(s),g=a.createProgram();n instanceof THREE.RawShaderMaterial?(d="",f=""):(d=["precision "+o.precision+" float;","precision "+o.precision+" int;","#define SHADER_NAME "+n.__webglShader.name,T,o.supportsVertexTextures?"#define VERTEX_TEXTURES":"",r.gammaInput?"#define GAMMA_INPUT":"",r.gammaOutput?"#define GAMMA_OUTPUT":"","#define GAMMA_FACTOR "+m,"#define MAX_DIR_LIGHTS "+o.maxDirLights,"#define MAX_POINT_LIGHTS "+o.maxPointLights,"#define MAX_SPOT_LIGHTS "+o.maxSpotLights,"#define MAX_HEMI_LIGHTS "+o.maxHemiLights,"#define MAX_SHADOWS "+o.maxShadows,"#define MAX_BONES "+o.maxBones,o.map?"#define USE_MAP":"",o.envMap?"#define USE_ENVMAP":"",o.envMap?"#define "+E:"",o.lightMap?"#define USE_LIGHTMAP":"",o.aoMap?"#define USE_AOMAP":"",o.emissiveMap?"#define USE_EMISSIVEMAP":"",o.bumpMap?"#define USE_BUMPMAP":"",o.normalMap?"#define USE_NORMALMAP":"",o.displacementMap&&o.supportsVertexTextures?"#define USE_DISPLACEMENTMAP":"",o.specularMap?"#define USE_SPECULARMAP":"",o.alphaMap?"#define USE_ALPHAMAP":"",o.vertexColors?"#define USE_COLOR":"",o.flatShading?"#define FLAT_SHADED":"",o.skinning?"#define USE_SKINNING":"",o.useVertexTexture?"#define BONE_TEXTURE":"",o.morphTargets?"#define USE_MORPHTARGETS":"",o.morphNormals&&!1===o.flatShading?"#define USE_MORPHNORMALS":"",o.doubleSided?"#define DOUBLE_SIDED":"",o.flipSided?"#define FLIP_SIDED":"",o.shadowMapEnabled?"#define USE_SHADOWMAP":"",o.shadowMapEnabled?"#define "+u:"",o.shadowMapDebug?"#define SHADOWMAP_DEBUG":"",o.pointLightShadows>0?"#define POINT_LIGHT_SHADOWS":"",o.sizeAttenuation?"#define USE_SIZEATTENUATION":"",o.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"",o.logarithmicDepthBuffer&&r.extensions.get("EXT_frag_depth")?"#define USE_LOGDEPTHBUF_EXT":"","uniform mat4 modelMatrix;","uniform mat4 modelViewMatrix;","uniform mat4 projectionMatrix;","uniform mat4 viewMatrix;","uniform mat3 normalMatrix;","uniform vec3 cameraPosition;","attribute vec3 position;","attribute vec3 normal;","attribute vec2 uv;","#ifdef USE_COLOR","\tattribute vec3 color;","#endif","#ifdef USE_MORPHTARGETS","\tattribute vec3 morphTarget0;","\tattribute vec3 morphTarget1;","\tattribute vec3 morphTarget2;","\tattribute vec3 morphTarget3;","\t#ifdef USE_MORPHNORMALS","\t\tattribute vec3 morphNormal0;","\t\tattribute vec3 morphNormal1;","\t\tattribute vec3 morphNormal2;","\t\tattribute vec3 morphNormal3;","\t#else","\t\tattribute vec3 morphTarget4;","\t\tattribute vec3 morphTarget5;","\t\tattribute vec3 morphTarget6;","\t\tattribute vec3 morphTarget7;","\t#endif","#endif","#ifdef USE_SKINNING","\tattribute vec4 skinIndex;","\tattribute vec4 skinWeight;","#endif","\n"].filter(e).join("\n"),f=[o.bumpMap||o.normalMap||o.flatShading||n.derivatives?"#extension GL_OES_standard_derivatives : enable":"",o.logarithmicDepthBuffer&&r.extensions.get("EXT_frag_depth")?"#extension GL_EXT_frag_depth : enable":"","precision "+o.precision+" float;","precision "+o.precision+" int;","#define SHADER_NAME "+n.__webglShader.name,T,"#define MAX_DIR_LIGHTS "+o.maxDirLights,"#define MAX_POINT_LIGHTS "+o.maxPointLights,"#define MAX_SPOT_LIGHTS "+o.maxSpotLights,"#define MAX_HEMI_LIGHTS "+o.maxHemiLights,"#define MAX_SHADOWS "+o.maxShadows,o.alphaTest?"#define ALPHATEST "+o.alphaTest:"",r.gammaInput?"#define GAMMA_INPUT":"",r.gammaOutput?"#define GAMMA_OUTPUT":"","#define GAMMA_FACTOR "+m,o.useFog&&o.fog?"#define USE_FOG":"",o.useFog&&o.fogExp?"#define FOG_EXP2":"",o.map?"#define USE_MAP":"",o.envMap?"#define USE_ENVMAP":"",o.envMap?"#define "+l:"",o.envMap?"#define "+E:"",o.envMap?"#define "+p:"",o.lightMap?"#define USE_LIGHTMAP":"",o.aoMap?"#define USE_AOMAP":"",o.emissiveMap?"#define USE_EMISSIVEMAP":"",o.bumpMap?"#define USE_BUMPMAP":"",o.normalMap?"#define USE_NORMALMAP":"",o.specularMap?"#define USE_SPECULARMAP":"",o.alphaMap?"#define USE_ALPHAMAP":"",o.vertexColors?"#define USE_COLOR":"",o.flatShading?"#define FLAT_SHADED":"",o.metal?"#define METAL":"",o.doubleSided?"#define DOUBLE_SIDED":"",o.flipSided?"#define FLIP_SIDED":"",o.shadowMapEnabled?"#define USE_SHADOWMAP":"",o.shadowMapEnabled?"#define "+u:"",o.shadowMapDebug?"#define SHADOWMAP_DEBUG":"",o.pointLightShadows>0?"#define POINT_LIGHT_SHADOWS":"",o.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"",o.logarithmicDepthBuffer&&r.extensions.get("EXT_frag_depth")?"#define USE_LOGDEPTHBUF_EXT":"","uniform mat4 viewMatrix;","uniform vec3 cameraPosition;","\n"].filter(e).join("\n"));var v=d+h,y=f+c,R=THREE.WebGLShader(a,a.VERTEX_SHADER,v),H=THREE.WebGLShader(a,a.FRAGMENT_SHADER,y);a.attachShader(g,R),a.attachShader(g,H),void 0!==n.index0AttributeName?a.bindAttribLocation(g,0,n.index0AttributeName):!0===o.morphTargets&&a.bindAttribLocation(g,0,"position"),a.linkProgram(g);var x,b,w=a.getProgramInfoLog(g),M=a.getShaderInfoLog(R),S=a.getShaderInfoLog(H),_=!0,A=!0;return!1===a.getProgramParameter(g,a.LINK_STATUS)?(_=!1,console.error("THREE.WebGLProgram: shader error: ",a.getError(),"gl.VALIDATE_STATUS",a.getProgramParameter(g,a.VALIDATE_STATUS),"gl.getProgramInfoLog",w,M,S)):""!==w?console.warn("THREE.WebGLProgram: gl.getProgramInfoLog()",w):""!==M&&""!==S||(A=!1),A&&(this.diagnostics={runnable:_,material:n,programLog:w,vertexShader:{log:M,prefix:d},fragmentShader:{log:S,prefix:f}}),a.deleteShader(R),a.deleteShader(H),this.getUniforms=function(){return void 0===x&&(x=function(t,e,r){for(var i={},n=t.getProgramParameter(e,t.ACTIVE_UNIFORMS),o=0;o<n;o++){var a=t.getActiveUniform(e,o).name,s=t.getUniformLocation(e,a),h=a.lastIndexOf("[0]");-1!==h&&h===a.length-3&&(i[a.substr(0,h)]=s),i[a]=s}return i}(a,g)),x},this.getAttributes=function(){return void 0===b&&(b=function(t,e,r){for(var i={},n=t.getProgramParameter(e,t.ACTIVE_ATTRIBUTES),o=0;o<n;o++){var a=t.getActiveAttrib(e,o).name;i[a]=t.getAttribLocation(e,a)}return i}(a,g)),b},this.destroy=function(){a.deleteProgram(g),this.program=void 0},Object.defineProperties(this,{uniforms:{get:function(){return console.warn("THREE.WebGLProgram: .uniforms is now .getUniforms()."),this.getUniforms()}},attributes:{get:function(){return console.warn("THREE.WebGLProgram: .attributes is now .getAttributes()."),this.getAttributes()}}}),this.id=t++,this.code=i,this.usedTimes=1,this.program=g,this.vertexShader=R,this.fragmentShader=H,this}}(),THREE.WebGLPrograms=function(t,e){var r=[],i={MeshDepthMaterial:"depth",MeshNormalMaterial:"normal",MeshBasicMaterial:"basic",MeshLambertMaterial:"lambert",MeshPhongMaterial:"phong",LineBasicMaterial:"basic",LineDashedMaterial:"dashed",PointsMaterial:"points"},n=["precision","supportsVertexTextures","map","envMap","envMapMode","lightMap","aoMap","emissiveMap","bumpMap","normalMap","displacementMap","specularMap","alphaMap","combine","vertexColors","fog","useFog","fogExp","flatShading","sizeAttenuation","logarithmicDepthBuffer","skinning","maxBones","useVertexTexture","morphTargets","morphNormals","maxMorphTargets","maxMorphNormals","maxDirLights","maxPointLights","maxSpotLights","maxHemiLights","maxShadows","shadowMapEnabled","pointLightShadows","shadowMapType","shadowMapDebug","alphaTest","metal","doubleSided","flipSided"];this.getParameters=function(r,n,o,a){var s=i[r.type],h=function(t){for(var e=0,r=0,i=0,n=0,o=0,a=t.length;o<a;o++){var s=t[o];!1!==s.visible&&(s instanceof THREE.DirectionalLight&&e++,s instanceof THREE.PointLight&&r++,s instanceof THREE.SpotLight&&i++,s instanceof THREE.HemisphereLight&&n++)}return{directional:e,point:r,spot:i,hemi:n}}(n),c=function(t){for(var e=0,r=0,i=0,n=t.length;i<n;i++){var o=t[i];o.castShadow&&((o instanceof THREE.SpotLight||o instanceof THREE.DirectionalLight)&&e++,o instanceof THREE.PointLight&&(e++,r++))}return{maxShadows:e,pointLightShadows:r}}(n),u=function(t){if(e.floatVertexTextures&&t&&t.skeleton&&t.skeleton.useVertexTexture)return 1024;var r=e.maxVertexUniforms,i=Math.floor((r-20)/4);return void 0!==t&&t instanceof THREE.SkinnedMesh&&(i=Math.min(t.skeleton.bones.length,i))<t.skeleton.bones.length&&console.warn("WebGLRenderer: too many bones - "+t.skeleton.bones.length+", this GPU supports just "+i+" (try OpenGL instead of ANGLE)"),i}(a),l=t.getPrecision();return null!==r.precision&&(l=e.getMaxPrecision(r.precision))!==r.precision&&console.warn("THREE.WebGLRenderer.initMaterial:",r.precision,"not supported, using",l,"instead."),{shaderID:s,precision:l,supportsVertexTextures:e.vertexTextures,map:!!r.map,envMap:!!r.envMap,envMapMode:r.envMap&&r.envMap.mapping,lightMap:!!r.lightMap,aoMap:!!r.aoMap,emissiveMap:!!r.emissiveMap,bumpMap:!!r.bumpMap,normalMap:!!r.normalMap,displacementMap:!!r.displacementMap,specularMap:!!r.specularMap,alphaMap:!!r.alphaMap,combine:r.combine,vertexColors:r.vertexColors,fog:o,useFog:r.fog,fogExp:o instanceof THREE.FogExp2,flatShading:r.shading===THREE.FlatShading,sizeAttenuation:r.sizeAttenuation,logarithmicDepthBuffer:e.logarithmicDepthBuffer,skinning:r.skinning,maxBones:u,useVertexTexture:e.floatVertexTextures&&a&&a.skeleton&&a.skeleton.useVertexTexture,morphTargets:r.morphTargets,morphNormals:r.morphNormals,maxMorphTargets:t.maxMorphTargets,maxMorphNormals:t.maxMorphNormals,maxDirLights:h.directional,maxPointLights:h.point,maxSpotLights:h.spot,maxHemiLights:h.hemi,maxShadows:c.maxShadows,pointLightShadows:c.pointLightShadows,shadowMapEnabled:t.shadowMap.enabled&&a.receiveShadow&&c.maxShadows>0,shadowMapType:t.shadowMap.type,shadowMapDebug:t.shadowMap.debug,alphaTest:r.alphaTest,metal:r.metal,doubleSided:r.side===THREE.DoubleSide,flipSided:r.side===THREE.BackSide}},this.getProgramCode=function(t,e){var r=[];if(e.shaderID?r.push(e.shaderID):(r.push(t.fragmentShader),r.push(t.vertexShader)),void 0!==t.defines)for(var i in t.defines)r.push(i),r.push(t.defines[i]);for(var o=0;o<n.length;o++){var a=n[o];r.push(a),r.push(e[a])}return r.join()},this.acquireProgram=function(e,i,n){for(var o,a=0,s=r.length;a<s;a++){var h=r[a];if(h.code===n){++(o=h).usedTimes;break}}return void 0===o&&(o=new THREE.WebGLProgram(t,n,e,i),r.push(o)),o},this.releaseProgram=function(t){if(0==--t.usedTimes){var e=r.indexOf(t);r[e]=r[r.length-1],r.pop(),t.destroy()}},this.programs=r},THREE.WebGLProperties=function(){var t={};this.get=function(e){var r=e.uuid,i=t[r];return void 0===i&&(i={},t[r]=i),i},this.delete=function(e){delete t[e.uuid]},this.clear=function(){t={}}},THREE.WebGLShader=function(t,e,r){var i=t.createShader(e);return t.shaderSource(i,r),t.compileShader(i),!1===t.getShaderParameter(i,t.COMPILE_STATUS)&&console.error("THREE.WebGLShader: Shader couldn't compile."),""!==t.getShaderInfoLog(i)&&console.warn("THREE.WebGLShader: gl.getShaderInfoLog()",e===t.VERTEX_SHADER?"vertex":"fragment",t.getShaderInfoLog(i),function(t){for(var e=t.split("\n"),r=0;r<e.length;r++)e[r]=r+1+": "+e[r];return e.join("\n")}(r)),i},THREE.WebGLShadowMap=function(t,e,r){for(var i=t.context,n=t.state,o=new THREE.Frustum,a=new THREE.Matrix4,s=(new THREE.Vector3,new THREE.Vector3,new THREE.Vector3),h=new THREE.Vector3,c=[],u=new Array(4),l=new Array(4),E=[new THREE.Vector3(1,0,0),new THREE.Vector3(-1,0,0),new THREE.Vector3(0,0,1),new THREE.Vector3(0,0,-1),new THREE.Vector3(0,1,0),new THREE.Vector3(0,-1,0)],p=[new THREE.Vector3(0,1,0),new THREE.Vector3(0,1,0),new THREE.Vector3(0,1,0),new THREE.Vector3(0,1,0),new THREE.Vector3(0,0,1),new THREE.Vector3(0,0,-1)],d=[new THREE.Vector4,new THREE.Vector4,new THREE.Vector4,new THREE.Vector4,new THREE.Vector4,new THREE.Vector4],f=new THREE.Vector4,m=THREE.ShaderLib.depthRGBA,T=THREE.UniformsUtils.clone(m.uniforms),g=THREE.ShaderLib.distanceRGBA,v=THREE.UniformsUtils.clone(g.uniforms),y=0;4!==y;++y){var R=0!=(1&y),H=0!=(2&y),x=new THREE.ShaderMaterial({uniforms:T,vertexShader:m.vertexShader,fragmentShader:m.fragmentShader,morphTargets:R,skinning:H});x._shadowPass=!0,u[y]=x;var b=new THREE.ShaderMaterial({uniforms:v,vertexShader:g.vertexShader,fragmentShader:g.fragmentShader,morphTargets:R,skinning:H});b._shadowPass=!0,l[y]=b}var w=this;function M(t,e,r,i){var n=t.geometry,o=null,a=u,s=t.customDepthMaterial;if(r&&(a=l,s=t.customDistanceMaterial),s)o=s;else{var h=0;void 0!==n.morphTargets&&n.morphTargets.length>0&&e.morphTargets&&(h|=1),t instanceof THREE.SkinnedMesh&&e.skinning&&(h|=2),o=a[h]}return o.visible=e.visible,o.wireframe=e.wireframe,o.wireframeLinewidth=e.wireframeLinewidth,r&&void 0!==o.uniforms.lightPos&&o.uniforms.lightPos.value.copy(i),o}function S(t,e){if(!1!==t.visible){if(t instanceof THREE.Mesh||t instanceof THREE.Line||t instanceof THREE.Points)if(t.castShadow&&(!1===t.frustumCulled||!0===o.intersectsObject(t)))!0===t.material.visible&&(t.modelViewMatrix.multiplyMatrices(e.matrixWorldInverse,t.matrixWorld),c.push(t));for(var r=t.children,i=0,n=r.length;i<n;i++)S(r[i],e)}}this.enabled=!1,this.autoUpdate=!0,this.needsUpdate=!1,this.type=THREE.PCFShadowMap,this.cullFace=THREE.CullFaceFront,this.render=function(u){var l,m;if(!1!==w.enabled&&(!1!==w.autoUpdate||!1!==w.needsUpdate)){i.clearColor(1,1,1,1),n.disable(i.BLEND),n.enable(i.CULL_FACE),i.frontFace(i.CCW),i.cullFace(w.cullFace===THREE.CullFaceFront?i.FRONT:i.BACK),n.setDepthTest(!0),t.getViewport(f);for(var T=0,g=e.length;T<g;T++){var v=e[T];if(!0===v.castShadow){var y=v.shadow,R=y.camera,H=y.mapSize;if(v instanceof THREE.PointLight){l=6,m=!0;var x=H.x/4,b=H.y/2;d[0].set(2*x,b,x,b),d[1].set(0,b,x,b),d[2].set(3*x,b,x,b),d[3].set(x,b,x,b),d[4].set(3*x,0,x,b),d[5].set(x,0,x,b)}else l=1,m=!1;if(null===y.map){var _=THREE.LinearFilter;w.type===THREE.PCFSoftShadowMap&&(_=THREE.NearestFilter);var A={minFilter:_,magFilter:_,format:THREE.RGBAFormat};y.map=new THREE.WebGLRenderTarget(H.x,H.y,A),y.matrix=new THREE.Matrix4,v instanceof THREE.SpotLight&&(R.aspect=H.x/H.y),R.updateProjectionMatrix()}var C=y.map,L=y.matrix;h.setFromMatrixPosition(v.matrixWorld),R.position.copy(h),t.setRenderTarget(C),t.clear();for(var P=0;P<l;P++){if(m){s.copy(R.position),s.add(E[P]),R.up.copy(p[P]),R.lookAt(s);var D=d[P];t.setViewport(D.x,D.y,D.z,D.w)}else s.setFromMatrixPosition(v.target.matrixWorld),R.lookAt(s);R.updateMatrixWorld(),R.matrixWorldInverse.getInverse(R.matrixWorld),L.set(.5,0,0,.5,0,.5,0,.5,0,0,.5,.5,0,0,0,1),L.multiply(R.projectionMatrix),L.multiply(R.matrixWorldInverse),a.multiplyMatrices(R.projectionMatrix,R.matrixWorldInverse),o.setFromMatrix(a),c.length=0,S(u,R);for(var k=0,V=c.length;k<V;k++){var F=c[k],U=r.update(F),B=F.material;if(B instanceof THREE.MeshFaceMaterial)for(var O=U.groups,G=B.materials,N=0,I=O.length;N<I;N++){var z=O[N],W=G[z.materialIndex];if(!0===W.visible){var j=M(F,W,m,h);t.renderBufferDirect(R,e,null,U,j,F,z)}}else{j=M(F,B,m,h);t.renderBufferDirect(R,e,null,U,j,F,null)}}}t.resetGLState()}}t.setViewport(f.x,f.y,f.z,f.w);var X=t.getClearColor(),q=t.getClearAlpha();t.setClearColor(X,q),n.enable(i.BLEND),w.cullFace===THREE.CullFaceFront&&i.cullFace(i.BACK),t.resetGLState(),w.needsUpdate=!1}}},THREE.WebGLState=function(t,e,r){var i=this,n=new Uint8Array(16),o=new Uint8Array(16),a=new Uint8Array(16),s={},h=null,c=null,u=null,l=null,E=null,p=null,d=null,f=null,m=null,T=null,g=null,v=null,y=null,R=null,H=null,x=t.getParameter(t.MAX_TEXTURE_IMAGE_UNITS),b=void 0,w={};this.init=function(){t.clearColor(0,0,0,1),t.clearDepth(1),t.clearStencil(0),this.enable(t.DEPTH_TEST),t.depthFunc(t.LEQUAL),t.frontFace(t.CCW),t.cullFace(t.BACK),this.enable(t.CULL_FACE),this.enable(t.BLEND),t.blendEquation(t.FUNC_ADD),t.blendFunc(t.SRC_ALPHA,t.ONE_MINUS_SRC_ALPHA)},this.initAttributes=function(){for(var t=0,e=n.length;t<e;t++)n[t]=0},this.enableAttribute=function(r){(n[r]=1,0===o[r]&&(t.enableVertexAttribArray(r),o[r]=1),0!==a[r])&&(e.get("ANGLE_instanced_arrays").vertexAttribDivisorANGLE(r,0),a[r]=0)},this.enableAttributeAndDivisor=function(e,r,i){n[e]=1,0===o[e]&&(t.enableVertexAttribArray(e),o[e]=1),a[e]!==r&&(i.vertexAttribDivisorANGLE(e,r),a[e]=r)},this.disableUnusedAttributes=function(){for(var e=0,r=o.length;e<r;e++)o[e]!==n[e]&&(t.disableVertexAttribArray(e),o[e]=0)},this.enable=function(e){!0!==s[e]&&(t.enable(e),s[e]=!0)},this.disable=function(e){!1!==s[e]&&(t.disable(e),s[e]=!1)},this.getCompressedTextureFormats=function(){if(null===h&&(h=[],e.get("WEBGL_compressed_texture_pvrtc")||e.get("WEBGL_compressed_texture_s3tc")))for(var r=t.getParameter(t.COMPRESSED_TEXTURE_FORMATS),i=0;i<r.length;i++)h.push(r[i]);return h},this.setBlending=function(e,i,n,o,a,s,h){e!==c&&(e===THREE.NoBlending?this.disable(t.BLEND):e===THREE.AdditiveBlending?(this.enable(t.BLEND),t.blendEquation(t.FUNC_ADD),t.blendFunc(t.SRC_ALPHA,t.ONE)):e===THREE.SubtractiveBlending?(this.enable(t.BLEND),t.blendEquation(t.FUNC_ADD),t.blendFunc(t.ZERO,t.ONE_MINUS_SRC_COLOR)):e===THREE.MultiplyBlending?(this.enable(t.BLEND),t.blendEquation(t.FUNC_ADD),t.blendFunc(t.ZERO,t.SRC_COLOR)):e===THREE.CustomBlending?this.enable(t.BLEND):(this.enable(t.BLEND),t.blendEquationSeparate(t.FUNC_ADD,t.FUNC_ADD),t.blendFuncSeparate(t.SRC_ALPHA,t.ONE_MINUS_SRC_ALPHA,t.ONE,t.ONE_MINUS_SRC_ALPHA)),c=e),e===THREE.CustomBlending?(a=a||i,s=s||n,h=h||o,i===u&&a===p||(t.blendEquationSeparate(r(i),r(a)),u=i,p=a),n===l&&o===E&&s===d&&h===f||(t.blendFuncSeparate(r(n),r(o),r(s),r(h)),l=n,E=o,d=s,f=h)):(u=null,l=null,E=null,p=null,d=null,f=null)},this.setDepthFunc=function(e){if(m!==e){if(e)switch(e){case THREE.NeverDepth:t.depthFunc(t.NEVER);break;case THREE.AlwaysDepth:t.depthFunc(t.ALWAYS);break;case THREE.LessDepth:t.depthFunc(t.LESS);break;case THREE.LessEqualDepth:t.depthFunc(t.LEQUAL);break;case THREE.EqualDepth:t.depthFunc(t.EQUAL);break;case THREE.GreaterEqualDepth:t.depthFunc(t.GEQUAL);break;case THREE.GreaterDepth:t.depthFunc(t.GREATER);break;case THREE.NotEqualDepth:t.depthFunc(t.NOTEQUAL);break;default:t.depthFunc(t.LEQUAL)}else t.depthFunc(t.LEQUAL);m=e}},this.setDepthTest=function(e){e?this.enable(t.DEPTH_TEST):this.disable(t.DEPTH_TEST)},this.setDepthWrite=function(e){T!==e&&(t.depthMask(e),T=e)},this.setColorWrite=function(e){g!==e&&(t.colorMask(e,e,e,e),g=e)},this.setFlipSided=function(e){v!==e&&(e?t.frontFace(t.CW):t.frontFace(t.CCW),v=e)},this.setLineWidth=function(e){e!==y&&(t.lineWidth(e),y=e)},this.setPolygonOffset=function(e,r,i){e?this.enable(t.POLYGON_OFFSET_FILL):this.disable(t.POLYGON_OFFSET_FILL),!e||R===r&&H===i||(t.polygonOffset(r,i),R=r,H=i)},this.setScissorTest=function(e){e?this.enable(t.SCISSOR_TEST):this.disable(t.SCISSOR_TEST)},this.activeTexture=function(e){void 0===e&&(e=t.TEXTURE0+x-1),b!==e&&(t.activeTexture(e),b=e)},this.bindTexture=function(e,r){void 0===b&&i.activeTexture();var n=w[b];void 0===n&&(n={type:void 0,texture:void 0},w[b]=n),n.type===e&&n.texture===r||(t.bindTexture(e,r),n.type=e,n.texture=r)},this.compressedTexImage2D=function(){try{t.compressedTexImage2D.apply(t,arguments)}catch(t){console.error(t)}},this.texImage2D=function(){try{t.texImage2D.apply(t,arguments)}catch(t){console.error(t)}},this.reset=function(){for(var e=0;e<o.length;e++)1===o[e]&&(t.disableVertexAttribArray(e),o[e]=0);s={},h=null,c=null,T=null,g=null,v=null}},THREE.LensFlarePlugin=function(t,e){var r,i,n,o,a,s,h,c,u=t.context,l=t.state;function E(){var e,E=new Float32Array([-1,-1,0,0,1,-1,1,0,1,1,1,1,-1,1,0,1]),p=new Uint16Array([0,1,2,0,2,3]);r=u.createBuffer(),i=u.createBuffer(),u.bindBuffer(u.ARRAY_BUFFER,r),u.bufferData(u.ARRAY_BUFFER,E,u.STATIC_DRAW),u.bindBuffer(u.ELEMENT_ARRAY_BUFFER,i),u.bufferData(u.ELEMENT_ARRAY_BUFFER,p,u.STATIC_DRAW),h=u.createTexture(),c=u.createTexture(),l.bindTexture(u.TEXTURE_2D,h),u.texImage2D(u.TEXTURE_2D,0,u.RGB,16,16,0,u.RGB,u.UNSIGNED_BYTE,null),u.texParameteri(u.TEXTURE_2D,u.TEXTURE_WRAP_S,u.CLAMP_TO_EDGE),u.texParameteri(u.TEXTURE_2D,u.TEXTURE_WRAP_T,u.CLAMP_TO_EDGE),u.texParameteri(u.TEXTURE_2D,u.TEXTURE_MAG_FILTER,u.NEAREST),u.texParameteri(u.TEXTURE_2D,u.TEXTURE_MIN_FILTER,u.NEAREST),l.bindTexture(u.TEXTURE_2D,c),u.texImage2D(u.TEXTURE_2D,0,u.RGBA,16,16,0,u.RGBA,u.UNSIGNED_BYTE,null),u.texParameteri(u.TEXTURE_2D,u.TEXTURE_WRAP_S,u.CLAMP_TO_EDGE),u.texParameteri(u.TEXTURE_2D,u.TEXTURE_WRAP_T,u.CLAMP_TO_EDGE),u.texParameteri(u.TEXTURE_2D,u.TEXTURE_MAG_FILTER,u.NEAREST),u.texParameteri(u.TEXTURE_2D,u.TEXTURE_MIN_FILTER,u.NEAREST),e=(s=u.getParameter(u.MAX_VERTEX_TEXTURE_IMAGE_UNITS)>0)?{vertexShader:["uniform lowp int renderType;","uniform vec3 screenPosition;","uniform vec2 scale;","uniform float rotation;","uniform sampler2D occlusionMap;","attribute vec2 position;","attribute vec2 uv;","varying vec2 vUV;","varying float vVisibility;","void main() {","vUV = uv;","vec2 pos = position;","if ( renderType == 2 ) {","vec4 visibility = texture2D( occlusionMap, vec2( 0.1, 0.1 ) );","visibility += texture2D( occlusionMap, vec2( 0.5, 0.1 ) );","visibility += texture2D( occlusionMap, vec2( 0.9, 0.1 ) );","visibility += texture2D( occlusionMap, vec2( 0.9, 0.5 ) );","visibility += texture2D( occlusionMap, vec2( 0.9, 0.9 ) );","visibility += texture2D( occlusionMap, vec2( 0.5, 0.9 ) );","visibility += texture2D( occlusionMap, vec2( 0.1, 0.9 ) );","visibility += texture2D( occlusionMap, vec2( 0.1, 0.5 ) );","visibility += texture2D( occlusionMap, vec2( 0.5, 0.5 ) );","vVisibility =        visibility.r / 9.0;","vVisibility *= 1.0 - visibility.g / 9.0;","vVisibility *=       visibility.b / 9.0;","vVisibility *= 1.0 - visibility.a / 9.0;","pos.x = cos( rotation ) * position.x - sin( rotation ) * position.y;","pos.y = sin( rotation ) * position.x + cos( rotation ) * position.y;","}","gl_Position = vec4( ( pos * scale + screenPosition.xy ).xy, screenPosition.z, 1.0 );","}"].join("\n"),fragmentShader:["uniform lowp int renderType;","uniform sampler2D map;","uniform float opacity;","uniform vec3 color;","varying vec2 vUV;","varying float vVisibility;","void main() {","if ( renderType == 0 ) {","gl_FragColor = vec4( 1.0, 0.0, 1.0, 0.0 );","} else if ( renderType == 1 ) {","gl_FragColor = texture2D( map, vUV );","} else {","vec4 texture = texture2D( map, vUV );","texture.a *= opacity * vVisibility;","gl_FragColor = texture;","gl_FragColor.rgb *= color;","}","}"].join("\n")}:{vertexShader:["uniform lowp int renderType;","uniform vec3 screenPosition;","uniform vec2 scale;","uniform float rotation;","attribute vec2 position;","attribute vec2 uv;","varying vec2 vUV;","void main() {","vUV = uv;","vec2 pos = position;","if ( renderType == 2 ) {","pos.x = cos( rotation ) * position.x - sin( rotation ) * position.y;","pos.y = sin( rotation ) * position.x + cos( rotation ) * position.y;","}","gl_Position = vec4( ( pos * scale + screenPosition.xy ).xy, screenPosition.z, 1.0 );","}"].join("\n"),fragmentShader:["precision mediump float;","uniform lowp int renderType;","uniform sampler2D map;","uniform sampler2D occlusionMap;","uniform float opacity;","uniform vec3 color;","varying vec2 vUV;","void main() {","if ( renderType == 0 ) {","gl_FragColor = vec4( texture2D( map, vUV ).rgb, 0.0 );","} else if ( renderType == 1 ) {","gl_FragColor = texture2D( map, vUV );","} else {","float visibility = texture2D( occlusionMap, vec2( 0.5, 0.1 ) ).a;","visibility += texture2D( occlusionMap, vec2( 0.9, 0.5 ) ).a;","visibility += texture2D( occlusionMap, vec2( 0.5, 0.9 ) ).a;","visibility += texture2D( occlusionMap, vec2( 0.1, 0.5 ) ).a;","visibility = ( 1.0 - visibility / 4.0 );","vec4 texture = texture2D( map, vUV );","texture.a *= opacity * visibility;","gl_FragColor = texture;","gl_FragColor.rgb *= color;","}","}"].join("\n")},n=function(e){var r=u.createProgram(),i=u.createShader(u.FRAGMENT_SHADER),n=u.createShader(u.VERTEX_SHADER),o="precision "+t.getPrecision()+" float;\n";return u.shaderSource(i,o+e.fragmentShader),u.shaderSource(n,o+e.vertexShader),u.compileShader(i),u.compileShader(n),u.attachShader(r,i),u.attachShader(r,n),u.linkProgram(r),r}(e),o={vertex:u.getAttribLocation(n,"position"),uv:u.getAttribLocation(n,"uv")},a={renderType:u.getUniformLocation(n,"renderType"),map:u.getUniformLocation(n,"map"),occlusionMap:u.getUniformLocation(n,"occlusionMap"),opacity:u.getUniformLocation(n,"opacity"),color:u.getUniformLocation(n,"color"),scale:u.getUniformLocation(n,"scale"),rotation:u.getUniformLocation(n,"rotation"),screenPosition:u.getUniformLocation(n,"screenPosition")}}this.render=function(p,d,f,m){if(0!==e.length){var T=new THREE.Vector3,g=m/f,v=.5*f,y=.5*m,R=16/m,H=new THREE.Vector2(R*g,R),x=new THREE.Vector3(1,1,0),b=new THREE.Vector2(1,1);void 0===n&&E(),u.useProgram(n),l.initAttributes(),l.enableAttribute(o.vertex),l.enableAttribute(o.uv),l.disableUnusedAttributes(),u.uniform1i(a.occlusionMap,0),u.uniform1i(a.map,1),u.bindBuffer(u.ARRAY_BUFFER,r),u.vertexAttribPointer(o.vertex,2,u.FLOAT,!1,16,0),u.vertexAttribPointer(o.uv,2,u.FLOAT,!1,16,8),u.bindBuffer(u.ELEMENT_ARRAY_BUFFER,i),l.disable(u.CULL_FACE),u.depthMask(!1);for(var w=0,M=e.length;w<M;w++){R=16/m,H.set(R*g,R);var S=e[w];if(T.set(S.matrixWorld.elements[12],S.matrixWorld.elements[13],S.matrixWorld.elements[14]),T.applyMatrix4(d.matrixWorldInverse),T.applyProjection(d.projectionMatrix),x.copy(T),b.x=x.x*v+v,b.y=x.y*y+y,s||b.x>0&&b.x<f&&b.y>0&&b.y<m){l.activeTexture(u.TEXTURE0),l.bindTexture(u.TEXTURE_2D,null),l.activeTexture(u.TEXTURE1),l.bindTexture(u.TEXTURE_2D,h),u.copyTexImage2D(u.TEXTURE_2D,0,u.RGB,b.x-8,b.y-8,16,16,0),u.uniform1i(a.renderType,0),u.uniform2f(a.scale,H.x,H.y),u.uniform3f(a.screenPosition,x.x,x.y,x.z),l.disable(u.BLEND),l.enable(u.DEPTH_TEST),u.drawElements(u.TRIANGLES,6,u.UNSIGNED_SHORT,0),l.activeTexture(u.TEXTURE0),l.bindTexture(u.TEXTURE_2D,c),u.copyTexImage2D(u.TEXTURE_2D,0,u.RGBA,b.x-8,b.y-8,16,16,0),u.uniform1i(a.renderType,1),l.disable(u.DEPTH_TEST),l.activeTexture(u.TEXTURE1),l.bindTexture(u.TEXTURE_2D,h),u.drawElements(u.TRIANGLES,6,u.UNSIGNED_SHORT,0),S.positionScreen.copy(x),S.customUpdateCallback?S.customUpdateCallback(S):S.updateLensFlares(),u.uniform1i(a.renderType,2),l.enable(u.BLEND);for(var _=0,A=S.lensFlares.length;_<A;_++){var C=S.lensFlares[_];C.opacity>.001&&C.scale>.001&&(x.x=C.x,x.y=C.y,x.z=C.z,R=C.size*C.scale/m,H.x=R*g,H.y=R,u.uniform3f(a.screenPosition,x.x,x.y,x.z),u.uniform2f(a.scale,H.x,H.y),u.uniform1f(a.rotation,C.rotation),u.uniform1f(a.opacity,C.opacity),u.uniform3f(a.color,C.color.r,C.color.g,C.color.b),l.setBlending(C.blending,C.blendEquation,C.blendSrc,C.blendDst),t.setTexture(C.texture,1),u.drawElements(u.TRIANGLES,6,u.UNSIGNED_SHORT,0))}}}l.enable(u.CULL_FACE),l.enable(u.DEPTH_TEST),u.depthMask(!0),t.resetGLState()}}},THREE.SpritePlugin=function(t,e){var r,i,n,o,a,s,h=t.context,c=t.state,u=new THREE.Vector3,l=new THREE.Quaternion,E=new THREE.Vector3;function p(){var e=new Float32Array([-.5,-.5,0,0,.5,-.5,1,0,.5,.5,1,1,-.5,.5,0,1]),c=new Uint16Array([0,1,2,0,2,3]);r=h.createBuffer(),i=h.createBuffer(),h.bindBuffer(h.ARRAY_BUFFER,r),h.bufferData(h.ARRAY_BUFFER,e,h.STATIC_DRAW),h.bindBuffer(h.ELEMENT_ARRAY_BUFFER,i),h.bufferData(h.ELEMENT_ARRAY_BUFFER,c,h.STATIC_DRAW),n=function(){var e=h.createProgram(),r=h.createShader(h.VERTEX_SHADER),i=h.createShader(h.FRAGMENT_SHADER);return h.shaderSource(r,["precision "+t.getPrecision()+" float;","uniform mat4 modelViewMatrix;","uniform mat4 projectionMatrix;","uniform float rotation;","uniform vec2 scale;","uniform vec2 uvOffset;","uniform vec2 uvScale;","attribute vec2 position;","attribute vec2 uv;","varying vec2 vUV;","void main() {","vUV = uvOffset + uv * uvScale;","vec2 alignedPosition = position * scale;","vec2 rotatedPosition;","rotatedPosition.x = cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;","rotatedPosition.y = sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;","vec4 finalPosition;","finalPosition = modelViewMatrix * vec4( 0.0, 0.0, 0.0, 1.0 );","finalPosition.xy += rotatedPosition;","finalPosition = projectionMatrix * finalPosition;","gl_Position = finalPosition;","}"].join("\n")),h.shaderSource(i,["precision "+t.getPrecision()+" float;","uniform vec3 color;","uniform sampler2D map;","uniform float opacity;","uniform int fogType;","uniform vec3 fogColor;","uniform float fogDensity;","uniform float fogNear;","uniform float fogFar;","uniform float alphaTest;","varying vec2 vUV;","void main() {","vec4 texture = texture2D( map, vUV );","if ( texture.a < alphaTest ) discard;","gl_FragColor = vec4( color * texture.xyz, texture.a * opacity );","if ( fogType > 0 ) {","float depth = gl_FragCoord.z / gl_FragCoord.w;","float fogFactor = 0.0;","if ( fogType == 1 ) {","fogFactor = smoothstep( fogNear, fogFar, depth );","} else {","const float LOG2 = 1.442695;","fogFactor = exp2( - fogDensity * fogDensity * depth * depth * LOG2 );","fogFactor = 1.0 - clamp( fogFactor, 0.0, 1.0 );","}","gl_FragColor = mix( gl_FragColor, vec4( fogColor, gl_FragColor.w ), fogFactor );","}","}"].join("\n")),h.compileShader(r),h.compileShader(i),h.attachShader(e,r),h.attachShader(e,i),h.linkProgram(e),e}(),o={position:h.getAttribLocation(n,"position"),uv:h.getAttribLocation(n,"uv")},a={uvOffset:h.getUniformLocation(n,"uvOffset"),uvScale:h.getUniformLocation(n,"uvScale"),rotation:h.getUniformLocation(n,"rotation"),scale:h.getUniformLocation(n,"scale"),color:h.getUniformLocation(n,"color"),map:h.getUniformLocation(n,"map"),opacity:h.getUniformLocation(n,"opacity"),modelViewMatrix:h.getUniformLocation(n,"modelViewMatrix"),projectionMatrix:h.getUniformLocation(n,"projectionMatrix"),fogType:h.getUniformLocation(n,"fogType"),fogDensity:h.getUniformLocation(n,"fogDensity"),fogNear:h.getUniformLocation(n,"fogNear"),fogFar:h.getUniformLocation(n,"fogFar"),fogColor:h.getUniformLocation(n,"fogColor"),alphaTest:h.getUniformLocation(n,"alphaTest")};var u=document.createElement("canvas");u.width=8,u.height=8;var l=u.getContext("2d");l.fillStyle="white",l.fillRect(0,0,8,8),(s=new THREE.Texture(u)).needsUpdate=!0}function d(t,e){return t.z!==e.z?e.z-t.z:e.id-t.id}this.render=function(f,m){if(0!==e.length){void 0===n&&p(),h.useProgram(n),c.initAttributes(),c.enableAttribute(o.position),c.enableAttribute(o.uv),c.disableUnusedAttributes(),c.disable(h.CULL_FACE),c.enable(h.BLEND),h.bindBuffer(h.ARRAY_BUFFER,r),h.vertexAttribPointer(o.position,2,h.FLOAT,!1,16,0),h.vertexAttribPointer(o.uv,2,h.FLOAT,!1,16,8),h.bindBuffer(h.ELEMENT_ARRAY_BUFFER,i),h.uniformMatrix4fv(a.projectionMatrix,!1,m.projectionMatrix.elements),c.activeTexture(h.TEXTURE0),h.uniform1i(a.map,0);var T=0,g=0,v=f.fog;v?(h.uniform3f(a.fogColor,v.color.r,v.color.g,v.color.b),v instanceof THREE.Fog?(h.uniform1f(a.fogNear,v.near),h.uniform1f(a.fogFar,v.far),h.uniform1i(a.fogType,1),T=1,g=1):v instanceof THREE.FogExp2&&(h.uniform1f(a.fogDensity,v.density),h.uniform1i(a.fogType,2),T=2,g=2)):(h.uniform1i(a.fogType,0),T=0,g=0);for(var y=0,R=e.length;y<R;y++){(x=e[y]).modelViewMatrix.multiplyMatrices(m.matrixWorldInverse,x.matrixWorld),x.z=-x.modelViewMatrix.elements[14]}e.sort(d);var H=[];for(y=0,R=e.length;y<R;y++){var x,b=(x=e[y]).material;h.uniform1f(a.alphaTest,b.alphaTest),h.uniformMatrix4fv(a.modelViewMatrix,!1,x.modelViewMatrix.elements),x.matrixWorld.decompose(u,l,E),H[0]=E.x,H[1]=E.y;var w=0;f.fog&&b.fog&&(w=g),T!==w&&(h.uniform1i(a.fogType,w),T=w),null!==b.map?(h.uniform2f(a.uvOffset,b.map.offset.x,b.map.offset.y),h.uniform2f(a.uvScale,b.map.repeat.x,b.map.repeat.y)):(h.uniform2f(a.uvOffset,0,0),h.uniform2f(a.uvScale,1,1)),h.uniform1f(a.opacity,b.opacity),h.uniform3f(a.color,b.color.r,b.color.g,b.color.b),h.uniform1f(a.rotation,b.rotation),h.uniform2fv(a.scale,H),c.setBlending(b.blending,b.blendEquation,b.blendSrc,b.blendDst),c.setDepthTest(b.depthTest),c.setDepthWrite(b.depthWrite),b.map&&b.map.image&&b.map.image.width?t.setTexture(b.map,0):t.setTexture(s,0),h.drawElements(h.TRIANGLES,6,h.UNSIGNED_SHORT,0)}c.enable(h.CULL_FACE),t.resetGLState()}}},THREE.CurveUtils={tangentQuadraticBezier:function(t,e,r,i){return 2*(1-t)*(r-e)+2*t*(i-r)},tangentCubicBezier:function(t,e,r,i,n){return-3*e*(1-t)*(1-t)+3*r*(1-t)*(1-t)-6*t*r*(1-t)+6*t*i*(1-t)-3*t*t*i+3*t*t*n},tangentSpline:function(t,e,r,i,n){return 6*t*t-6*t+(3*t*t-4*t+1)+(-6*t*t+6*t)+(3*t*t-2*t)},interpolate:function(t,e,r,i,n){var o=.5*(r-t),a=.5*(i-e),s=n*n;return(2*e-2*r+o+a)*(n*s)+(-3*e+3*r-2*o-a)*s+o*n+e}},THREE.GeometryUtils={merge:function(t,e,r){var i;console.warn("THREE.GeometryUtils: .merge() has been moved to Geometry. Use geometry.merge( geometry2, matrix, materialIndexOffset ) instead."),e instanceof THREE.Mesh&&(e.matrixAutoUpdate&&e.updateMatrix(),i=e.matrix,e=e.geometry),t.merge(e,i,r)},center:function(t){return console.warn("THREE.GeometryUtils: .center() has been moved to Geometry. Use geometry.center() instead."),t.center()}},THREE.ImageUtils={crossOrigin:void 0,loadTexture:function(t,e,r,i){console.warn("THREE.ImageUtils.loadTexture is being deprecated. Use THREE.TextureLoader() instead.");var n=new THREE.TextureLoader;n.setCrossOrigin(this.crossOrigin);var o=n.load(t,r,void 0,i);return e&&(o.mapping=e),o},loadTextureCube:function(t,e,r,i){console.warn("THREE.ImageUtils.loadTextureCube is being deprecated. Use THREE.CubeTextureLoader() instead.");var n=new THREE.CubeTextureLoader;n.setCrossOrigin(this.crossOrigin);var o=n.load(t,r,void 0,i);return e&&(o.mapping=e),o},loadCompressedTexture:function(){console.error("THREE.ImageUtils.loadCompressedTexture has been removed. Use THREE.DDSLoader instead.")},loadCompressedTextureCube:function(){console.error("THREE.ImageUtils.loadCompressedTextureCube has been removed. Use THREE.DDSLoader instead.")}},THREE.SceneUtils={createMultiMaterialObject:function(t,e){for(var r=new THREE.Group,i=0,n=e.length;i<n;i++)r.add(new THREE.Mesh(t,e[i]));return r},detach:function(t,e,r){t.applyMatrix(e.matrixWorld),e.remove(t),r.add(t)},attach:function(t,e,r){var i=new THREE.Matrix4;i.getInverse(r.matrixWorld),t.applyMatrix(i),e.remove(t),r.add(t)}},THREE.ShapeUtils={area:function(t){for(var e=t.length,r=0,i=e-1,n=0;n<e;i=n++)r+=t[i].x*t[n].y-t[n].x*t[i].y;return.5*r},triangulate:function(){function t(t,e,r,i,n,o){var a,s,h,c,u,l,E,p,d,f,m,T,g,v,y,R,H;if(s=t[o[e]].x,h=t[o[e]].y,c=t[o[r]].x,u=t[o[r]].y,l=t[o[i]].x,E=t[o[i]].y,Number.EPSILON>(c-s)*(E-h)-(u-h)*(l-s))return!1;for(f=l-c,m=E-u,T=s-l,g=h-E,v=c-s,y=u-h,a=0;a<n;a++)if(p=t[o[a]].x,d=t[o[a]].y,!(p===s&&d===h||p===c&&d===u||p===l&&d===E)&&(R=v*(d-h)-y*(p-s),H=T*(d-E)-g*(p-l),f*(d-u)-m*(p-c)>=-Number.EPSILON&&H>=-Number.EPSILON&&R>=-Number.EPSILON))return!1;return!0}return function(e,r){var i=e.length;if(i<3)return null;var n,o,a,s=[],h=[],c=[];if(THREE.ShapeUtils.area(e)>0)for(o=0;o<i;o++)h[o]=o;else for(o=0;o<i;o++)h[o]=i-1-o;var u=i,l=2*u;for(o=u-1;u>2;){if(l--<=0)return console.warn("THREE.ShapeUtils: Unable to triangulate polygon! in triangulate()"),r?c:s;if(u<=(n=o)&&(n=0),u<=(o=n+1)&&(o=0),u<=(a=o+1)&&(a=0),t(e,n,o,a,u,h)){var E,p,d,f,m;for(E=h[n],p=h[o],d=h[a],s.push([e[E],e[p],e[d]]),c.push([h[n],h[o],h[a]]),f=o,m=o+1;m<u;f++,m++)h[f]=h[m];l=2*--u}}return r?c:s}}(),triangulateShape:function(t,e){function r(t,e,r){return t.x!==e.x?t.x<e.x?t.x<=r.x&&r.x<=e.x:e.x<=r.x&&r.x<=t.x:t.y<e.y?t.y<=r.y&&r.y<=e.y:e.y<=r.y&&r.y<=t.y}function i(t,e,i,n,o){var a=e.x-t.x,s=e.y-t.y,h=n.x-i.x,c=n.y-i.y,u=t.x-i.x,l=t.y-i.y,E=s*h-a*c,p=s*u-a*l;if(Math.abs(E)>Number.EPSILON){var d;if(E>0){if(p<0||p>E)return[];if((d=c*u-h*l)<0||d>E)return[]}else{if(p>0||p<E)return[];if((d=c*u-h*l)>0||d<E)return[]}if(0===d)return!o||0!==p&&p!==E?[t]:[];if(d===E)return!o||0!==p&&p!==E?[e]:[];if(0===p)return[i];if(p===E)return[n];var f=d/E;return[{x:t.x+f*a,y:t.y+f*s}]}if(0!==p||c*u!=h*l)return[];var m,T,g,v,y,R,H,x,b=0===a&&0===s,w=0===h&&0===c;return b&&w?t.x!==i.x||t.y!==i.y?[]:[t]:b?r(i,n,t)?[t]:[]:w?r(t,e,i)?[i]:[]:(0!==a?(t.x<e.x?(m=t,g=t.x,T=e,v=e.x):(m=e,g=e.x,T=t,v=t.x),i.x<n.x?(y=i,H=i.x,R=n,x=n.x):(y=n,H=n.x,R=i,x=i.x)):(t.y<e.y?(m=t,g=t.y,T=e,v=e.y):(m=e,g=e.y,T=t,v=t.y),i.y<n.y?(y=i,H=i.y,R=n,x=n.y):(y=n,H=n.y,R=i,x=i.y)),g<=H?v<H?[]:v===H?o?[]:[y]:v<=x?[y,T]:[y,R]:g>x?[]:g===x?o?[]:[m]:v<=x?[m,T]:[m,R])}function n(t,e,r,i){var n=e.x-t.x,o=e.y-t.y,a=r.x-t.x,s=r.y-t.y,h=i.x-t.x,c=i.y-t.y,u=n*s-o*a,l=n*c-o*h;if(Math.abs(u)>Number.EPSILON){var E=h*s-c*a;return u>0?l>=0&&E>=0:l>=0||E>=0}return l>0}for(var o,a,s,h,c,u,l={},E=t.concat(),p=0,d=e.length;p<d;p++)Array.prototype.push.apply(E,e[p]);for(o=0,a=E.length;o<a;o++)void 0!==l[c=E[o].x+":"+E[o].y]&&console.warn("THREE.Shape: Duplicate point",c),l[c]=o;var f=function(t,e){var r,o=t.concat();function a(t,e){var i=o.length-1,a=t-1;a<0&&(a=i);var s=t+1;s>i&&(s=0);var h=n(o[t],o[a],o[s],r[e]);if(!h)return!1;var c=r.length-1,u=e-1;u<0&&(u=c);var l=e+1;return l>c&&(l=0),!!(h=n(r[e],r[u],r[l],o[t]))}function s(t,e){var r,n;for(r=0;r<o.length;r++)if(n=r+1,n%=o.length,i(t,e,o[r],o[n],!0).length>0)return!0;return!1}var h=[];function c(t,r){var n,o,a,s;for(n=0;n<h.length;n++)for(o=e[h[n]],a=0;a<o.length;a++)if(s=a+1,s%=o.length,i(t,r,o[a],o[s],!0).length>0)return!0;return!1}for(var u,l,E,p,d,f,m,T,g,v,y=[],R=0,H=e.length;R<H;R++)h.push(R);for(var x=0,b=2*h.length;h.length>0;){if(--b<0){console.log("Infinite Loop! Holes left:"+h.length+", Probably Hole outside Shape!");break}for(l=x;l<o.length;l++){E=o[l],u=-1;for(R=0;R<h.length;R++)if(d=h[R],void 0===y[f=E.x+":"+E.y+":"+d]){r=e[d];for(var w=0;w<r.length;w++)if(p=r[w],a(l,w)&&!s(E,p)&&!c(E,p)){u=w,h.splice(R,1),m=o.slice(0,l+1),T=o.slice(l),g=r.slice(u),v=r.slice(0,u+1),o=m.concat(g).concat(v).concat(T),x=l;break}if(u>=0)break;y[f]=!0}if(u>=0)break}}return o}(t,e),m=THREE.ShapeUtils.triangulate(f,!1);for(o=0,a=m.length;o<a;o++)for(h=m[o],s=0;s<3;s++)void 0!==(u=l[c=h[s].x+":"+h[s].y])&&(h[s]=u);return m.concat()},isClockWise:function(t){return THREE.ShapeUtils.area(t)<0},b2:function(t,e,r,i){return function(t,e){var r=1-t;return r*r*e}(t,e)+function(t,e){return 2*(1-t)*t*e}(t,r)+function(t,e){return t*t*e}(t,i)},b3:function(t,e,r,i,n){return function(t,e){var r=1-t;return r*r*r*e}(t,e)+function(t,e){var r=1-t;return 3*r*r*t*e}(t,r)+function(t,e){return 3*(1-t)*t*t*e}(t,i)+function(t,e){return t*t*t*e}(t,n)}},THREE.Audio=function(t){THREE.Object3D.call(this),this.type="Audio",this.context=t.context,this.source=this.context.createBufferSource(),this.source.onended=this.onEnded.bind(this),this.gain=this.context.createGain(),this.gain.connect(this.context.destination),this.panner=this.context.createPanner(),this.panner.connect(this.gain),this.autoplay=!1,this.startTime=0,this.playbackRate=1,this.isPlaying=!1},THREE.Audio.prototype=Object.create(THREE.Object3D.prototype),THREE.Audio.prototype.constructor=THREE.Audio,THREE.Audio.prototype.load=function(t){var e=this,r=new XMLHttpRequest;return r.open("GET",t,!0),r.responseType="arraybuffer",r.onload=function(t){e.context.decodeAudioData(this.response,(function(t){e.source.buffer=t,e.autoplay&&e.play()}))},r.send(),this},THREE.Audio.prototype.play=function(){if(!0!==this.isPlaying){var t=this.context.createBufferSource();t.buffer=this.source.buffer,t.loop=this.source.loop,t.onended=this.source.onended,t.start(0,this.startTime),t.playbackRate.value=this.playbackRate,this.isPlaying=!0,this.source=t,this.connect()}else console.warn("THREE.Audio: Audio is already playing.")},THREE.Audio.prototype.pause=function(){this.source.stop(),this.startTime=this.context.currentTime},THREE.Audio.prototype.stop=function(){this.source.stop(),this.startTime=0},THREE.Audio.prototype.connect=function(){void 0!==this.filter?(this.source.connect(this.filter),this.filter.connect(this.panner)):this.source.connect(this.panner)},THREE.Audio.prototype.disconnect=function(){void 0!==this.filter?(this.source.disconnect(this.filter),this.filter.disconnect(this.panner)):this.source.disconnect(this.panner)},THREE.Audio.prototype.setFilter=function(t){!0===this.isPlaying?(this.disconnect(),this.filter=t,this.connect()):this.filter=t},THREE.Audio.prototype.getFilter=function(){return this.filter},THREE.Audio.prototype.setPlaybackRate=function(t){this.playbackRate=t,!0===this.isPlaying&&(this.source.playbackRate.value=this.playbackRate)},THREE.Audio.prototype.getPlaybackRate=function(){return this.playbackRate},THREE.Audio.prototype.onEnded=function(){this.isPlaying=!1},THREE.Audio.prototype.setLoop=function(t){this.source.loop=t},THREE.Audio.prototype.getLoop=function(){return this.source.loop},THREE.Audio.prototype.setRefDistance=function(t){this.panner.refDistance=t},THREE.Audio.prototype.getRefDistance=function(){return this.panner.refDistance},THREE.Audio.prototype.setRolloffFactor=function(t){this.panner.rolloffFactor=t},THREE.Audio.prototype.getRolloffFactor=function(){return this.panner.rolloffFactor},THREE.Audio.prototype.setVolume=function(t){this.gain.gain.value=t},THREE.Audio.prototype.getVolume=function(){return this.gain.gain.value},THREE.Audio.prototype.updateMatrixWorld=function(){var t=new THREE.Vector3;return function(e){THREE.Object3D.prototype.updateMatrixWorld.call(this,e),t.setFromMatrixPosition(this.matrixWorld),this.panner.setPosition(t.x,t.y,t.z)}}(),THREE.AudioListener=function(){THREE.Object3D.call(this),this.type="AudioListener",this.context=new(window.AudioContext||window.webkitAudioContext)},THREE.AudioListener.prototype=Object.create(THREE.Object3D.prototype),THREE.AudioListener.prototype.constructor=THREE.AudioListener,THREE.AudioListener.prototype.updateMatrixWorld=function(){var t=new THREE.Vector3,e=new THREE.Quaternion,r=new THREE.Vector3,i=new THREE.Vector3;return function(n){THREE.Object3D.prototype.updateMatrixWorld.call(this,n);var o=this.context.listener,a=this.up;this.matrixWorld.decompose(t,e,r),i.set(0,0,-1).applyQuaternion(e),o.setPosition(t.x,t.y,t.z),o.setOrientation(i.x,i.y,i.z,a.x,a.y,a.z)}}(),THREE.Curve=function(){},THREE.Curve.prototype={constructor:THREE.Curve,getPoint:function(t){return console.warn("THREE.Curve: Warning, getPoint() not implemented!"),null},getPointAt:function(t){var e=this.getUtoTmapping(t);return this.getPoint(e)},getPoints:function(t){t||(t=5);var e,r=[];for(e=0;e<=t;e++)r.push(this.getPoint(e/t));return r},getSpacedPoints:function(t){t||(t=5);var e,r=[];for(e=0;e<=t;e++)r.push(this.getPointAt(e/t));return r},getLength:function(){var t=this.getLengths();return t[t.length-1]},getLengths:function(t){if(t||(t=this.__arcLengthDivisions?this.__arcLengthDivisions:200),this.cacheArcLengths&&this.cacheArcLengths.length===t+1&&!this.needsUpdate)return this.cacheArcLengths;this.needsUpdate=!1;var e,r,i=[],n=this.getPoint(0),o=0;for(i.push(0),r=1;r<=t;r++)o+=(e=this.getPoint(r/t)).distanceTo(n),i.push(o),n=e;return this.cacheArcLengths=i,i},updateArcLengths:function(){this.needsUpdate=!0,this.getLengths()},getUtoTmapping:function(t,e){var r,i=this.getLengths(),n=0,o=i.length;r=e||t*i[o-1];for(var a,s=0,h=o-1;s<=h;)if((a=i[n=Math.floor(s+(h-s)/2)]-r)<0)s=n+1;else{if(!(a>0)){h=n;break}h=n-1}if(i[n=h]===r)return n/(o-1);var c=i[n];return(n+(r-c)/(i[n+1]-c))/(o-1)},getTangent:function(t){var e=1e-4,r=t-e,i=t+e;r<0&&(r=0),i>1&&(i=1);var n=this.getPoint(r);return this.getPoint(i).clone().sub(n).normalize()},getTangentAt:function(t){var e=this.getUtoTmapping(t);return this.getTangent(e)}},THREE.Curve.Utils=THREE.CurveUtils,THREE.Curve.create=function(t,e){return t.prototype=Object.create(THREE.Curve.prototype),t.prototype.constructor=t,t.prototype.getPoint=e,t},THREE.CurvePath=function(){this.curves=[],this.autoClose=!1},THREE.CurvePath.prototype=Object.create(THREE.Curve.prototype),THREE.CurvePath.prototype.constructor=THREE.CurvePath,THREE.CurvePath.prototype.add=function(t){this.curves.push(t)},THREE.CurvePath.prototype.closePath=function(){var t=this.curves[0].getPoint(0),e=this.curves[this.curves.length-1].getPoint(1);t.equals(e)||this.curves.push(new THREE.LineCurve(e,t))},THREE.CurvePath.prototype.getPoint=function(t){for(var e=t*this.getLength(),r=this.getCurveLengths(),i=0;i<r.length;){if(r[i]>=e){var n=r[i]-e,o=this.curves[i],a=1-n/o.getLength();return o.getPointAt(a)}i++}return null},THREE.CurvePath.prototype.getLength=function(){var t=this.getCurveLengths();return t[t.length-1]},THREE.CurvePath.prototype.getCurveLengths=function(){if(this.cacheLengths&&this.cacheLengths.length===this.curves.length)return this.cacheLengths;for(var t=[],e=0,r=0,i=this.curves.length;r<i;r++)e+=this.curves[r].getLength(),t.push(e);return this.cacheLengths=t,t},THREE.CurvePath.prototype.createPointsGeometry=function(t){var e=this.getPoints(t,!0);return this.createGeometry(e)},THREE.CurvePath.prototype.createSpacedPointsGeometry=function(t){var e=this.getSpacedPoints(t,!0);return this.createGeometry(e)},THREE.CurvePath.prototype.createGeometry=function(t){for(var e=new THREE.Geometry,r=0,i=t.length;r<i;r++){var n=t[r];e.vertices.push(new THREE.Vector3(n.x,n.y,n.z||0))}return e},THREE.Path=function(t){THREE.CurvePath.call(this),this.actions=[],t&&this.fromPoints(t)},THREE.Path.prototype=Object.create(THREE.CurvePath.prototype),THREE.Path.prototype.constructor=THREE.Path,THREE.Path.prototype.fromPoints=function(t){this.moveTo(t[0].x,t[0].y);for(var e=1,r=t.length;e<r;e++)this.lineTo(t[e].x,t[e].y)},THREE.Path.prototype.moveTo=function(t,e){this.actions.push({action:"moveTo",args:[t,e]})},THREE.Path.prototype.lineTo=function(t,e){var r=this.actions[this.actions.length-1].args,i=r[r.length-2],n=r[r.length-1],o=new THREE.LineCurve(new THREE.Vector2(i,n),new THREE.Vector2(t,e));this.curves.push(o),this.actions.push({action:"lineTo",args:[t,e]})},THREE.Path.prototype.quadraticCurveTo=function(t,e,r,i){var n=this.actions[this.actions.length-1].args,o=n[n.length-2],a=n[n.length-1],s=new THREE.QuadraticBezierCurve(new THREE.Vector2(o,a),new THREE.Vector2(t,e),new THREE.Vector2(r,i));this.curves.push(s),this.actions.push({action:"quadraticCurveTo",args:[t,e,r,i]})},THREE.Path.prototype.bezierCurveTo=function(t,e,r,i,n,o){var a=this.actions[this.actions.length-1].args,s=a[a.length-2],h=a[a.length-1],c=new THREE.CubicBezierCurve(new THREE.Vector2(s,h),new THREE.Vector2(t,e),new THREE.Vector2(r,i),new THREE.Vector2(n,o));this.curves.push(c),this.actions.push({action:"bezierCurveTo",args:[t,e,r,i,n,o]})},THREE.Path.prototype.splineThru=function(t){var e=Array.prototype.slice.call(arguments),r=this.actions[this.actions.length-1].args,i=r[r.length-2],n=r[r.length-1],o=[new THREE.Vector2(i,n)];Array.prototype.push.apply(o,t);var a=new THREE.SplineCurve(o);this.curves.push(a),this.actions.push({action:"splineThru",args:e})},THREE.Path.prototype.arc=function(t,e,r,i,n,o){var a=this.actions[this.actions.length-1].args,s=a[a.length-2],h=a[a.length-1];this.absarc(t+s,e+h,r,i,n,o)},THREE.Path.prototype.absarc=function(t,e,r,i,n,o){this.absellipse(t,e,r,r,i,n,o)},THREE.Path.prototype.ellipse=function(t,e,r,i,n,o,a,s){var h=this.actions[this.actions.length-1].args,c=h[h.length-2],u=h[h.length-1];this.absellipse(t+c,e+u,r,i,n,o,a,s)},THREE.Path.prototype.absellipse=function(t,e,r,i,n,o,a,s){var h=[t,e,r,i,n,o,a,s||0],c=new THREE.EllipseCurve(t,e,r,i,n,o,a,s);this.curves.push(c);var u=c.getPoint(1);h.push(u.x),h.push(u.y),this.actions.push({action:"ellipse",args:h})},THREE.Path.prototype.getSpacedPoints=function(t,e){t||(t=40);for(var r=[],i=0;i<t;i++)r.push(this.getPoint(i/t));return r},THREE.Path.prototype.getPoints=function(t,e){t=t||12;for(var r,i,n,o,a,s,h,c,u,l,E,p=THREE.ShapeUtils.b2,d=THREE.ShapeUtils.b3,f=[],m=0,T=this.actions.length;m<T;m++){var g=this.actions[m],v=g.action,y=g.args;switch(v){case"moveTo":case"lineTo":f.push(new THREE.Vector2(y[0],y[1]));break;case"quadraticCurveTo":r=y[2],i=y[3],a=y[0],s=y[1],f.length>0?(h=(u=f[f.length-1]).x,c=u.y):(h=(u=this.actions[m-1].args)[u.length-2],c=u[u.length-1]);for(var R=1;R<=t;R++){l=p(D=R/t,h,a,r),E=p(D,c,s,i),f.push(new THREE.Vector2(l,E))}break;case"bezierCurveTo":r=y[4],i=y[5],a=y[0],s=y[1],n=y[2],o=y[3],f.length>0?(h=(u=f[f.length-1]).x,c=u.y):(h=(u=this.actions[m-1].args)[u.length-2],c=u[u.length-1]);for(R=1;R<=t;R++){l=d(D=R/t,h,a,n,r),E=d(D,c,s,o,i),f.push(new THREE.Vector2(l,E))}break;case"splineThru":u=this.actions[m-1].args;var H=[new THREE.Vector2(u[u.length-2],u[u.length-1])],x=t*y[0].length;H=H.concat(y[0]);var b=new THREE.SplineCurve(H);for(R=1;R<=x;R++)f.push(b.getPointAt(R/x));break;case"arc":var w=y[0],M=y[1],S=y[2],_=y[3],A=y[4],C=!!y[5],L=A-_,P=2*t;for(R=1;R<=P;R++){var D=R/P;C||(D=1-D),k=_+D*L,l=w+S*Math.cos(k),E=M+S*Math.sin(k),f.push(new THREE.Vector2(l,E))}break;case"ellipse":w=y[0],M=y[1];var k,V,F,U=y[2],B=y[3],O=(_=y[4],A=y[5],C=!!y[6],y[7]);L=A-_,P=2*t;0!==O&&(V=Math.cos(O),F=Math.sin(O));for(R=1;R<=P;R++){D=R/P;if(C||(D=1-D),k=_+D*L,l=w+U*Math.cos(k),E=M+B*Math.sin(k),0!==O){var G=l;l=(G-w)*V-(E-M)*F+w,E=(G-w)*F+(E-M)*V+M}f.push(new THREE.Vector2(l,E))}}}var N=f[f.length-1];return Math.abs(N.x-f[0].x)<Number.EPSILON&&Math.abs(N.y-f[0].y)<Number.EPSILON&&f.splice(f.length-1,1),e&&f.push(f[0]),f},THREE.Path.prototype.toShapes=function(t,e){function r(t){for(var e=[],r=0,i=t.length;r<i;r++){var n=t[r],o=new THREE.Shape;o.actions=n.actions,o.curves=n.curves,e.push(o)}return e}function i(t,e){for(var r=e.length,i=!1,n=r-1,o=0;o<r;n=o++){var a=e[n],s=e[o],h=s.x-a.x,c=s.y-a.y;if(Math.abs(c)>Number.EPSILON){if(c<0&&(a=e[o],h=-h,s=e[n],c=-c),t.y<a.y||t.y>s.y)continue;if(t.y===a.y){if(t.x===a.x)return!0}else{var u=c*(t.x-a.x)-h*(t.y-a.y);if(0===u)return!0;if(u<0)continue;i=!i}}else{if(t.y!==a.y)continue;if(s.x<=t.x&&t.x<=a.x||a.x<=t.x&&t.x<=s.x)return!0}}return i}var n=THREE.ShapeUtils.isClockWise,o=function(t){for(var e=[],r=new THREE.Path,i=0,n=t.length;i<n;i++){var o=t[i],a=o.args,s=o.action;"moveTo"===s&&0!==r.actions.length&&(e.push(r),r=new THREE.Path),r[s].apply(r,a)}return 0!==r.actions.length&&e.push(r),e}(this.actions);if(0===o.length)return[];if(!0===e)return r(o);var a,s,h,c=[];if(1===o.length)return s=o[0],(h=new THREE.Shape).actions=s.actions,h.curves=s.curves,c.push(h),c;var u=!n(o[0].getPoints());u=t?!u:u;var l,E,p=[],d=[],f=[],m=0;d[m]=void 0,f[m]=[];for(var T=0,g=o.length;T<g;T++)a=n(l=(s=o[T]).getPoints()),(a=t?!a:a)?(!u&&d[m]&&m++,d[m]={s:new THREE.Shape,p:l},d[m].s.actions=s.actions,d[m].s.curves=s.curves,u&&m++,f[m]=[]):f[m].push({h:s,p:l[0]});if(!d[0])return r(o);if(d.length>1){for(var v=!1,y=[],R=0,H=d.length;R<H;R++)p[R]=[];for(R=0,H=d.length;R<H;R++)for(var x=f[R],b=0;b<x.length;b++){for(var w=x[b],M=!0,S=0;S<d.length;S++)i(w.p,d[S].p)&&(R!==S&&y.push({froms:R,tos:S,hole:b}),M?(M=!1,p[S].push(w)):v=!0);M&&p[R].push(w)}y.length>0&&(v||(f=p))}T=0;for(var _=d.length;T<_;T++){h=d[T].s,c.push(h);for(var A=0,C=(E=f[T]).length;A<C;A++)h.holes.push(E[A].h)}return c},THREE.Shape=function(){THREE.Path.apply(this,arguments),this.holes=[]},THREE.Shape.prototype=Object.create(THREE.Path.prototype),THREE.Shape.prototype.constructor=THREE.Shape,THREE.Shape.prototype.extrude=function(t){return new THREE.ExtrudeGeometry(this,t)},THREE.Shape.prototype.makeGeometry=function(t){return new THREE.ShapeGeometry(this,t)},THREE.Shape.prototype.getPointsHoles=function(t){for(var e=[],r=0,i=this.holes.length;r<i;r++)e[r]=this.holes[r].getPoints(t);return e},THREE.Shape.prototype.extractAllPoints=function(t){return{shape:this.getPoints(t),holes:this.getPointsHoles(t)}},THREE.Shape.prototype.extractPoints=function(t){return this.extractAllPoints(t)},THREE.Shape.Utils=THREE.ShapeUtils,THREE.LineCurve=function(t,e){this.v1=t,this.v2=e},THREE.LineCurve.prototype=Object.create(THREE.Curve.prototype),THREE.LineCurve.prototype.constructor=THREE.LineCurve,THREE.LineCurve.prototype.getPoint=function(t){var e=this.v2.clone().sub(this.v1);return e.multiplyScalar(t).add(this.v1),e},THREE.LineCurve.prototype.getPointAt=function(t){return this.getPoint(t)},THREE.LineCurve.prototype.getTangent=function(t){return this.v2.clone().sub(this.v1).normalize()},THREE.QuadraticBezierCurve=function(t,e,r){this.v0=t,this.v1=e,this.v2=r},THREE.QuadraticBezierCurve.prototype=Object.create(THREE.Curve.prototype),THREE.QuadraticBezierCurve.prototype.constructor=THREE.QuadraticBezierCurve,THREE.QuadraticBezierCurve.prototype.getPoint=function(t){var e=THREE.ShapeUtils.b2;return new THREE.Vector2(e(t,this.v0.x,this.v1.x,this.v2.x),e(t,this.v0.y,this.v1.y,this.v2.y))},THREE.QuadraticBezierCurve.prototype.getTangent=function(t){var e=THREE.CurveUtils.tangentQuadraticBezier;return new THREE.Vector2(e(t,this.v0.x,this.v1.x,this.v2.x),e(t,this.v0.y,this.v1.y,this.v2.y)).normalize()},THREE.CubicBezierCurve=function(t,e,r,i){this.v0=t,this.v1=e,this.v2=r,this.v3=i},THREE.CubicBezierCurve.prototype=Object.create(THREE.Curve.prototype),THREE.CubicBezierCurve.prototype.constructor=THREE.CubicBezierCurve,THREE.CubicBezierCurve.prototype.getPoint=function(t){var e=THREE.ShapeUtils.b3;return new THREE.Vector2(e(t,this.v0.x,this.v1.x,this.v2.x,this.v3.x),e(t,this.v0.y,this.v1.y,this.v2.y,this.v3.y))},THREE.CubicBezierCurve.prototype.getTangent=function(t){var e=THREE.CurveUtils.tangentCubicBezier;return new THREE.Vector2(e(t,this.v0.x,this.v1.x,this.v2.x,this.v3.x),e(t,this.v0.y,this.v1.y,this.v2.y,this.v3.y)).normalize()},THREE.SplineCurve=function(t){this.points=null==t?[]:t},THREE.SplineCurve.prototype=Object.create(THREE.Curve.prototype),THREE.SplineCurve.prototype.constructor=THREE.SplineCurve,THREE.SplineCurve.prototype.getPoint=function(t){var e=this.points,r=(e.length-1)*t,i=Math.floor(r),n=r-i,o=e[0===i?i:i-1],a=e[i],s=e[i>e.length-2?e.length-1:i+1],h=e[i>e.length-3?e.length-1:i+2],c=THREE.CurveUtils.interpolate;return new THREE.Vector2(c(o.x,a.x,s.x,h.x,n),c(o.y,a.y,s.y,h.y,n))},THREE.EllipseCurve=function(t,e,r,i,n,o,a,s){this.aX=t,this.aY=e,this.xRadius=r,this.yRadius=i,this.aStartAngle=n,this.aEndAngle=o,this.aClockwise=a,this.aRotation=s||0},THREE.EllipseCurve.prototype=Object.create(THREE.Curve.prototype),THREE.EllipseCurve.prototype.constructor=THREE.EllipseCurve,THREE.EllipseCurve.prototype.getPoint=function(t){var e,r=this.aEndAngle-this.aStartAngle;r<0&&(r+=2*Math.PI),r>2*Math.PI&&(r-=2*Math.PI),e=!0===this.aClockwise?this.aEndAngle+(1-t)*(2*Math.PI-r):this.aStartAngle+t*r;var i=this.aX+this.xRadius*Math.cos(e),n=this.aY+this.yRadius*Math.sin(e);if(0!==this.aRotation){var o=Math.cos(this.aRotation),a=Math.sin(this.aRotation),s=i,h=n;i=(s-this.aX)*o-(h-this.aY)*a+this.aX,n=(s-this.aX)*a+(h-this.aY)*o+this.aY}return new THREE.Vector2(i,n)},THREE.ArcCurve=function(t,e,r,i,n,o){THREE.EllipseCurve.call(this,t,e,r,r,i,n,o)},THREE.ArcCurve.prototype=Object.create(THREE.EllipseCurve.prototype),THREE.ArcCurve.prototype.constructor=THREE.ArcCurve,THREE.LineCurve3=THREE.Curve.create((function(t,e){this.v1=t,this.v2=e}),(function(t){var e=new THREE.Vector3;return e.subVectors(this.v2,this.v1),e.multiplyScalar(t),e.add(this.v1),e})),THREE.QuadraticBezierCurve3=THREE.Curve.create((function(t,e,r){this.v0=t,this.v1=e,this.v2=r}),(function(t){var e=THREE.ShapeUtils.b2;return new THREE.Vector3(e(t,this.v0.x,this.v1.x,this.v2.x),e(t,this.v0.y,this.v1.y,this.v2.y),e(t,this.v0.z,this.v1.z,this.v2.z))})),THREE.CubicBezierCurve3=THREE.Curve.create((function(t,e,r,i){this.v0=t,this.v1=e,this.v2=r,this.v3=i}),(function(t){var e=THREE.ShapeUtils.b3;return new THREE.Vector3(e(t,this.v0.x,this.v1.x,this.v2.x,this.v3.x),e(t,this.v0.y,this.v1.y,this.v2.y,this.v3.y),e(t,this.v0.z,this.v1.z,this.v2.z,this.v3.z))})),THREE.SplineCurve3=THREE.Curve.create((function(t){console.warn("THREE.SplineCurve3 will be deprecated. Please use THREE.CatmullRomCurve3"),this.points=null==t?[]:t}),(function(t){var e=this.points,r=(e.length-1)*t,i=Math.floor(r),n=r-i,o=e[0==i?i:i-1],a=e[i],s=e[i>e.length-2?e.length-1:i+1],h=e[i>e.length-3?e.length-1:i+2],c=THREE.CurveUtils.interpolate;return new THREE.Vector3(c(o.x,a.x,s.x,h.x,n),c(o.y,a.y,s.y,h.y,n),c(o.z,a.z,s.z,h.z,n))})),THREE.CatmullRomCurve3=function(){var t=new THREE.Vector3,e=new n,r=new n,i=new n;function n(){}return n.prototype.init=function(t,e,r,i){this.c0=t,this.c1=r,this.c2=-3*t+3*e-2*r-i,this.c3=2*t-2*e+r+i},n.prototype.initNonuniformCatmullRom=function(t,e,r,i,n,o,a){var s=(e-t)/n-(r-t)/(n+o)+(r-e)/o,h=(r-e)/o-(i-e)/(o+a)+(i-r)/a;s*=o,h*=o,this.init(e,r,s,h)},n.prototype.initCatmullRom=function(t,e,r,i,n){this.init(e,r,n*(r-t),n*(i-e))},n.prototype.calc=function(t){var e=t*t,r=e*t;return this.c0+this.c1*t+this.c2*e+this.c3*r},THREE.Curve.create((function(t){this.points=t||[]}),(function(n){var o,a,s,h,c,u,l,E,p=this.points;if((h=p.length)<2&&console.log("duh, you need at least 2 points"),0===(s=(o=(h-1)*n)-(a=Math.floor(o)))&&a===h-1&&(a=h-2,s=1),0===a?(t.subVectors(p[0],p[1]).add(p[0]),c=t):c=p[a-1],u=p[a],l=p[a+1],a+2<h?E=p[a+2]:(t.subVectors(p[h-1],p[h-2]).add(p[h-2]),E=t),void 0===this.type||"centripetal"===this.type||"chordal"===this.type){var d="chordal"===this.type?.5:.25,f=Math.pow(c.distanceToSquared(u),d),m=Math.pow(u.distanceToSquared(l),d),T=Math.pow(l.distanceToSquared(E),d);m<1e-4&&(m=1),f<1e-4&&(f=m),T<1e-4&&(T=m),e.initNonuniformCatmullRom(c.x,u.x,l.x,E.x,f,m,T),r.initNonuniformCatmullRom(c.y,u.y,l.y,E.y,f,m,T),i.initNonuniformCatmullRom(c.z,u.z,l.z,E.z,f,m,T)}else if("catmullrom"===this.type){var g=void 0!==this.tension?this.tension:.5;e.initCatmullRom(c.x,u.x,l.x,E.x,g),r.initCatmullRom(c.y,u.y,l.y,E.y,g),i.initCatmullRom(c.z,u.z,l.z,E.z,g)}return new THREE.Vector3(e.calc(s),r.calc(s),i.calc(s))}))}(),THREE.ClosedSplineCurve3=THREE.Curve.create((function(t){this.points=null==t?[]:t}),(function(t){var e=this.points,r=(e.length-0)*t,i=Math.floor(r),n=r-i,o=e[((i+=i>0?0:(Math.floor(Math.abs(i)/e.length)+1)*e.length)-1)%e.length],a=e[i%e.length],s=e[(i+1)%e.length],h=e[(i+2)%e.length],c=THREE.CurveUtils.interpolate;return new THREE.Vector3(c(o.x,a.x,s.x,h.x,n),c(o.y,a.y,s.y,h.y,n),c(o.z,a.z,s.z,h.z,n))})),THREE.BoxGeometry=function(t,e,r,i,n,o){THREE.Geometry.call(this),this.type="BoxGeometry",this.parameters={width:t,height:e,depth:r,widthSegments:i,heightSegments:n,depthSegments:o},this.widthSegments=i||1,this.heightSegments=n||1,this.depthSegments=o||1;var a=this,s=t/2,h=e/2,c=r/2;function u(t,e,r,i,n,o,s,h){var c,u,l,E=a.widthSegments,p=a.heightSegments,d=n/2,f=o/2,m=a.vertices.length;"x"===t&&"y"===e||"y"===t&&"x"===e?c="z":"x"===t&&"z"===e||"z"===t&&"x"===e?(c="y",p=a.depthSegments):("z"===t&&"y"===e||"y"===t&&"z"===e)&&(c="x",E=a.depthSegments);var T=E+1,g=p+1,v=n/E,y=o/p,R=new THREE.Vector3;for(R[c]=s>0?1:-1,l=0;l<g;l++)for(u=0;u<T;u++){var H=new THREE.Vector3;H[t]=(u*v-d)*r,H[e]=(l*y-f)*i,H[c]=s,a.vertices.push(H)}for(l=0;l<p;l++)for(u=0;u<E;u++){var x=u+T*l,b=u+T*(l+1),w=u+1+T*(l+1),M=u+1+T*l,S=new THREE.Vector2(u/E,1-l/p),_=new THREE.Vector2(u/E,1-(l+1)/p),A=new THREE.Vector2((u+1)/E,1-(l+1)/p),C=new THREE.Vector2((u+1)/E,1-l/p),L=new THREE.Face3(x+m,b+m,M+m);L.normal.copy(R),L.vertexNormals.push(R.clone(),R.clone(),R.clone()),L.materialIndex=h,a.faces.push(L),a.faceVertexUvs[0].push([S,_,C]),(L=new THREE.Face3(b+m,w+m,M+m)).normal.copy(R),L.vertexNormals.push(R.clone(),R.clone(),R.clone()),L.materialIndex=h,a.faces.push(L),a.faceVertexUvs[0].push([_.clone(),A,C.clone()])}}u("z","y",-1,-1,r,e,s,0),u("z","y",1,-1,r,e,-s,1),u("x","z",1,1,t,r,h,2),u("x","z",1,-1,t,r,-h,3),u("x","y",1,-1,t,e,c,4),u("x","y",-1,-1,t,e,-c,5),this.mergeVertices()},THREE.BoxGeometry.prototype=Object.create(THREE.Geometry.prototype),THREE.BoxGeometry.prototype.constructor=THREE.BoxGeometry,THREE.BoxGeometry.prototype.clone=function(){var t=this.parameters;return new THREE.BoxGeometry(t.width,t.height,t.depth,t.widthSegments,t.heightSegments,t.depthSegments)},THREE.CubeGeometry=THREE.BoxGeometry,THREE.CircleGeometry=function(t,e,r,i){THREE.Geometry.call(this),this.type="CircleGeometry",this.parameters={radius:t,segments:e,thetaStart:r,thetaLength:i},this.fromBufferGeometry(new THREE.CircleBufferGeometry(t,e,r,i))},THREE.CircleGeometry.prototype=Object.create(THREE.Geometry.prototype),THREE.CircleGeometry.prototype.constructor=THREE.CircleGeometry,THREE.CircleGeometry.prototype.clone=function(){var t=this.parameters;return new THREE.CircleGeometry(t.radius,t.segments,t.thetaStart,t.thetaLength)},THREE.CircleBufferGeometry=function(t,e,r,i){THREE.BufferGeometry.call(this),this.type="CircleBufferGeometry",this.parameters={radius:t,segments:e,thetaStart:r,thetaLength:i},t=t||50,e=void 0!==e?Math.max(3,e):8,r=void 0!==r?r:0,i=void 0!==i?i:2*Math.PI;var n=e+2,o=new Float32Array(3*n),a=new Float32Array(3*n),s=new Float32Array(2*n);a[2]=1,s[0]=.5,s[1]=.5;for(var h=0,c=3,u=2;h<=e;h++,c+=3,u+=2){var l=r+h/e*i;o[c]=t*Math.cos(l),o[c+1]=t*Math.sin(l),a[c+2]=1,s[u]=(o[c]/t+1)/2,s[u+1]=(o[c+1]/t+1)/2}var E=[];for(c=1;c<=e;c++)E.push(c,c+1,0);this.setIndex(new THREE.BufferAttribute(new Uint16Array(E),1)),this.addAttribute("position",new THREE.BufferAttribute(o,3)),this.addAttribute("normal",new THREE.BufferAttribute(a,3)),this.addAttribute("uv",new THREE.BufferAttribute(s,2)),this.boundingSphere=new THREE.Sphere(new THREE.Vector3,t)},THREE.CircleBufferGeometry.prototype=Object.create(THREE.BufferGeometry.prototype),THREE.CircleBufferGeometry.prototype.constructor=THREE.CircleBufferGeometry,THREE.CircleBufferGeometry.prototype.clone=function(){var t=this.parameters;return new THREE.CircleBufferGeometry(t.radius,t.segments,t.thetaStart,t.thetaLength)},THREE.CylinderGeometry=function(t,e,r,i,n,o,a,s){THREE.Geometry.call(this),this.type="CylinderGeometry",this.parameters={radiusTop:t,radiusBottom:e,height:r,radialSegments:i,heightSegments:n,openEnded:o,thetaStart:a,thetaLength:s},t=void 0!==t?t:20,e=void 0!==e?e:20,r=void 0!==r?r:100,i=i||8,n=n||1,o=void 0!==o&&o,a=void 0!==a?a:0,s=void 0!==s?s:2*Math.PI;var h,c,u=r/2,l=[],E=[];for(c=0;c<=n;c++){var p=[],d=[],f=c/n,m=f*(e-t)+t;for(h=0;h<=i;h++){var T=h/i,g=new THREE.Vector3;g.x=m*Math.sin(T*s+a),g.y=-f*r+u,g.z=m*Math.cos(T*s+a),this.vertices.push(g),p.push(this.vertices.length-1),d.push(new THREE.Vector2(T,1-f))}l.push(p),E.push(d)}var v,y,R=(e-t)/r;for(h=0;h<i;h++)for(0!==t?(v=this.vertices[l[0][h]].clone(),y=this.vertices[l[0][h+1]].clone()):(v=this.vertices[l[1][h]].clone(),y=this.vertices[l[1][h+1]].clone()),v.setY(Math.sqrt(v.x*v.x+v.z*v.z)*R).normalize(),y.setY(Math.sqrt(y.x*y.x+y.z*y.z)*R).normalize(),c=0;c<n;c++){var H=l[c][h],x=l[c+1][h],b=l[c+1][h+1],w=l[c][h+1],M=v.clone(),S=v.clone(),_=y.clone(),A=y.clone(),C=E[c][h].clone(),L=E[c+1][h].clone(),P=E[c+1][h+1].clone(),D=E[c][h+1].clone();this.faces.push(new THREE.Face3(H,x,w,[M,S,A])),this.faceVertexUvs[0].push([C,L,D]),this.faces.push(new THREE.Face3(x,b,w,[S.clone(),_,A.clone()])),this.faceVertexUvs[0].push([L.clone(),P,D.clone()])}if(!1===o&&t>0)for(this.vertices.push(new THREE.Vector3(0,u,0)),h=0;h<i;h++){H=l[0][h],x=l[0][h+1],b=this.vertices.length-1,M=new THREE.Vector3(0,1,0),S=new THREE.Vector3(0,1,0),_=new THREE.Vector3(0,1,0),C=E[0][h].clone(),L=E[0][h+1].clone(),P=new THREE.Vector2(L.x,0);this.faces.push(new THREE.Face3(H,x,b,[M,S,_],void 0,1)),this.faceVertexUvs[0].push([C,L,P])}if(!1===o&&e>0)for(this.vertices.push(new THREE.Vector3(0,-u,0)),h=0;h<i;h++){H=l[n][h+1],x=l[n][h],b=this.vertices.length-1,M=new THREE.Vector3(0,-1,0),S=new THREE.Vector3(0,-1,0),_=new THREE.Vector3(0,-1,0),C=E[n][h+1].clone(),L=E[n][h].clone(),P=new THREE.Vector2(L.x,1);this.faces.push(new THREE.Face3(H,x,b,[M,S,_],void 0,2)),this.faceVertexUvs[0].push([C,L,P])}this.computeFaceNormals()},THREE.CylinderGeometry.prototype=Object.create(THREE.Geometry.prototype),THREE.CylinderGeometry.prototype.constructor=THREE.CylinderGeometry,THREE.CylinderGeometry.prototype.clone=function(){var t=this.parameters;return new THREE.CylinderGeometry(t.radiusTop,t.radiusBottom,t.height,t.radialSegments,t.heightSegments,t.openEnded,t.thetaStart,t.thetaLength)},THREE.EdgesGeometry=function(t,e){THREE.BufferGeometry.call(this),e=void 0!==e?e:1;var r=Math.cos(THREE.Math.degToRad(e)),i=[0,0],n={};function o(t,e){return t-e}var a,s=["a","b","c"];t instanceof THREE.BufferGeometry?(a=new THREE.Geometry).fromBufferGeometry(t):a=t.clone(),a.mergeVertices(),a.computeFaceNormals();for(var h=a.vertices,c=a.faces,u=0,l=c.length;u<l;u++)for(var E=c[u],p=0;p<3;p++){i[0]=E[s[p]],i[1]=E[s[(p+1)%3]],i.sort(o),void 0===n[f=i.toString()]?n[f]={vert1:i[0],vert2:i[1],face1:u,face2:void 0}:n[f].face2=u}var d=[];for(var f in n){var m=n[f];if(void 0===m.face2||c[m.face1].normal.dot(c[m.face2].normal)<=r){var T=h[m.vert1];d.push(T.x),d.push(T.y),d.push(T.z),T=h[m.vert2],d.push(T.x),d.push(T.y),d.push(T.z)}}this.addAttribute("position",new THREE.BufferAttribute(new Float32Array(d),3))},THREE.EdgesGeometry.prototype=Object.create(THREE.BufferGeometry.prototype),THREE.EdgesGeometry.prototype.constructor=THREE.EdgesGeometry,THREE.ExtrudeGeometry=function(t,e){void 0!==t?(THREE.Geometry.call(this),this.type="ExtrudeGeometry",t=Array.isArray(t)?t:[t],this.addShapeList(t,e),this.computeFaceNormals()):t=[]},THREE.ExtrudeGeometry.prototype=Object.create(THREE.Geometry.prototype),THREE.ExtrudeGeometry.prototype.constructor=THREE.ExtrudeGeometry,THREE.ExtrudeGeometry.prototype.addShapeList=function(t,e){for(var r=t.length,i=0;i<r;i++){var n=t[i];this.addShape(n,e)}},THREE.ExtrudeGeometry.prototype.addShape=function(t,e){var r,i,n,o,a,s,h,c,u=void 0!==e.amount?e.amount:100,l=void 0!==e.bevelThickness?e.bevelThickness:6,E=void 0!==e.bevelSize?e.bevelSize:l-2,p=void 0!==e.bevelSegments?e.bevelSegments:3,d=void 0===e.bevelEnabled||e.bevelEnabled,f=void 0!==e.curveSegments?e.curveSegments:12,m=void 0!==e.steps?e.steps:1,T=e.extrudePath,g=!1,v=void 0!==e.UVGenerator?e.UVGenerator:THREE.ExtrudeGeometry.WorldUVGenerator;T&&(r=T.getSpacedPoints(m),g=!0,d=!1,i=void 0!==e.frames?e.frames:new THREE.TubeGeometry.FrenetFrames(T,m,!1),n=new THREE.Vector3,o=new THREE.Vector3,a=new THREE.Vector3),d||(p=0,l=0,E=0);var y=this,R=this.vertices.length,H=t.extractPoints(f),x=H.shape,b=H.holes,w=!THREE.ShapeUtils.isClockWise(x);if(w){for(x=x.reverse(),h=0,c=b.length;h<c;h++)s=b[h],THREE.ShapeUtils.isClockWise(s)&&(b[h]=s.reverse());w=!1}var M=THREE.ShapeUtils.triangulateShape(x,b),S=x;for(h=0,c=b.length;h<c;h++)s=b[h],x=x.concat(s);function _(t,e,r){return e||console.error("THREE.ExtrudeGeometry: vec does not exist"),e.clone().multiplyScalar(r).add(t)}var A,C,L,P,D,k,V=x.length,F=M.length;function U(t,e,r){var i,n,o=1,a=t.x-e.x,s=t.y-e.y,h=r.x-t.x,c=r.y-t.y,u=a*a+s*s,l=a*c-s*h;if(Math.abs(l)>Number.EPSILON){var E=Math.sqrt(u),p=Math.sqrt(h*h+c*c),d=e.x-s/E,f=e.y+a/E,m=((r.x-c/p-d)*c-(r.y+h/p-f)*h)/(a*c-s*h),T=(i=d+a*m-t.x)*i+(n=f+s*m-t.y)*n;if(T<=2)return new THREE.Vector2(i,n);o=Math.sqrt(T/2)}else{var g=!1;a>Number.EPSILON?h>Number.EPSILON&&(g=!0):a<-Number.EPSILON?h<-Number.EPSILON&&(g=!0):Math.sign(s)===Math.sign(c)&&(g=!0),g?(i=-s,n=a,o=Math.sqrt(u)):(i=a,n=s,o=Math.sqrt(u/2))}return new THREE.Vector2(i/o,n/o)}for(var B=[],O=0,G=S.length,N=G-1,I=O+1;O<G;O++,N++,I++)N===G&&(N=0),I===G&&(I=0),B[O]=U(S[O],S[N],S[I]);var z,W,j=[],X=B.concat();for(h=0,c=b.length;h<c;h++){for(s=b[h],z=[],O=0,N=(G=s.length)-1,I=O+1;O<G;O++,N++,I++)N===G&&(N=0),I===G&&(I=0),z[O]=U(s[O],s[N],s[I]);j.push(z),X=X.concat(z)}for(A=0;A<p;A++){for(P=l*(1-(L=A/p)),C=E*Math.sin(L*Math.PI/2),O=0,G=S.length;O<G;O++)Y((D=_(S[O],B[O],C)).x,D.y,-P);for(h=0,c=b.length;h<c;h++)for(s=b[h],z=j[h],O=0,G=s.length;O<G;O++)Y((D=_(s[O],z[O],C)).x,D.y,-P)}for(C=E,O=0;O<V;O++)D=d?_(x[O],X[O],C):x[O],g?(o.copy(i.normals[0]).multiplyScalar(D.x),n.copy(i.binormals[0]).multiplyScalar(D.y),a.copy(r[0]).add(o).add(n),Y(a.x,a.y,a.z)):Y(D.x,D.y,0);for(W=1;W<=m;W++)for(O=0;O<V;O++)D=d?_(x[O],X[O],C):x[O],g?(o.copy(i.normals[W]).multiplyScalar(D.x),n.copy(i.binormals[W]).multiplyScalar(D.y),a.copy(r[W]).add(o).add(n),Y(a.x,a.y,a.z)):Y(D.x,D.y,u/m*W);for(A=p-1;A>=0;A--){for(P=l*(1-(L=A/p)),C=E*Math.sin(L*Math.PI/2),O=0,G=S.length;O<G;O++)Y((D=_(S[O],B[O],C)).x,D.y,u+P);for(h=0,c=b.length;h<c;h++)for(s=b[h],z=j[h],O=0,G=s.length;O<G;O++)D=_(s[O],z[O],C),g?Y(D.x,D.y+r[m-1].y,r[m-1].x+P):Y(D.x,D.y,u+P)}function q(t,e){var r,i;for(O=t.length;--O>=0;){r=O,(i=O-1)<0&&(i=t.length-1);var n=0,o=m+2*p;for(n=0;n<o;n++){var a=V*n,s=V*(n+1);Q(e+r+a,e+i+a,e+i+s,e+r+s,t,n,o,r,i)}}}function Y(t,e,r){y.vertices.push(new THREE.Vector3(t,e,r))}function K(t,e,r){t+=R,e+=R,r+=R,y.faces.push(new THREE.Face3(t,e,r,null,null,0));var i=v.generateTopUV(y,t,e,r);y.faceVertexUvs[0].push(i)}function Q(t,e,r,i,n,o,a,s,h){t+=R,e+=R,r+=R,i+=R,y.faces.push(new THREE.Face3(t,e,i,null,null,1)),y.faces.push(new THREE.Face3(e,r,i,null,null,1));var c=v.generateSideWallUV(y,t,e,r,i);y.faceVertexUvs[0].push([c[0],c[1],c[3]]),y.faceVertexUvs[0].push([c[1],c[2],c[3]])}!function(){if(d){var t=0,e=V*t;for(O=0;O<F;O++)K((k=M[O])[2]+e,k[1]+e,k[0]+e);for(e=V*(t=m+2*p),O=0;O<F;O++)K((k=M[O])[0]+e,k[1]+e,k[2]+e)}else{for(O=0;O<F;O++)K((k=M[O])[2],k[1],k[0]);for(O=0;O<F;O++)K((k=M[O])[0]+V*m,k[1]+V*m,k[2]+V*m)}}(),function(){var t=0;for(q(S,t),t+=S.length,h=0,c=b.length;h<c;h++)q(s=b[h],t),t+=s.length}()},THREE.ExtrudeGeometry.WorldUVGenerator={generateTopUV:function(t,e,r,i){var n=t.vertices,o=n[e],a=n[r],s=n[i];return[new THREE.Vector2(o.x,o.y),new THREE.Vector2(a.x,a.y),new THREE.Vector2(s.x,s.y)]},generateSideWallUV:function(t,e,r,i,n){var o=t.vertices,a=o[e],s=o[r],h=o[i],c=o[n];return Math.abs(a.y-s.y)<.01?[new THREE.Vector2(a.x,1-a.z),new THREE.Vector2(s.x,1-s.z),new THREE.Vector2(h.x,1-h.z),new THREE.Vector2(c.x,1-c.z)]:[new THREE.Vector2(a.y,1-a.z),new THREE.Vector2(s.y,1-s.z),new THREE.Vector2(h.y,1-h.z),new THREE.Vector2(c.y,1-c.z)]}},THREE.ShapeGeometry=function(t,e){THREE.Geometry.call(this),this.type="ShapeGeometry",!1===Array.isArray(t)&&(t=[t]),this.addShapeList(t,e),this.computeFaceNormals()},THREE.ShapeGeometry.prototype=Object.create(THREE.Geometry.prototype),THREE.ShapeGeometry.prototype.constructor=THREE.ShapeGeometry,THREE.ShapeGeometry.prototype.addShapeList=function(t,e){for(var r=0,i=t.length;r<i;r++)this.addShape(t[r],e);return this},THREE.ShapeGeometry.prototype.addShape=function(t,e){void 0===e&&(e={});var r,i,n,o=void 0!==e.curveSegments?e.curveSegments:12,a=e.material,s=void 0===e.UVGenerator?THREE.ExtrudeGeometry.WorldUVGenerator:e.UVGenerator,h=this.vertices.length,c=t.extractPoints(o),u=c.shape,l=c.holes,E=!THREE.ShapeUtils.isClockWise(u);if(E){for(u=u.reverse(),r=0,i=l.length;r<i;r++)n=l[r],THREE.ShapeUtils.isClockWise(n)&&(l[r]=n.reverse());E=!1}var p=THREE.ShapeUtils.triangulateShape(u,l);for(r=0,i=l.length;r<i;r++)n=l[r],u=u.concat(n);var d,f,m=u.length,T=p.length;for(r=0;r<m;r++)d=u[r],this.vertices.push(new THREE.Vector3(d.x,d.y,0));for(r=0;r<T;r++){var g=(f=p[r])[0]+h,v=f[1]+h,y=f[2]+h;this.faces.push(new THREE.Face3(g,v,y,null,null,a)),this.faceVertexUvs[0].push(s.generateTopUV(this,g,v,y))}},THREE.LatheGeometry=function(t,e,r,i){THREE.Geometry.call(this),this.type="LatheGeometry",this.parameters={points:t,segments:e,phiStart:r,phiLength:i},e=e||12,r=r||0,i=i||2*Math.PI;for(var n=1/(t.length-1),o=1/e,a=0,s=e;a<=s;a++)for(var h=r+a*o*i,c=Math.cos(h),u=Math.sin(h),l=0,E=t.length;l<E;l++){var p=t[l],d=new THREE.Vector3;d.x=c*p.x-u*p.y,d.y=u*p.x+c*p.y,d.z=p.z,this.vertices.push(d)}var f=t.length;for(a=0,s=e;a<s;a++)for(l=0,E=t.length-1;l<E;l++){var m=l+f*a,T=m,g=m+f,v=(c=m+1+f,m+1),y=a*o,R=l*n,H=y+o,x=R+n;this.faces.push(new THREE.Face3(T,g,v)),this.faceVertexUvs[0].push([new THREE.Vector2(y,R),new THREE.Vector2(H,R),new THREE.Vector2(y,x)]),this.faces.push(new THREE.Face3(g,c,v)),this.faceVertexUvs[0].push([new THREE.Vector2(H,R),new THREE.Vector2(H,x),new THREE.Vector2(y,x)])}this.mergeVertices(),this.computeFaceNormals(),this.computeVertexNormals()},THREE.LatheGeometry.prototype=Object.create(THREE.Geometry.prototype),THREE.LatheGeometry.prototype.constructor=THREE.LatheGeometry,THREE.PlaneGeometry=function(t,e,r,i){THREE.Geometry.call(this),this.type="PlaneGeometry",this.parameters={width:t,height:e,widthSegments:r,heightSegments:i},this.fromBufferGeometry(new THREE.PlaneBufferGeometry(t,e,r,i))},THREE.PlaneGeometry.prototype=Object.create(THREE.Geometry.prototype),THREE.PlaneGeometry.prototype.constructor=THREE.PlaneGeometry,THREE.PlaneGeometry.prototype.clone=function(){var t=this.parameters;return new THREE.PlaneGeometry(t.width,t.height,t.widthSegments,t.heightSegments)},THREE.PlaneBufferGeometry=function(t,e,r,i){THREE.BufferGeometry.call(this),this.type="PlaneBufferGeometry",this.parameters={width:t,height:e,widthSegments:r,heightSegments:i};for(var n=t/2,o=e/2,a=Math.floor(r)||1,s=Math.floor(i)||1,h=a+1,c=s+1,u=t/a,l=e/s,E=new Float32Array(h*c*3),p=new Float32Array(h*c*3),d=new Float32Array(h*c*2),f=0,m=0,T=0;T<c;T++)for(var g=T*l-o,v=0;v<h;v++){var y=v*u-n;E[f]=y,E[f+1]=-g,p[f+2]=1,d[m]=v/a,d[m+1]=1-T/s,f+=3,m+=2}f=0;var R=new(E.length/3>65535?Uint32Array:Uint16Array)(a*s*6);for(T=0;T<s;T++)for(v=0;v<a;v++){var H=v+h*T,x=v+h*(T+1),b=v+1+h*(T+1),w=v+1+h*T;R[f]=H,R[f+1]=x,R[f+2]=w,R[f+3]=x,R[f+4]=b,R[f+5]=w,f+=6}this.setIndex(new THREE.BufferAttribute(R,1)),this.addAttribute("position",new THREE.BufferAttribute(E,3)),this.addAttribute("normal",new THREE.BufferAttribute(p,3)),this.addAttribute("uv",new THREE.BufferAttribute(d,2))},THREE.PlaneBufferGeometry.prototype=Object.create(THREE.BufferGeometry.prototype),THREE.PlaneBufferGeometry.prototype.constructor=THREE.PlaneBufferGeometry,THREE.PlaneBufferGeometry.prototype.clone=function(){var t=this.parameters;return new THREE.PlaneBufferGeometry(t.width,t.height,t.widthSegments,t.heightSegments)},THREE.RingGeometry=function(t,e,r,i,n,o){THREE.Geometry.call(this),this.type="RingGeometry",this.parameters={innerRadius:t,outerRadius:e,thetaSegments:r,phiSegments:i,thetaStart:n,thetaLength:o},t=t||0,e=e||50,n=void 0!==n?n:0,o=void 0!==o?o:2*Math.PI,r=void 0!==r?Math.max(3,r):8;var a,s,h=[],c=t,u=(e-t)/(i=void 0!==i?Math.max(1,i):8);for(a=0;a<i+1;a++){for(s=0;s<r+1;s++){var l=new THREE.Vector3,E=n+s/r*o;l.x=c*Math.cos(E),l.y=c*Math.sin(E),this.vertices.push(l),h.push(new THREE.Vector2((l.x/e+1)/2,(l.y/e+1)/2))}c+=u}var p=new THREE.Vector3(0,0,1);for(a=0;a<i;a++){var d=a*(r+1);for(s=0;s<r;s++){var f=E=s+d,m=E+r+1,T=E+r+2;this.faces.push(new THREE.Face3(f,m,T,[p.clone(),p.clone(),p.clone()])),this.faceVertexUvs[0].push([h[f].clone(),h[m].clone(),h[T].clone()]),f=E,m=E+r+2,T=E+1,this.faces.push(new THREE.Face3(f,m,T,[p.clone(),p.clone(),p.clone()])),this.faceVertexUvs[0].push([h[f].clone(),h[m].clone(),h[T].clone()])}}this.computeFaceNormals(),this.boundingSphere=new THREE.Sphere(new THREE.Vector3,c)},THREE.RingGeometry.prototype=Object.create(THREE.Geometry.prototype),THREE.RingGeometry.prototype.constructor=THREE.RingGeometry,THREE.RingGeometry.prototype.clone=function(){var t=this.parameters;return new THREE.RingGeometry(t.innerRadius,t.outerRadius,t.thetaSegments,t.phiSegments,t.thetaStart,t.thetaLength)},THREE.SphereGeometry=function(t,e,r,i,n,o,a){THREE.Geometry.call(this),this.type="SphereGeometry",this.parameters={radius:t,widthSegments:e,heightSegments:r,phiStart:i,phiLength:n,thetaStart:o,thetaLength:a},this.fromBufferGeometry(new THREE.SphereBufferGeometry(t,e,r,i,n,o,a))},THREE.SphereGeometry.prototype=Object.create(THREE.Geometry.prototype),THREE.SphereGeometry.prototype.constructor=THREE.SphereGeometry,THREE.SphereGeometry.prototype.clone=function(){var t=this.parameters;return new THREE.SphereGeometry(t.radius,t.widthSegments,t.heightSegments,t.phiStart,t.phiLength,t.thetaStart,t.thetaLength)},THREE.SphereBufferGeometry=function(t,e,r,i,n,o,a){THREE.BufferGeometry.call(this),this.type="SphereBufferGeometry",this.parameters={radius:t,widthSegments:e,heightSegments:r,phiStart:i,phiLength:n,thetaStart:o,thetaLength:a},t=t||50,e=Math.max(3,Math.floor(e)||8),r=Math.max(2,Math.floor(r)||6),i=void 0!==i?i:0,n=void 0!==n?n:2*Math.PI;for(var s=(o=void 0!==o?o:0)+(a=void 0!==a?a:Math.PI),h=(e+1)*(r+1),c=new THREE.BufferAttribute(new Float32Array(3*h),3),u=new THREE.BufferAttribute(new Float32Array(3*h),3),l=new THREE.BufferAttribute(new Float32Array(2*h),2),E=0,p=[],d=new THREE.Vector3,f=0;f<=r;f++){for(var m=[],T=f/r,g=0;g<=e;g++){var v=g/e,y=-t*Math.cos(i+v*n)*Math.sin(o+T*a),R=t*Math.cos(o+T*a),H=t*Math.sin(i+v*n)*Math.sin(o+T*a);d.set(y,R,H).normalize(),c.setXYZ(E,y,R,H),u.setXYZ(E,d.x,d.y,d.z),l.setXY(E,v,1-T),m.push(E),E++}p.push(m)}var x=[];for(f=0;f<r;f++)for(g=0;g<e;g++){var b=p[f][g+1],w=p[f][g],M=p[f+1][g],S=p[f+1][g+1];(0!==f||o>0)&&x.push(b,w,S),(f!==r-1||s<Math.PI)&&x.push(w,M,S)}this.setIndex(new(c.count>65535?THREE.Uint32Attribute:THREE.Uint16Attribute)(x,1)),this.addAttribute("position",c),this.addAttribute("normal",u),this.addAttribute("uv",l),this.boundingSphere=new THREE.Sphere(new THREE.Vector3,t)},THREE.SphereBufferGeometry.prototype=Object.create(THREE.BufferGeometry.prototype),THREE.SphereBufferGeometry.prototype.constructor=THREE.SphereBufferGeometry,THREE.SphereBufferGeometry.prototype.clone=function(){var t=this.parameters;return new THREE.SphereBufferGeometry(t.radius,t.widthSegments,t.heightSegments,t.phiStart,t.phiLength,t.thetaStart,t.thetaLength)},THREE.TorusGeometry=function(t,e,r,i,n){THREE.Geometry.call(this),this.type="TorusGeometry",this.parameters={radius:t,tube:e,radialSegments:r,tubularSegments:i,arc:n},t=t||100,e=e||40,r=r||8,i=i||6,n=n||2*Math.PI;for(var o=new THREE.Vector3,a=[],s=[],h=0;h<=r;h++)for(var c=0;c<=i;c++){var u=c/i*n,l=h/r*Math.PI*2;o.x=t*Math.cos(u),o.y=t*Math.sin(u);var E=new THREE.Vector3;E.x=(t+e*Math.cos(l))*Math.cos(u),E.y=(t+e*Math.cos(l))*Math.sin(u),E.z=e*Math.sin(l),this.vertices.push(E),a.push(new THREE.Vector2(c/i,h/r)),s.push(E.clone().sub(o).normalize())}for(h=1;h<=r;h++)for(c=1;c<=i;c++){var p=(i+1)*h+c-1,d=(i+1)*(h-1)+c-1,f=(i+1)*(h-1)+c,m=(i+1)*h+c,T=new THREE.Face3(p,d,m,[s[p].clone(),s[d].clone(),s[m].clone()]);this.faces.push(T),this.faceVertexUvs[0].push([a[p].clone(),a[d].clone(),a[m].clone()]),T=new THREE.Face3(d,f,m,[s[d].clone(),s[f].clone(),s[m].clone()]),this.faces.push(T),this.faceVertexUvs[0].push([a[d].clone(),a[f].clone(),a[m].clone()])}this.computeFaceNormals()},THREE.TorusGeometry.prototype=Object.create(THREE.Geometry.prototype),THREE.TorusGeometry.prototype.constructor=THREE.TorusGeometry,THREE.TorusGeometry.prototype.clone=function(){var t=this.parameters;return new THREE.TorusGeometry(t.radius,t.tube,t.radialSegments,t.tubularSegments,t.arc)},THREE.TorusKnotGeometry=function(t,e,r,i,n,o,a){THREE.Geometry.call(this),this.type="TorusKnotGeometry",this.parameters={radius:t,tube:e,radialSegments:r,tubularSegments:i,p:n,q:o,heightScale:a},t=t||100,e=e||40,r=r||64,i=i||8,n=n||2,o=o||3,a=a||1;for(var s=new Array(r),h=new THREE.Vector3,c=new THREE.Vector3,u=new THREE.Vector3,l=0;l<r;++l){s[l]=new Array(i);var E=l/r*2*n*Math.PI,p=C(E,o,n,t,a),d=C(E+.01,o,n,t,a);h.subVectors(d,p),c.addVectors(d,p),u.crossVectors(h,c),c.crossVectors(u,h),u.normalize(),c.normalize();for(var f=0;f<i;++f){var m=f/i*2*Math.PI,T=-e*Math.cos(m),g=e*Math.sin(m),v=new THREE.Vector3;v.x=p.x+T*c.x+g*u.x,v.y=p.y+T*c.y+g*u.y,v.z=p.z+T*c.z+g*u.z,s[l][f]=this.vertices.push(v)-1}}for(l=0;l<r;++l)for(f=0;f<i;++f){var y=(l+1)%r,R=(f+1)%i,H=s[l][f],x=s[y][f],b=s[y][R],w=s[l][R],M=new THREE.Vector2(l/r,f/i),S=new THREE.Vector2((l+1)/r,f/i),_=new THREE.Vector2((l+1)/r,(f+1)/i),A=new THREE.Vector2(l/r,(f+1)/i);this.faces.push(new THREE.Face3(H,x,w)),this.faceVertexUvs[0].push([M,S,A]),this.faces.push(new THREE.Face3(x,b,w)),this.faceVertexUvs[0].push([S.clone(),_,A.clone()])}function C(t,e,r,i,n){var o=Math.cos(t),a=Math.sin(t),s=e/r*t,h=Math.cos(s),c=i*(2+h)*.5*o,u=i*(2+h)*a*.5,l=n*i*Math.sin(s)*.5;return new THREE.Vector3(c,u,l)}this.computeFaceNormals(),this.computeVertexNormals()},THREE.TorusKnotGeometry.prototype=Object.create(THREE.Geometry.prototype),THREE.TorusKnotGeometry.prototype.constructor=THREE.TorusKnotGeometry,THREE.TorusKnotGeometry.prototype.clone=function(){var t=this.parameters;return new THREE.TorusKnotGeometry(t.radius,t.tube,t.radialSegments,t.tubularSegments,t.p,t.q,t.heightScale)},THREE.TubeGeometry=function(t,e,r,i,n,o){THREE.Geometry.call(this),this.type="TubeGeometry",this.parameters={path:t,segments:e,radius:r,radialSegments:i,closed:n,taper:o},e=e||64,r=r||1,i=i||8,n=n||!1,o=o||THREE.TubeGeometry.NoTaper;var a,s,h,c,u,l,E,p,d,f,m,T,g,v,y,R,H,x,b,w,M,S,_,A=[],C=this,L=e+1,P=new THREE.Vector3,D=new THREE.TubeGeometry.FrenetFrames(t,e,n),k=D.tangents,V=D.normals,F=D.binormals;for(this.tangents=k,this.normals=V,this.binormals=F,d=0;d<L;d++)for(A[d]=[],h=d/(L-1),p=t.getPointAt(h),k[d],a=V[d],s=F[d],u=r*o(h),f=0;f<i;f++)c=f/i*2*Math.PI,l=-u*Math.cos(c),E=u*Math.sin(c),P.copy(p),P.x+=l*a.x+E*s.x,P.y+=l*a.y+E*s.y,P.z+=l*a.z+E*s.z,A[d][f]=(M=P.x,S=P.y,_=P.z,C.vertices.push(new THREE.Vector3(M,S,_))-1);for(d=0;d<e;d++)for(f=0;f<i;f++)m=n?(d+1)%e:d+1,T=(f+1)%i,g=A[d][f],v=A[m][f],y=A[m][T],R=A[d][T],H=new THREE.Vector2(d/e,f/i),x=new THREE.Vector2((d+1)/e,f/i),b=new THREE.Vector2((d+1)/e,(f+1)/i),w=new THREE.Vector2(d/e,(f+1)/i),this.faces.push(new THREE.Face3(g,v,R)),this.faceVertexUvs[0].push([H,x,w]),this.faces.push(new THREE.Face3(v,y,R)),this.faceVertexUvs[0].push([x.clone(),b,w.clone()]);this.computeFaceNormals(),this.computeVertexNormals()},THREE.TubeGeometry.prototype=Object.create(THREE.Geometry.prototype),THREE.TubeGeometry.prototype.constructor=THREE.TubeGeometry,THREE.TubeGeometry.prototype.clone=function(){return new this.constructor(this.parameters.path,this.parameters.segments,this.parameters.radius,this.parameters.radialSegments,this.parameters.closed,this.parameters.taper)},THREE.TubeGeometry.NoTaper=function(t){return 1},THREE.TubeGeometry.SinusoidalTaper=function(t){return Math.sin(Math.PI*t)},THREE.TubeGeometry.FrenetFrames=function(t,e,r){var i,n,o,a,s,h,c,u=new THREE.Vector3,l=[],E=[],p=[],d=new THREE.Vector3,f=new THREE.Matrix4,m=e+1;for(this.tangents=l,this.normals=E,this.binormals=p,h=0;h<m;h++)c=h/(m-1),l[h]=t.getTangentAt(c),l[h].normalize();for(function(){E[0]=new THREE.Vector3,p[0]=new THREE.Vector3,n=Number.MAX_VALUE,o=Math.abs(l[0].x),a=Math.abs(l[0].y),s=Math.abs(l[0].z),o<=n&&(n=o,u.set(1,0,0));a<=n&&(n=a,u.set(0,1,0));s<=n&&u.set(0,0,1);d.crossVectors(l[0],u).normalize(),E[0].crossVectors(l[0],d),p[0].crossVectors(l[0],E[0])}(),h=1;h<m;h++)E[h]=E[h-1].clone(),p[h]=p[h-1].clone(),d.crossVectors(l[h-1],l[h]),d.length()>Number.EPSILON&&(d.normalize(),i=Math.acos(THREE.Math.clamp(l[h-1].dot(l[h]),-1,1)),E[h].applyMatrix4(f.makeRotationAxis(d,i))),p[h].crossVectors(l[h],E[h]);if(r)for(i=Math.acos(THREE.Math.clamp(E[0].dot(E[m-1]),-1,1)),i/=m-1,l[0].dot(d.crossVectors(E[0],E[m-1]))>0&&(i=-i),h=1;h<m;h++)E[h].applyMatrix4(f.makeRotationAxis(l[h],i*h)),p[h].crossVectors(l[h],E[h])},THREE.PolyhedronGeometry=function(t,e,r,i){THREE.Geometry.call(this),this.type="PolyhedronGeometry",this.parameters={vertices:t,indices:e,radius:r,detail:i},r=r||1,i=i||0;for(var n=this,o=0,a=t.length;o<a;o+=3)y(new THREE.Vector3(t[o],t[o+1],t[o+2]));var s=this.vertices,h=[],c=(o=0,0);for(a=e.length;o<a;o+=3,c++){var u=s[e[o]],l=s[e[o+1]],E=s[e[o+2]];h[c]=new THREE.Face3(u.index,l.index,E.index,[u.clone(),l.clone(),E.clone()],void 0,c)}var p=new THREE.Vector3;for(o=0,a=h.length;o<a;o++)H(h[o],i);for(o=0,a=this.faceVertexUvs[0].length;o<a;o++){var d=this.faceVertexUvs[0][o],f=d[0].x,m=d[1].x,T=d[2].x,g=Math.max(f,m,T),v=Math.min(f,m,T);g>.9&&v<.1&&(f<.2&&(d[0].x+=1),m<.2&&(d[1].x+=1),T<.2&&(d[2].x+=1))}for(o=0,a=this.vertices.length;o<a;o++)this.vertices[o].multiplyScalar(r);function y(t){var e=t.normalize().clone();e.index=n.vertices.push(e)-1;var r=x(t)/2/Math.PI+.5,i=function(t){return Math.atan2(-t.y,Math.sqrt(t.x*t.x+t.z*t.z))}(t)/Math.PI+.5;return e.uv=new THREE.Vector2(r,1-i),e}function R(t,e,r,i){var o=new THREE.Face3(t.index,e.index,r.index,[t.clone(),e.clone(),r.clone()],void 0,i);n.faces.push(o),p.copy(t).add(e).add(r).divideScalar(3);var a=x(p);n.faceVertexUvs[0].push([b(t.uv,t,a),b(e.uv,e,a),b(r.uv,r,a)])}function H(t,e){for(var r=Math.pow(2,e),i=y(n.vertices[t.a]),o=y(n.vertices[t.b]),a=y(n.vertices[t.c]),s=[],h=t.materialIndex,c=0;c<=r;c++){s[c]=[];for(var u=y(i.clone().lerp(a,c/r)),l=y(o.clone().lerp(a,c/r)),E=r-c,p=0;p<=E;p++)s[c][p]=0===p&&c===r?u:y(u.clone().lerp(l,p/E))}for(c=0;c<r;c++)for(p=0;p<2*(r-c)-1;p++){var d=Math.floor(p/2);p%2==0?R(s[c][d+1],s[c+1][d],s[c][d],h):R(s[c][d+1],s[c+1][d+1],s[c+1][d],h)}}function x(t){return Math.atan2(t.z,-t.x)}function b(t,e,r){return r<0&&1===t.x&&(t=new THREE.Vector2(t.x-1,t.y)),0===e.x&&0===e.z&&(t=new THREE.Vector2(r/2/Math.PI+.5,t.y)),t.clone()}this.mergeVertices(),this.computeFaceNormals(),this.boundingSphere=new THREE.Sphere(new THREE.Vector3,r)},THREE.PolyhedronGeometry.prototype=Object.create(THREE.Geometry.prototype),THREE.PolyhedronGeometry.prototype.constructor=THREE.PolyhedronGeometry,THREE.PolyhedronGeometry.prototype.clone=function(){var t=this.parameters;return new THREE.PolyhedronGeometry(t.vertices,t.indices,t.radius,t.detail)},THREE.DodecahedronGeometry=function(t,e){var r=(1+Math.sqrt(5))/2,i=1/r,n=[-1,-1,-1,-1,-1,1,-1,1,-1,-1,1,1,1,-1,-1,1,-1,1,1,1,-1,1,1,1,0,-i,-r,0,-i,r,0,i,-r,0,i,r,-i,-r,0,-i,r,0,i,-r,0,i,r,0,-r,0,-i,r,0,-i,-r,0,i,r,0,i];THREE.PolyhedronGeometry.call(this,n,[3,11,7,3,7,15,3,15,13,7,19,17,7,17,6,7,6,15,17,4,8,17,8,10,17,10,6,8,0,16,8,16,2,8,2,10,0,12,1,0,1,18,0,18,16,6,10,2,6,2,13,6,13,15,2,16,18,2,18,3,2,3,13,18,1,9,18,9,11,18,11,3,4,14,12,4,12,0,4,0,8,11,9,5,11,5,19,11,19,7,19,5,14,19,14,4,19,4,17,1,12,14,1,14,5,1,5,9],t,e),this.type="DodecahedronGeometry",this.parameters={radius:t,detail:e}},THREE.DodecahedronGeometry.prototype=Object.create(THREE.PolyhedronGeometry.prototype),THREE.DodecahedronGeometry.prototype.constructor=THREE.DodecahedronGeometry,THREE.DodecahedronGeometry.prototype.clone=function(){var t=this.parameters;return new THREE.DodecahedronGeometry(t.radius,t.detail)},THREE.IcosahedronGeometry=function(t,e){var r=(1+Math.sqrt(5))/2,i=[-1,r,0,1,r,0,-1,-r,0,1,-r,0,0,-1,r,0,1,r,0,-1,-r,0,1,-r,r,0,-1,r,0,1,-r,0,-1,-r,0,1];THREE.PolyhedronGeometry.call(this,i,[0,11,5,0,5,1,0,1,7,0,7,10,0,10,11,1,5,9,5,11,4,11,10,2,10,7,6,7,1,8,3,9,4,3,4,2,3,2,6,3,6,8,3,8,9,4,9,5,2,4,11,6,2,10,8,6,7,9,8,1],t,e),this.type="IcosahedronGeometry",this.parameters={radius:t,detail:e}},THREE.IcosahedronGeometry.prototype=Object.create(THREE.PolyhedronGeometry.prototype),THREE.IcosahedronGeometry.prototype.constructor=THREE.IcosahedronGeometry,THREE.IcosahedronGeometry.prototype.clone=function(){var t=this.parameters;return new THREE.IcosahedronGeometry(t.radius,t.detail)},THREE.OctahedronGeometry=function(t,e){THREE.PolyhedronGeometry.call(this,[1,0,0,-1,0,0,0,1,0,0,-1,0,0,0,1,0,0,-1],[0,2,4,0,4,3,0,3,5,0,5,2,1,2,5,1,5,3,1,3,4,1,4,2],t,e),this.type="OctahedronGeometry",this.parameters={radius:t,detail:e}},THREE.OctahedronGeometry.prototype=Object.create(THREE.PolyhedronGeometry.prototype),THREE.OctahedronGeometry.prototype.constructor=THREE.OctahedronGeometry,THREE.OctahedronGeometry.prototype.clone=function(){var t=this.parameters;return new THREE.OctahedronGeometry(t.radius,t.detail)},THREE.TetrahedronGeometry=function(t,e){THREE.PolyhedronGeometry.call(this,[1,1,1,-1,-1,1,-1,1,-1,1,-1,-1],[2,1,0,0,3,2,1,3,0,2,3,1],t,e),this.type="TetrahedronGeometry",this.parameters={radius:t,detail:e}},THREE.TetrahedronGeometry.prototype=Object.create(THREE.PolyhedronGeometry.prototype),THREE.TetrahedronGeometry.prototype.constructor=THREE.TetrahedronGeometry,THREE.TetrahedronGeometry.prototype.clone=function(){var t=this.parameters;return new THREE.TetrahedronGeometry(t.radius,t.detail)},THREE.ParametricGeometry=function(t,e,r){THREE.Geometry.call(this),this.type="ParametricGeometry",this.parameters={func:t,slices:e,stacks:r};var i,n,o,a,s,h,c,u,l,E,p,d,f=this.vertices,m=this.faces,T=this.faceVertexUvs[0],g=e+1;for(i=0;i<=r;i++)for(a=i/r,n=0;n<=e;n++)o=t(n/e,a),f.push(o);for(i=0;i<r;i++)for(n=0;n<e;n++)s=i*g+n,h=i*g+n+1,c=(i+1)*g+n+1,u=(i+1)*g+n,l=new THREE.Vector2(n/e,i/r),E=new THREE.Vector2((n+1)/e,i/r),p=new THREE.Vector2((n+1)/e,(i+1)/r),d=new THREE.Vector2(n/e,(i+1)/r),m.push(new THREE.Face3(s,h,u)),T.push([l,E,d]),m.push(new THREE.Face3(h,c,u)),T.push([E.clone(),p,d.clone()]);this.computeFaceNormals(),this.computeVertexNormals()},THREE.ParametricGeometry.prototype=Object.create(THREE.Geometry.prototype),THREE.ParametricGeometry.prototype.constructor=THREE.ParametricGeometry,THREE.WireframeGeometry=function(t){THREE.BufferGeometry.call(this);var e=[0,0],r={};function i(t,e){return t-e}var n=["a","b","c"];if(t instanceof THREE.Geometry){for(var o=t.vertices,a=t.faces,s=0,h=new Uint32Array(6*a.length),c=0,u=a.length;c<u;c++)for(var l=a[c],E=0;E<3;E++){e[0]=l[n[E]],e[1]=l[n[(E+1)%3]],e.sort(i),void 0===r[H=e.toString()]&&(h[2*s]=e[0],h[2*s+1]=e[1],r[H]=!0,s++)}var p=new Float32Array(2*s*3);for(c=0,u=s;c<u;c++)for(E=0;E<2;E++){var d=o[h[2*c+E]];p[(x=6*c+3*E)+0]=d.x,p[x+1]=d.y,p[x+2]=d.z}this.addAttribute("position",new THREE.BufferAttribute(p,3))}else if(t instanceof THREE.BufferGeometry)if(null!==t.index){var f=t.index.array,m=(o=t.attributes.position,t.drawcalls);s=0;0===m.length&&t.addGroup(0,f.length);h=new Uint32Array(2*f.length);for(var T=0,g=m.length;T<g;++T)for(var v=m[T],y=v.start,R=(c=y,y+v.count);c<R;c+=3)for(E=0;E<3;E++){var H;e[0]=f[c+E],e[1]=f[c+(E+1)%3],e.sort(i),void 0===r[H=e.toString()]&&(h[2*s]=e[0],h[2*s+1]=e[1],r[H]=!0,s++)}for(p=new Float32Array(2*s*3),c=0,u=s;c<u;c++)for(E=0;E<2;E++){var x=6*c+3*E,b=h[2*c+E];p[x+0]=o.getX(b),p[x+1]=o.getY(b),p[x+2]=o.getZ(b)}this.addAttribute("position",new THREE.BufferAttribute(p,3))}else{var w=(s=(o=t.attributes.position.array).length/3)/3;for(p=new Float32Array(2*s*3),c=0,u=w;c<u;c++)for(E=0;E<3;E++){var M=9*c+3*E;p[(x=18*c+6*E)+0]=o[M],p[x+1]=o[M+1],p[x+2]=o[M+2];b=9*c+(E+1)%3*3;p[x+3]=o[b],p[x+4]=o[b+1],p[x+5]=o[b+2]}this.addAttribute("position",new THREE.BufferAttribute(p,3))}},THREE.WireframeGeometry.prototype=Object.create(THREE.BufferGeometry.prototype),THREE.WireframeGeometry.prototype.constructor=THREE.WireframeGeometry,THREE.AxisHelper=function(t){t=t||1;var e=new Float32Array([0,0,0,t,0,0,0,0,0,0,t,0,0,0,0,0,0,t]),r=new Float32Array([1,0,0,1,.6,0,0,1,0,.6,1,0,0,0,1,0,.6,1]),i=new THREE.BufferGeometry;i.addAttribute("position",new THREE.BufferAttribute(e,3)),i.addAttribute("color",new THREE.BufferAttribute(r,3));var n=new THREE.LineBasicMaterial({vertexColors:THREE.VertexColors});THREE.LineSegments.call(this,i,n)},THREE.AxisHelper.prototype=Object.create(THREE.LineSegments.prototype),THREE.AxisHelper.prototype.constructor=THREE.AxisHelper,THREE.ArrowHelper=function(){var t=new THREE.Geometry;t.vertices.push(new THREE.Vector3(0,0,0),new THREE.Vector3(0,1,0));var e=new THREE.CylinderGeometry(0,.5,1,5,1);return e.translate(0,-.5,0),function(r,i,n,o,a,s){THREE.Object3D.call(this),void 0===o&&(o=16776960),void 0===n&&(n=1),void 0===a&&(a=.2*n),void 0===s&&(s=.2*a),this.position.copy(i),a<n&&(this.line=new THREE.Line(t,new THREE.LineBasicMaterial({color:o})),this.line.matrixAutoUpdate=!1,this.add(this.line)),this.cone=new THREE.Mesh(e,new THREE.MeshBasicMaterial({color:o})),this.cone.matrixAutoUpdate=!1,this.add(this.cone),this.setDirection(r),this.setLength(n,a,s)}}(),THREE.ArrowHelper.prototype=Object.create(THREE.Object3D.prototype),THREE.ArrowHelper.prototype.constructor=THREE.ArrowHelper,THREE.ArrowHelper.prototype.setDirection=function(){var t,e=new THREE.Vector3;return function(r){r.y>.99999?this.quaternion.set(0,0,0,1):r.y<-.99999?this.quaternion.set(1,0,0,0):(e.set(r.z,0,-r.x).normalize(),t=Math.acos(r.y),this.quaternion.setFromAxisAngle(e,t))}}(),THREE.ArrowHelper.prototype.setLength=function(t,e,r){void 0===e&&(e=.2*t),void 0===r&&(r=.2*e),e<t&&(this.line.scale.set(1,t-e,1),this.line.updateMatrix()),this.cone.scale.set(r,e,r),this.cone.position.y=t,this.cone.updateMatrix()},THREE.ArrowHelper.prototype.setColor=function(t){void 0!==this.line&&this.line.material.color.set(t),this.cone.material.color.set(t)},THREE.BoxHelper=function(t){var e=new Uint16Array([0,1,1,2,2,3,3,0,4,5,5,6,6,7,7,4,0,4,1,5,2,6,3,7]),r=new Float32Array(24),i=new THREE.BufferGeometry;i.setIndex(new THREE.BufferAttribute(e,1)),i.addAttribute("position",new THREE.BufferAttribute(r,3)),THREE.LineSegments.call(this,i,new THREE.LineBasicMaterial({color:16776960})),void 0!==t&&this.update(t)},THREE.BoxHelper.prototype=Object.create(THREE.LineSegments.prototype),THREE.BoxHelper.prototype.constructor=THREE.BoxHelper,THREE.BoxHelper.prototype.update=function(){var t=new THREE.Box3;return function(e){if(t.setFromObject(e),!t.empty()){var r=t.min,i=t.max,n=this.geometry.attributes.position,o=n.array;o[0]=i.x,o[1]=i.y,o[2]=i.z,o[3]=r.x,o[4]=i.y,o[5]=i.z,o[6]=r.x,o[7]=r.y,o[8]=i.z,o[9]=i.x,o[10]=r.y,o[11]=i.z,o[12]=i.x,o[13]=i.y,o[14]=r.z,o[15]=r.x,o[16]=i.y,o[17]=r.z,o[18]=r.x,o[19]=r.y,o[20]=r.z,o[21]=i.x,o[22]=r.y,o[23]=r.z,n.needsUpdate=!0,this.geometry.computeBoundingSphere()}}}(),THREE.BoundingBoxHelper=function(t,e){var r=void 0!==e?e:8947848;this.object=t,this.box=new THREE.Box3,THREE.Mesh.call(this,new THREE.BoxGeometry(1,1,1),new THREE.MeshBasicMaterial({color:r,wireframe:!0}))},THREE.BoundingBoxHelper.prototype=Object.create(THREE.Mesh.prototype),THREE.BoundingBoxHelper.prototype.constructor=THREE.BoundingBoxHelper,THREE.BoundingBoxHelper.prototype.update=function(){this.box.setFromObject(this.object),this.box.size(this.scale),this.box.center(this.position)},THREE.CameraHelper=function(t){var e=new THREE.Geometry,r=new THREE.LineBasicMaterial({color:16777215,vertexColors:THREE.FaceColors}),i={},n=16755200,o=16711680,a=43775,s=3355443;function h(t,e,r){c(t,r),c(e,r)}function c(t,r){e.vertices.push(new THREE.Vector3),e.colors.push(new THREE.Color(r)),void 0===i[t]&&(i[t]=[]),i[t].push(e.vertices.length-1)}h("n1","n2",n),h("n2","n4",n),h("n4","n3",n),h("n3","n1",n),h("f1","f2",n),h("f2","f4",n),h("f4","f3",n),h("f3","f1",n),h("n1","f1",n),h("n2","f2",n),h("n3","f3",n),h("n4","f4",n),h("p","n1",o),h("p","n2",o),h("p","n3",o),h("p","n4",o),h("u1","u2",a),h("u2","u3",a),h("u3","u1",a),h("c","t",16777215),h("p","c",s),h("cn1","cn2",s),h("cn3","cn4",s),h("cf1","cf2",s),h("cf3","cf4",s),THREE.LineSegments.call(this,e,r),this.camera=t,this.camera.updateProjectionMatrix(),this.matrix=t.matrixWorld,this.matrixAutoUpdate=!1,this.pointMap=i,this.update()},THREE.CameraHelper.prototype=Object.create(THREE.LineSegments.prototype),THREE.CameraHelper.prototype.constructor=THREE.CameraHelper;THREE.CameraHelper.prototype.update=function(){var t,e,r=new THREE.Vector3,i=new THREE.Camera;function n(n,o,a,s){r.set(o,a,s).unproject(i);var h=e[n];if(void 0!==h)for(var c=0,u=h.length;c<u;c++)t.vertices[h[c]].copy(r)}return function(){t=this.geometry,e=this.pointMap;i.projectionMatrix.copy(this.camera.projectionMatrix),n("c",0,0,-1),n("t",0,0,1),n("n1",-1,-1,-1),n("n2",1,-1,-1),n("n3",-1,1,-1),n("n4",1,1,-1),n("f1",-1,-1,1),n("f2",1,-1,1),n("f3",-1,1,1),n("f4",1,1,1),n("u1",.7,1.1,-1),n("u2",-.7,1.1,-1),n("u3",0,2,-1),n("cf1",-1,0,1),n("cf2",1,0,1),n("cf3",0,-1,1),n("cf4",0,1,1),n("cn1",-1,0,-1),n("cn2",1,0,-1),n("cn3",0,-1,-1),n("cn4",0,1,-1),t.verticesNeedUpdate=!0}}(),THREE.DirectionalLightHelper=function(t,e){THREE.Object3D.call(this),this.light=t,this.light.updateMatrixWorld(),this.matrix=t.matrixWorld,this.matrixAutoUpdate=!1,e=e||1;var r=new THREE.Geometry;r.vertices.push(new THREE.Vector3(-e,e,0),new THREE.Vector3(e,e,0),new THREE.Vector3(e,-e,0),new THREE.Vector3(-e,-e,0),new THREE.Vector3(-e,e,0));var i=new THREE.LineBasicMaterial({fog:!1});i.color.copy(this.light.color).multiplyScalar(this.light.intensity),this.lightPlane=new THREE.Line(r,i),this.add(this.lightPlane),(r=new THREE.Geometry).vertices.push(new THREE.Vector3,new THREE.Vector3),(i=new THREE.LineBasicMaterial({fog:!1})).color.copy(this.light.color).multiplyScalar(this.light.intensity),this.targetLine=new THREE.Line(r,i),this.add(this.targetLine),this.update()},THREE.DirectionalLightHelper.prototype=Object.create(THREE.Object3D.prototype),THREE.DirectionalLightHelper.prototype.constructor=THREE.DirectionalLightHelper,THREE.DirectionalLightHelper.prototype.dispose=function(){this.lightPlane.geometry.dispose(),this.lightPlane.material.dispose(),this.targetLine.geometry.dispose(),this.targetLine.material.dispose()},THREE.DirectionalLightHelper.prototype.update=function(){var t=new THREE.Vector3,e=new THREE.Vector3,r=new THREE.Vector3;return function(){t.setFromMatrixPosition(this.light.matrixWorld),e.setFromMatrixPosition(this.light.target.matrixWorld),r.subVectors(e,t),this.lightPlane.lookAt(r),this.lightPlane.material.color.copy(this.light.color).multiplyScalar(this.light.intensity),this.targetLine.geometry.vertices[1].copy(r),this.targetLine.geometry.verticesNeedUpdate=!0,this.targetLine.material.color.copy(this.lightPlane.material.color)}}(),THREE.EdgesHelper=function(t,e,r){var i=void 0!==e?e:16777215;THREE.LineSegments.call(this,new THREE.EdgesGeometry(t.geometry,r),new THREE.LineBasicMaterial({color:i})),this.matrix=t.matrixWorld,this.matrixAutoUpdate=!1},THREE.EdgesHelper.prototype=Object.create(THREE.LineSegments.prototype),THREE.EdgesHelper.prototype.constructor=THREE.EdgesHelper,THREE.FaceNormalsHelper=function(t,e,r,i){this.object=t,this.size=void 0!==e?e:1;var n=void 0!==r?r:16776960,o=void 0!==i?i:1,a=0,s=this.object.geometry;s instanceof THREE.Geometry?a=s.faces.length:console.warn("THREE.FaceNormalsHelper: only THREE.Geometry is supported. Use THREE.VertexNormalsHelper, instead.");var h=new THREE.BufferGeometry,c=new THREE.Float32Attribute(2*a*3,3);h.addAttribute("position",c),THREE.LineSegments.call(this,h,new THREE.LineBasicMaterial({color:n,linewidth:o})),this.matrixAutoUpdate=!1,this.update()},THREE.FaceNormalsHelper.prototype=Object.create(THREE.LineSegments.prototype),THREE.FaceNormalsHelper.prototype.constructor=THREE.FaceNormalsHelper,THREE.FaceNormalsHelper.prototype.update=function(){var t=new THREE.Vector3,e=new THREE.Vector3,r=new THREE.Matrix3;return function(){this.object.updateMatrixWorld(!0),r.getNormalMatrix(this.object.matrixWorld);for(var i=this.object.matrixWorld,n=this.geometry.attributes.position,o=this.object.geometry,a=o.vertices,s=o.faces,h=0,c=0,u=s.length;c<u;c++){var l=s[c],E=l.normal;t.copy(a[l.a]).add(a[l.b]).add(a[l.c]).divideScalar(3).applyMatrix4(i),e.copy(E).applyMatrix3(r).normalize().multiplyScalar(this.size).add(t),n.setXYZ(h,t.x,t.y,t.z),h+=1,n.setXYZ(h,e.x,e.y,e.z),h+=1}return n.needsUpdate=!0,this}}(),THREE.GridHelper=function(t,e){var r=new THREE.Geometry,i=new THREE.LineBasicMaterial({vertexColors:THREE.VertexColors});this.color1=new THREE.Color(4473924),this.color2=new THREE.Color(8947848);for(var n=-t;n<=t;n+=e){r.vertices.push(new THREE.Vector3(-t,0,n),new THREE.Vector3(t,0,n),new THREE.Vector3(n,0,-t),new THREE.Vector3(n,0,t));var o=0===n?this.color1:this.color2;r.colors.push(o,o,o,o)}THREE.LineSegments.call(this,r,i)},THREE.GridHelper.prototype=Object.create(THREE.LineSegments.prototype),THREE.GridHelper.prototype.constructor=THREE.GridHelper,THREE.GridHelper.prototype.setColors=function(t,e){this.color1.set(t),this.color2.set(e),this.geometry.colorsNeedUpdate=!0},THREE.HemisphereLightHelper=function(t,e){THREE.Object3D.call(this),this.light=t,this.light.updateMatrixWorld(),this.matrix=t.matrixWorld,this.matrixAutoUpdate=!1,this.colors=[new THREE.Color,new THREE.Color];var r=new THREE.SphereGeometry(e,4,2);r.rotateX(-Math.PI/2);for(var i=0;i<8;i++)r.faces[i].color=this.colors[i<4?0:1];var n=new THREE.MeshBasicMaterial({vertexColors:THREE.FaceColors,wireframe:!0});this.lightSphere=new THREE.Mesh(r,n),this.add(this.lightSphere),this.update()},THREE.HemisphereLightHelper.prototype=Object.create(THREE.Object3D.prototype),THREE.HemisphereLightHelper.prototype.constructor=THREE.HemisphereLightHelper,THREE.HemisphereLightHelper.prototype.dispose=function(){this.lightSphere.geometry.dispose(),this.lightSphere.material.dispose()},THREE.HemisphereLightHelper.prototype.update=function(){var t=new THREE.Vector3;return function(){this.colors[0].copy(this.light.color).multiplyScalar(this.light.intensity),this.colors[1].copy(this.light.groundColor).multiplyScalar(this.light.intensity),this.lightSphere.lookAt(t.setFromMatrixPosition(this.light.matrixWorld).negate()),this.lightSphere.geometry.colorsNeedUpdate=!0}}(),THREE.PointLightHelper=function(t,e){this.light=t,this.light.updateMatrixWorld();var r=new THREE.SphereGeometry(e,4,2),i=new THREE.MeshBasicMaterial({wireframe:!0,fog:!1});i.color.copy(this.light.color).multiplyScalar(this.light.intensity),THREE.Mesh.call(this,r,i),this.matrix=this.light.matrixWorld,this.matrixAutoUpdate=!1},THREE.PointLightHelper.prototype=Object.create(THREE.Mesh.prototype),THREE.PointLightHelper.prototype.constructor=THREE.PointLightHelper,THREE.PointLightHelper.prototype.dispose=function(){this.geometry.dispose(),this.material.dispose()},THREE.PointLightHelper.prototype.update=function(){this.material.color.copy(this.light.color).multiplyScalar(this.light.intensity)},THREE.SkeletonHelper=function(t){this.bones=this.getBoneList(t);for(var e=new THREE.Geometry,r=0;r<this.bones.length;r++){this.bones[r].parent instanceof THREE.Bone&&(e.vertices.push(new THREE.Vector3),e.vertices.push(new THREE.Vector3),e.colors.push(new THREE.Color(0,0,1)),e.colors.push(new THREE.Color(0,1,0)))}e.dynamic=!0;var i=new THREE.LineBasicMaterial({vertexColors:THREE.VertexColors,depthTest:!1,depthWrite:!1,transparent:!0});THREE.LineSegments.call(this,e,i),this.root=t,this.matrix=t.matrixWorld,this.matrixAutoUpdate=!1,this.update()},THREE.SkeletonHelper.prototype=Object.create(THREE.LineSegments.prototype),THREE.SkeletonHelper.prototype.constructor=THREE.SkeletonHelper,THREE.SkeletonHelper.prototype.getBoneList=function(t){var e=[];t instanceof THREE.Bone&&e.push(t);for(var r=0;r<t.children.length;r++)e.push.apply(e,this.getBoneList(t.children[r]));return e},THREE.SkeletonHelper.prototype.update=function(){for(var t=this.geometry,e=(new THREE.Matrix4).getInverse(this.root.matrixWorld),r=new THREE.Matrix4,i=0,n=0;n<this.bones.length;n++){var o=this.bones[n];o.parent instanceof THREE.Bone&&(r.multiplyMatrices(e,o.matrixWorld),t.vertices[i].setFromMatrixPosition(r),r.multiplyMatrices(e,o.parent.matrixWorld),t.vertices[i+1].setFromMatrixPosition(r),i+=2)}t.verticesNeedUpdate=!0,t.computeBoundingSphere()},THREE.SpotLightHelper=function(t){THREE.Object3D.call(this),this.light=t,this.light.updateMatrixWorld(),this.matrix=t.matrixWorld,this.matrixAutoUpdate=!1;var e=new THREE.CylinderGeometry(0,1,1,8,1,!0);e.translate(0,-.5,0),e.rotateX(-Math.PI/2);var r=new THREE.MeshBasicMaterial({wireframe:!0,fog:!1});this.cone=new THREE.Mesh(e,r),this.add(this.cone),this.update()},THREE.SpotLightHelper.prototype=Object.create(THREE.Object3D.prototype),THREE.SpotLightHelper.prototype.constructor=THREE.SpotLightHelper,THREE.SpotLightHelper.prototype.dispose=function(){this.cone.geometry.dispose(),this.cone.material.dispose()},THREE.SpotLightHelper.prototype.update=function(){var t=new THREE.Vector3,e=new THREE.Vector3;return function(){var r=this.light.distance?this.light.distance:1e4,i=r*Math.tan(this.light.angle);this.cone.scale.set(i,i,r),t.setFromMatrixPosition(this.light.matrixWorld),e.setFromMatrixPosition(this.light.target.matrixWorld),this.cone.lookAt(e.sub(t)),this.cone.material.color.copy(this.light.color).multiplyScalar(this.light.intensity)}}(),THREE.VertexNormalsHelper=function(t,e,r,i){this.object=t,this.size=void 0!==e?e:1;var n=void 0!==r?r:16711680,o=void 0!==i?i:1,a=0,s=this.object.geometry;s instanceof THREE.Geometry?a=3*s.faces.length:s instanceof THREE.BufferGeometry&&(a=s.attributes.normal.count);var h=new THREE.BufferGeometry,c=new THREE.Float32Attribute(2*a*3,3);h.addAttribute("position",c),THREE.LineSegments.call(this,h,new THREE.LineBasicMaterial({color:n,linewidth:o})),this.matrixAutoUpdate=!1,this.update()},THREE.VertexNormalsHelper.prototype=Object.create(THREE.LineSegments.prototype),THREE.VertexNormalsHelper.prototype.constructor=THREE.VertexNormalsHelper,THREE.VertexNormalsHelper.prototype.update=function(){var t=new THREE.Vector3,e=new THREE.Vector3,r=new THREE.Matrix3;return function(){var i=["a","b","c"];this.object.updateMatrixWorld(!0),r.getNormalMatrix(this.object.matrixWorld);var n=this.object.matrixWorld,o=this.geometry.attributes.position,a=this.object.geometry;if(a instanceof THREE.Geometry)for(var s=a.vertices,h=a.faces,c=0,u=0,l=h.length;u<l;u++)for(var E=h[u],p=0,d=E.vertexNormals.length;p<d;p++){var f=s[E[i[p]]],m=E.vertexNormals[p];t.copy(f).applyMatrix4(n),e.copy(m).applyMatrix3(r).normalize().multiplyScalar(this.size).add(t),o.setXYZ(c,t.x,t.y,t.z),c+=1,o.setXYZ(c,e.x,e.y,e.z),c+=1}else if(a instanceof THREE.BufferGeometry){var T=a.attributes.position,g=a.attributes.normal;for(c=0,p=0,d=T.count;p<d;p++)t.set(T.getX(p),T.getY(p),T.getZ(p)).applyMatrix4(n),e.set(g.getX(p),g.getY(p),g.getZ(p)),e.applyMatrix3(r).normalize().multiplyScalar(this.size).add(t),o.setXYZ(c,t.x,t.y,t.z),c+=1,o.setXYZ(c,e.x,e.y,e.z),c+=1}return o.needsUpdate=!0,this}}(),THREE.WireframeHelper=function(t,e){var r=void 0!==e?e:16777215;THREE.LineSegments.call(this,new THREE.WireframeGeometry(t.geometry),new THREE.LineBasicMaterial({color:r})),this.matrix=t.matrixWorld,this.matrixAutoUpdate=!1},THREE.WireframeHelper.prototype=Object.create(THREE.LineSegments.prototype),THREE.WireframeHelper.prototype.constructor=THREE.WireframeHelper,THREE.ImmediateRenderObject=function(t){THREE.Object3D.call(this),this.material=t,this.render=function(t){}},THREE.ImmediateRenderObject.prototype=Object.create(THREE.Object3D.prototype),THREE.ImmediateRenderObject.prototype.constructor=THREE.ImmediateRenderObject,THREE.MorphBlendMesh=function(t,e){THREE.Mesh.call(this,t,e),this.animationsMap={},this.animationsList=[];var r=this.geometry.morphTargets.length,i="__default",n=r-1,o=r/1;this.createAnimation(i,0,n,o),this.setAnimationWeight(i,1)},THREE.MorphBlendMesh.prototype=Object.create(THREE.Mesh.prototype),THREE.MorphBlendMesh.prototype.constructor=THREE.MorphBlendMesh,THREE.MorphBlendMesh.prototype.createAnimation=function(t,e,r,i){var n={start:e,end:r,length:r-e+1,fps:i,duration:(r-e)/i,lastFrame:0,currentFrame:0,active:!1,time:0,direction:1,weight:1,directionBackwards:!1,mirroredLoop:!1};this.animationsMap[t]=n,this.animationsList.push(n)},THREE.MorphBlendMesh.prototype.autoCreateAnimations=function(t){for(var e,r=/([a-z]+)_?(\d+)/,i={},n=this.geometry,o=0,a=n.morphTargets.length;o<a;o++){var s=n.morphTargets[o].name.match(r);if(s&&s.length>1)i[h=s[1]]||(i[h]={start:1/0,end:-1/0}),o<(c=i[h]).start&&(c.start=o),o>c.end&&(c.end=o),e||(e=h)}for(var h in i){var c=i[h];this.createAnimation(h,c.start,c.end,t)}this.firstAnimation=e},THREE.MorphBlendMesh.prototype.setAnimationDirectionForward=function(t){var e=this.animationsMap[t];e&&(e.direction=1,e.directionBackwards=!1)},THREE.MorphBlendMesh.prototype.setAnimationDirectionBackward=function(t){var e=this.animationsMap[t];e&&(e.direction=-1,e.directionBackwards=!0)},THREE.MorphBlendMesh.prototype.setAnimationFPS=function(t,e){var r=this.animationsMap[t];r&&(r.fps=e,r.duration=(r.end-r.start)/r.fps)},THREE.MorphBlendMesh.prototype.setAnimationDuration=function(t,e){var r=this.animationsMap[t];r&&(r.duration=e,r.fps=(r.end-r.start)/r.duration)},THREE.MorphBlendMesh.prototype.setAnimationWeight=function(t,e){var r=this.animationsMap[t];r&&(r.weight=e)},THREE.MorphBlendMesh.prototype.setAnimationTime=function(t,e){var r=this.animationsMap[t];r&&(r.time=e)},THREE.MorphBlendMesh.prototype.getAnimationTime=function(t){var e=0,r=this.animationsMap[t];return r&&(e=r.time),e},THREE.MorphBlendMesh.prototype.getAnimationDuration=function(t){var e=-1,r=this.animationsMap[t];return r&&(e=r.duration),e},THREE.MorphBlendMesh.prototype.playAnimation=function(t){var e=this.animationsMap[t];e?(e.time=0,e.active=!0):console.warn("THREE.MorphBlendMesh: animation["+t+"] undefined in .playAnimation()")},THREE.MorphBlendMesh.prototype.stopAnimation=function(t){var e=this.animationsMap[t];e&&(e.active=!1)},THREE.MorphBlendMesh.prototype.update=function(t){for(var e=0,r=this.animationsList.length;e<r;e++){var i=this.animationsList[e];if(i.active){var n=i.duration/i.length;i.time+=i.direction*t,i.mirroredLoop?(i.time>i.duration||i.time<0)&&(i.direction*=-1,i.time>i.duration&&(i.time=i.duration,i.directionBackwards=!0),i.time<0&&(i.time=0,i.directionBackwards=!1)):(i.time=i.time%i.duration,i.time<0&&(i.time+=i.duration));var o=i.start+THREE.Math.clamp(Math.floor(i.time/n),0,i.length-1),a=i.weight;o!==i.currentFrame&&(this.morphTargetInfluences[i.lastFrame]=0,this.morphTargetInfluences[i.currentFrame]=1*a,this.morphTargetInfluences[o]=0,i.lastFrame=i.currentFrame,i.currentFrame=o);var s=i.time%n/n;i.directionBackwards&&(s=1-s),i.currentFrame!==i.lastFrame?(this.morphTargetInfluences[i.currentFrame]=s*a,this.morphTargetInfluences[i.lastFrame]=(1-s)*a):this.morphTargetInfluences[i.currentFrame]=a}}};
